

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Fri Jan 09 17:11:42 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           	psect	idataCOMRAM
    54  00089C                     __pidataCOMRAM:
    55                           	opt stack 0
    56                           
    57                           ;initializer for _end
    58  00089C  7E                 	db	126
    59  00089D  00                 	db	0
    60                           
    61                           ;initializer for _enter
    62  00089E  0A                 	db	10
    63  00089F  00                 	db	0
    64                           
    65                           ;initializer for _mid
    66  0008A0  2B                 	db	43
    67  0008A1  00                 	db	0
    68                           
    69                           ;initializer for _start
    70  0008A2  23                 	db	35
    71  0008A3  00                 	db	0
    72                           
    73                           ;initializer for _timer0
    74  0008A4  E890               	dw	59536
    75                           
    76                           ;initializer for _x
    77  0008A6  58                 	db	88
    78  0008A7  00                 	db	0
    79                           
    80                           ;initializer for _y
    81  0008A8  59                 	db	89
    82  0008A9  00                 	db	0
    83                           
    84                           ;initializer for _z
    85  0008AA  5A                 	db	90
    86  0008AB  00                 	db	0
    87  0000                     _BAUDCON	set	4024
    88  0000                     _INTCONbits	set	4082
    89  0000                     _LATC	set	3979
    90  0000                     _PIE1	set	3997
    91  0000                     _PIE1bits	set	3997
    92  0000                     _PIR1bits	set	3998
    93  0000                     _PIR2bits	set	4001
    94  0000                     _PORTCbits	set	3970
    95  0000                     _RCREG	set	4014
    96  0000                     _RCSTA	set	4011
    97  0000                     _RCSTAbits	set	4011
    98  0000                     _SPBRG	set	4015
    99  0000                     _SPBRGH	set	4016
   100  0000                     _SSPADD	set	4040
   101  0000                     _SSPBUF	set	4041
   102  0000                     _SSPCON1	set	4038
   103  0000                     _SSPCON1bits	set	4038
   104  0000                     _SSPCON2	set	4037
   105  0000                     _SSPCON2bits	set	4037
   106  0000                     _SSPSTAT	set	4039
   107  0000                     _SSPSTATbits	set	4039
   108  0000                     _T0CON	set	4053
   109  0000                     _T0CONbits	set	4053
   110  0000                     _TMR0H	set	4055
   111  0000                     _TMR0L	set	4054
   112  0000                     _TRISBbits	set	3987
   113  0000                     _TRISC	set	3988
   114  0000                     _TRISCbits	set	3988
   115  0000                     _TXREG	set	4013
   116  0000                     _TXSTA	set	4012
   117  0000                     _TXSTAbits	set	4012
   118                           
   119                           ; #config settings
   120  0000                     
   121                           	psect	cinit
   122  0005FE                     __pcinit:
   123                           	opt stack 0
   124  0005FE                     start_initialization:
   125                           	opt stack 0
   126  0005FE                     __initialization:
   127                           	opt stack 0
   128                           
   129                           ; Clear objects allocated to COMRAM (26 bytes)
   130  0005FE  EE00  F028         	lfsr	0,__pbssCOMRAM
   131  000602  0E1A               	movlw	26
   132  000604                     clear_0:
   133  000604  6AEE               	clrf	postinc0,c
   134  000606  06E8               	decf	wreg,f,c
   135  000608  E1FD               	bnz	clear_0
   136                           
   137                           ; Initialize objects allocated to COMRAM (16 bytes)
   138                           ; load TBLPTR registers with __pidataCOMRAM
   139  00060A  0E9C               	movlw	low __pidataCOMRAM
   140  00060C  6EF6               	movwf	tblptrl,c
   141  00060E  0E08               	movlw	high __pidataCOMRAM
   142  000610  6EF7               	movwf	tblptrh,c
   143  000612  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   144  000614  6EF8               	movwf	tblptru,c
   145  000616  EE00  F042         	lfsr	0,__pdataCOMRAM
   146  00061A  EE10 F010          	lfsr	1,16
   147  00061E                     copy_data0:
   148  00061E  0009               	tblrd		*+
   149  000620  CFF5 FFEE          	movff	tablat,postinc0
   150  000624  50E5               	movf	postdec1,w,c
   151  000626  50E1               	movf	fsr1l,w,c
   152  000628  E1FA               	bnz	copy_data0
   153  00062A                     end_of_initialization:
   154                           	opt stack 0
   155  00062A                     __end_of__initialization:
   156                           	opt stack 0
   157  00062A  0100               	movlb	0
   158  00062C  EFF5  F003         	goto	_main	;jump to C main() function
   159                           tblptru	equ	0xFF8
   160                           tblptrh	equ	0xFF7
   161                           tblptrl	equ	0xFF6
   162                           tablat	equ	0xFF5
   163                           postinc0	equ	0xFEE
   164                           wreg	equ	0xFE8
   165                           postdec1	equ	0xFE5
   166                           fsr1l	equ	0xFE1
   167                           
   168                           	psect	bssCOMRAM
   169  000028                     __pbssCOMRAM:
   170                           	opt stack 0
   171  000028                     _CaracterRx:
   172                           	opt stack 0
   173  000028                     	ds	2
   174  00002A                     _gyr_x:
   175                           	opt stack 0
   176  00002A                     	ds	2
   177  00002C                     _gyr_y:
   178                           	opt stack 0
   179  00002C                     	ds	2
   180  00002E                     _gyr_z:
   181                           	opt stack 0
   182  00002E                     	ds	2
   183  000030                     _USART_Status:
   184                           	opt stack 0
   185  000030                     	ds	1
   186  000031                     _temperature:
   187                           	opt stack 0
   188  000031                     	ds	1
   189  000032                     _buf:
   190                           	opt stack 0
   191  000032                     	ds	10
   192  00003C                     _acc_x:
   193                           	opt stack 0
   194  00003C                     	ds	2
   195  00003E                     _acc_y:
   196                           	opt stack 0
   197  00003E                     	ds	2
   198  000040                     _acc_z:
   199                           	opt stack 0
   200  000040                     	ds	2
   201                           tblptru	equ	0xFF8
   202                           tblptrh	equ	0xFF7
   203                           tblptrl	equ	0xFF6
   204                           tablat	equ	0xFF5
   205                           postinc0	equ	0xFEE
   206                           wreg	equ	0xFE8
   207                           postdec1	equ	0xFE5
   208                           fsr1l	equ	0xFE1
   209                           
   210                           	psect	dataCOMRAM
   211  000042                     __pdataCOMRAM:
   212                           	opt stack 0
   213  000042                     _end:
   214                           	opt stack 0
   215  000042                     	ds	2
   216  000044                     _enter:
   217                           	opt stack 0
   218  000044                     	ds	2
   219  000046                     _mid:
   220                           	opt stack 0
   221  000046                     	ds	2
   222  000048                     _start:
   223                           	opt stack 0
   224  000048                     	ds	2
   225  00004A                     _timer0:
   226                           	opt stack 0
   227  00004A                     	ds	2
   228  00004C                     _x:
   229                           	opt stack 0
   230  00004C                     	ds	2
   231  00004E                     _y:
   232                           	opt stack 0
   233  00004E                     	ds	2
   234  000050                     _z:
   235                           	opt stack 0
   236  000050                     	ds	2
   237                           tblptru	equ	0xFF8
   238                           tblptrh	equ	0xFF7
   239                           tblptrl	equ	0xFF6
   240                           tablat	equ	0xFF5
   241                           postinc0	equ	0xFEE
   242                           wreg	equ	0xFE8
   243                           postdec1	equ	0xFE5
   244                           fsr1l	equ	0xFE1
   245                           
   246                           	psect	cstackBANK0
   247  000060                     __pcstackBANK0:
   248                           	opt stack 0
   249  000060                     ??_IdleI2C:
   250  000060                     baudUSART@baudconfig:
   251                           	opt stack 0
   252  000060                     OpenI2C@slew:
   253                           	opt stack 0
   254  000060                     OpenUSART@spbrg:
   255                           	opt stack 0
   256                           
   257                           ; 2 bytes @ 0x0
   258  000060                     	ds	1
   259  000061                     ??_WriteI2C:
   260  000061                     OpenI2C@sync_mode:
   261                           	opt stack 0
   262                           
   263                           ; 1 bytes @ 0x1
   264  000061                     	ds	1
   265  000062                     ??_OpenUSART:
   266  000062                     I2C_open@slew:
   267                           	opt stack 0
   268  000062                     WriteI2C@data_out:
   269                           	opt stack 0
   270                           
   271                           ; 1 bytes @ 0x2
   272  000062                     	ds	1
   273  000063                     I2C_open@baud_clock:
   274                           	opt stack 0
   275  000063                     I2C_send@data:
   276                           	opt stack 0
   277                           
   278                           ; 1 bytes @ 0x3
   279  000063                     	ds	1
   280  000064                     I2C_open@sync_mode:
   281                           	opt stack 0
   282  000064                     I2C_send@reg:
   283                           	opt stack 0
   284                           
   285                           ; 1 bytes @ 0x4
   286  000064                     	ds	1
   287  000065                     I2C_send@status:
   288                           	opt stack 0
   289  000065                     OpenUSART@config:
   290                           	opt stack 0
   291                           
   292                           ; 1 bytes @ 0x5
   293  000065                     	ds	1
   294  000066                     I2C_write_reg_acc@valor:
   295                           	opt stack 0
   296  000066                     init_UART@spbrg:
   297                           	opt stack 0
   298                           
   299                           ; 2 bytes @ 0x6
   300  000066                     	ds	1
   301  000067                     I2C_write_reg_acc@reg:
   302                           	opt stack 0
   303                           
   304                           ; 1 bytes @ 0x7
   305  000067                     	ds	1
   306  000068                     init_UART@config:
   307                           	opt stack 0
   308  000068                     I2C_turn_on_acc@data_rate:
   309                           	opt stack 0
   310                           
   311                           ; 1 bytes @ 0x8
   312  000068                     	ds	1
   313  000069                     init_UART@baudconfig:
   314                           	opt stack 0
   315  000069                     I2C_turn_on_acc@full_scale:
   316                           	opt stack 0
   317                           
   318                           ; 1 bytes @ 0x9
   319  000069                     	ds	1
   320  00006A                     I2C_turn_on_acc@sleep_wakeup:
   321                           	opt stack 0
   322                           
   323                           ; 1 bytes @ 0xA
   324  00006A                     	ds	1
   325  00006B                     I2C_turn_on_acc@mode:
   326                           	opt stack 0
   327                           
   328                           ; 1 bytes @ 0xB
   329  00006B                     	ds	1
   330  00006C                     tblptru	equ	0xFF8
   331                           tblptrh	equ	0xFF7
   332                           tblptrl	equ	0xFF6
   333                           tablat	equ	0xFF5
   334                           postinc0	equ	0xFEE
   335                           wreg	equ	0xFE8
   336                           postdec1	equ	0xFE5
   337                           fsr1l	equ	0xFE1
   338                           
   339                           ; 0 bytes @ 0xC
   340                           
   341                           	psect	cstackCOMRAM
   342  000001                     __pcstackCOMRAM:
   343                           	opt stack 0
   344  000001                     ??_ReadI2C:
   345  000001                     ??i2_IdleI2C:
   346  000001                     ?___lwdiv:
   347                           	opt stack 0
   348  000001                     ?___lwmod:
   349                           	opt stack 0
   350  000001                     OpenTimer0@config:
   351                           	opt stack 0
   352  000001                     ReadUSART@data:
   353                           	opt stack 0
   354  000001                     WriteUSART@data:
   355                           	opt stack 0
   356  000001                     data_acc@ptr:
   357                           	opt stack 0
   358  000001                     WriteTimer0@timer0:
   359                           	opt stack 0
   360  000001                     ___lwdiv@dividend:
   361                           	opt stack 0
   362  000001                     ___lwmod@dividend:
   363                           	opt stack 0
   364                           
   365                           ; 2 bytes @ 0x0
   366  000001                     	ds	1
   367  000002                     ??i2_WriteI2C:
   368  000002                     putsUSART@data:
   369                           	opt stack 0
   370  000002                     getsI2C@rdptr:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0x1
   374  000002                     	ds	1
   375  000003                     ??_data_acc:
   376  000003                     i2WriteI2C@data_out:
   377                           	opt stack 0
   378  000003                     WriteTimer0@timer:
   379                           	opt stack 0
   380  000003                     ___lwdiv@divisor:
   381                           	opt stack 0
   382  000003                     ___lwmod@divisor:
   383                           	opt stack 0
   384                           
   385                           ; 2 bytes @ 0x2
   386  000003                     	ds	1
   387  000004                     getsI2C@length:
   388                           	opt stack 0
   389  000004                     i2I2C_send@data:
   390                           	opt stack 0
   391                           
   392                           ; 1 bytes @ 0x3
   393  000004                     	ds	1
   394  000005                     ??_uart_isr:
   395  000005                     ??_getsI2C:
   396  000005                     ___lwmod@counter:
   397                           	opt stack 0
   398  000005                     i2I2C_send@reg:
   399                           	opt stack 0
   400  000005                     ___lwdiv@quotient:
   401                           	opt stack 0
   402                           
   403                           ; 2 bytes @ 0x4
   404  000005                     	ds	1
   405  000006                     i2I2C_send@status:
   406                           	opt stack 0
   407                           
   408                           ; 1 bytes @ 0x5
   409  000006                     	ds	1
   410  000007                     ___lwdiv@counter:
   411                           	opt stack 0
   412  000007                     I2C_read_data_acc@rdptr:
   413                           	opt stack 0
   414                           
   415                           ; 2 bytes @ 0x6
   416  000007                     	ds	1
   417  000008                     utoa@buf:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x7
   421  000008                     	ds	1
   422  000009                     I2C_read_data_acc@reg:
   423                           	opt stack 0
   424                           
   425                           ; 1 bytes @ 0x8
   426  000009                     	ds	1
   427  00000A                     utoa@val:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x9
   431  00000A                     	ds	2
   432  00000C                     utoa@base:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0xB
   436  00000C                     	ds	2
   437  00000E                     utoa@v:
   438                           	opt stack 0
   439                           
   440                           ; 2 bytes @ 0xD
   441  00000E                     	ds	2
   442  000010                     utoa@c:
   443                           	opt stack 0
   444                           
   445                           ; 1 bytes @ 0xF
   446  000010                     	ds	1
   447  000011                     itoa@buf:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x10
   451  000011                     	ds	2
   452  000013                     itoa@val:
   453                           	opt stack 0
   454                           
   455                           ; 2 bytes @ 0x12
   456  000013                     	ds	2
   457  000015                     itoa@base:
   458                           	opt stack 0
   459                           
   460                           ; 2 bytes @ 0x14
   461  000015                     	ds	2
   462  000017                     itoa@cp:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0x16
   466  000017                     	ds	2
   467  000019                     ??_Interruption:
   468                           
   469                           ; 0 bytes @ 0x18
   470  000019                     	ds	15
   471                           tblptru	equ	0xFF8
   472                           tblptrh	equ	0xFF7
   473                           tblptrl	equ	0xFF6
   474                           tablat	equ	0xFF5
   475                           postinc0	equ	0xFEE
   476                           wreg	equ	0xFE8
   477                           postdec1	equ	0xFE5
   478                           fsr1l	equ	0xFE1
   479                           
   480 ;;
   481 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   482 ;;
   483 ;; *************** function _main *****************
   484 ;; Defined at:
   485 ;;		line 34 in file "main.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;		None
   488 ;; Auto vars:     Size  Location     Type
   489 ;;		None
   490 ;; Return value:  Size  Location     Type
   491 ;;		None               void
   492 ;; Registers used:
   493 ;;		wreg, status,2, status,0, cstack
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   499 ;;      Params:         0       0       0       0       0       0       0       0       0
   500 ;;      Locals:         0       0       0       0       0       0       0       0       0
   501 ;;      Temps:          0       0       0       0       0       0       0       0       0
   502 ;;      Totals:         0       0       0       0       0       0       0       0       0
   503 ;;Total ram usage:        0 bytes
   504 ;; Hardware stack levels required when called:   12
   505 ;; This function calls:
   506 ;;		_init_ACC
   507 ;;		_init_I2C
   508 ;;		_init_UART
   509 ;; This function is called by:
   510 ;;		Startup code after reset
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           	psect	text0
   515  0007EA                     __ptext0:
   516                           	opt stack 0
   517  0007EA                     _main:
   518                           	opt stack 19
   519                           
   520                           ;main.c: 35: TRISC = 0b00000000;
   521                           
   522                           ;incstack = 0
   523  0007EA  0E00               	movlw	0
   524  0007EC  6E94               	movwf	3988,c	;volatile
   525                           
   526                           ;main.c: 36: LATC = 0b00000000;
   527  0007EE  0E00               	movlw	0
   528  0007F0  6E8B               	movwf	3979,c	;volatile
   529                           
   530                           ;main.c: 37: init_UART();
   531  0007F2  EC9D  F002         	call	_init_UART	;wreg free
   532                           
   533                           ;main.c: 38: init_I2C();
   534  0007F6  EC29  F004         	call	_init_I2C	;wreg free
   535                           
   536                           ;main.c: 40: init_ACC();
   537  0007FA  EC0F  F004         	call	_init_ACC	;wreg free
   538                           
   539                           ;main.c: 41: PORTCbits.RC0=1;;
   540  0007FE  8082               	bsf	3970,0,c	;volatile
   541                           
   542                           ;main.c: 42: PORTCbits.RC1=1;;
   543  000800  8282               	bsf	3970,1,c	;volatile
   544  000802                     l66:
   545  000802  D7FF               	goto	l66
   546  000804                     __end_of_main:
   547                           	opt stack 0
   548                           tblptru	equ	0xFF8
   549                           tblptrh	equ	0xFF7
   550                           tblptrl	equ	0xFF6
   551                           tablat	equ	0xFF5
   552                           postinc0	equ	0xFEE
   553                           wreg	equ	0xFE8
   554                           postdec1	equ	0xFE5
   555                           fsr1l	equ	0xFE1
   556                           
   557 ;; *************** function _init_UART *****************
   558 ;; Defined at:
   559 ;;		line 3 in file "uartFunct.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;		None
   562 ;; Auto vars:     Size  Location     Type
   563 ;;  spbrg           2    6[BANK0 ] unsigned int 
   564 ;;  baudconfig      1    9[BANK0 ] unsigned char 
   565 ;;  config          1    8[BANK0 ] unsigned char 
   566 ;; Return value:  Size  Location     Type
   567 ;;		None               void
   568 ;; Registers used:
   569 ;;		wreg, status,2, status,0, cstack
   570 ;; Tracked objects:
   571 ;;		On entry : 0/0
   572 ;;		On exit  : 0/0
   573 ;;		Unchanged: 0/0
   574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   575 ;;      Params:         0       0       0       0       0       0       0       0       0
   576 ;;      Locals:         0       4       0       0       0       0       0       0       0
   577 ;;      Temps:          0       0       0       0       0       0       0       0       0
   578 ;;      Totals:         0       4       0       0       0       0       0       0       0
   579 ;;Total ram usage:        4 bytes
   580 ;; Hardware stack levels used:    1
   581 ;; Hardware stack levels required when called:    7
   582 ;; This function calls:
   583 ;;		_OpenUSART
   584 ;;		_baudUSART
   585 ;; This function is called by:
   586 ;;		_main
   587 ;; This function uses a non-reentrant model
   588 ;;
   589                           
   590                           	psect	text1
   591  00053A                     __ptext1:
   592                           	opt stack 0
   593  00053A                     _init_UART:
   594                           	opt stack 23
   595                           
   596                           ;uartFunct.c: 4: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
   597                           
   598                           ;incstack = 0
   599  00053A  0E4F               	movlw	79
   600  00053C  16AB               	andwf	4011,f,c	;volatile
   601  00053E  9AAC               	bcf	4012,5,c	;volatile
   602  000540  0ECF               	movlw	207
   603  000542  169D               	andwf	3997,f,c	;volatile
   604                           
   605                           ;uartFunct.c: 6: unsigned char config = 0b01111111 & 0b11111111 & 0b11111110 & 0b1111110
      +                          1 & 0b11111111&0b11111111;
   606  000544  0E7C               	movlw	124
   607  000546  0100               	movlb	0	; () banked
   608  000548  6F68               	movwf	init_UART@config& (0+255),b
   609                           
   610                           ; BSR set to: 0
   611                           ;uartFunct.c: 7: unsigned int spbrg = 1249;
   612  00054A  0E04               	movlw	4
   613  00054C  0100               	movlb	0	; () banked
   614  00054E  6F67               	movwf	(init_UART@spbrg+1)& (0+255),b
   615  000550  0EE1               	movlw	225
   616  000552  0100               	movlb	0	; () banked
   617  000554  6F66               	movwf	init_UART@spbrg& (0+255),b
   618                           
   619                           ; BSR set to: 0
   620                           ;uartFunct.c: 8: OpenUSART(config, spbrg);
   621  000556  C066  F060         	movff	init_UART@spbrg,OpenUSART@spbrg
   622  00055A  C067  F061         	movff	init_UART@spbrg+1,OpenUSART@spbrg+1
   623  00055E  0100               	movlb	0	; () banked
   624  000560  5168               	movf	init_UART@config& (0+255),w,b
   625  000562  ECA6  F001         	call	_OpenUSART
   626                           
   627                           ;uartFunct.c: 9: unsigned char baudconfig = 0b11111111 & 0b11111110 & 0b11101111&0b11011
      +                          111;
   628  000566  0ECE               	movlw	206
   629  000568  0100               	movlb	0	; () banked
   630  00056A  6F69               	movwf	init_UART@baudconfig& (0+255),b
   631                           
   632                           ; BSR set to: 0
   633                           ;uartFunct.c: 10: baudUSART(baudconfig);
   634  00056C  0100               	movlb	0	; () banked
   635  00056E  5169               	movf	init_UART@baudconfig& (0+255),w,b
   636  000570  EC66  F004         	call	_baudUSART
   637                           
   638                           ;uartFunct.c: 11: INTCONbits.GIE = 1;
   639  000574  8EF2               	bsf	intcon,7,c	;volatile
   640                           
   641                           ;uartFunct.c: 12: INTCONbits.PEIE = 1;
   642  000576  8CF2               	bsf	intcon,6,c	;volatile
   643                           
   644                           ;uartFunct.c: 13: PIE1bits.RCIE = 1;
   645  000578  8A9D               	bsf	3997,5,c	;volatile
   646  00057A  0012               	return	
   647  00057C                     __end_of_init_UART:
   648                           	opt stack 0
   649                           tblptru	equ	0xFF8
   650                           tblptrh	equ	0xFF7
   651                           tblptrl	equ	0xFF6
   652                           tablat	equ	0xFF5
   653                           intcon	equ	0xFF2
   654                           postinc0	equ	0xFEE
   655                           wreg	equ	0xFE8
   656                           postdec1	equ	0xFE5
   657                           fsr1l	equ	0xFE1
   658                           
   659 ;; *************** function _baudUSART *****************
   660 ;; Defined at:
   661 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\ubaud.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;  baudconfig      1    wreg     unsigned char 
   664 ;; Auto vars:     Size  Location     Type
   665 ;;  baudconfig      1    0[BANK0 ] unsigned char 
   666 ;; Return value:  Size  Location     Type
   667 ;;		None               void
   668 ;; Registers used:
   669 ;;		wreg
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   675 ;;      Params:         0       0       0       0       0       0       0       0       0
   676 ;;      Locals:         0       1       0       0       0       0       0       0       0
   677 ;;      Temps:          0       0       0       0       0       0       0       0       0
   678 ;;      Totals:         0       1       0       0       0       0       0       0       0
   679 ;;Total ram usage:        1 bytes
   680 ;; Hardware stack levels used:    1
   681 ;; Hardware stack levels required when called:    6
   682 ;; This function calls:
   683 ;;		Nothing
   684 ;; This function is called by:
   685 ;;		_init_UART
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689                           	psect	text2
   690  0008CC                     __ptext2:
   691                           	opt stack 0
   692  0008CC                     _baudUSART:
   693                           	opt stack 23
   694                           
   695                           ;incstack = 0
   696                           ;baudUSART@baudconfig stored from wreg
   697  0008CC  0100               	movlb	0	; () banked
   698  0008CE  6F60               	movwf	baudUSART@baudconfig& (0+255),b
   699                           
   700                           ; BSR set to: 0
   701  0008D0  C060  FFB8         	movff	baudUSART@baudconfig,4024	;volatile
   702                           
   703                           ; BSR set to: 0
   704  0008D4  0012               	return	
   705  0008D6                     __end_of_baudUSART:
   706                           	opt stack 0
   707                           tblptru	equ	0xFF8
   708                           tblptrh	equ	0xFF7
   709                           tblptrl	equ	0xFF6
   710                           tablat	equ	0xFF5
   711                           intcon	equ	0xFF2
   712                           postinc0	equ	0xFEE
   713                           wreg	equ	0xFE8
   714                           postdec1	equ	0xFE5
   715                           fsr1l	equ	0xFE1
   716                           
   717 ;; *************** function _OpenUSART *****************
   718 ;; Defined at:
   719 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uopen.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;  config          1    wreg     unsigned char 
   722 ;;  spbrg           2    0[BANK0 ] unsigned int 
   723 ;; Auto vars:     Size  Location     Type
   724 ;;  config          1    5[BANK0 ] unsigned char 
   725 ;; Return value:  Size  Location     Type
   726 ;;		None               void
   727 ;; Registers used:
   728 ;;		wreg, status,2
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   734 ;;      Params:         0       2       0       0       0       0       0       0       0
   735 ;;      Locals:         0       1       0       0       0       0       0       0       0
   736 ;;      Temps:          0       3       0       0       0       0       0       0       0
   737 ;;      Totals:         0       6       0       0       0       0       0       0       0
   738 ;;Total ram usage:        6 bytes
   739 ;; Hardware stack levels used:    1
   740 ;; Hardware stack levels required when called:    6
   741 ;; This function calls:
   742 ;;		Nothing
   743 ;; This function is called by:
   744 ;;		_init_UART
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           	psect	text3
   749  00034C                     __ptext3:
   750                           	opt stack 0
   751  00034C                     _OpenUSART:
   752                           	opt stack 23
   753                           
   754                           ; BSR set to: 0
   755                           ;incstack = 0
   756                           ;OpenUSART@config stored from wreg
   757  00034C  0100               	movlb	0	; () banked
   758  00034E  6F65               	movwf	OpenUSART@config& (0+255),b
   759                           
   760                           ; BSR set to: 0
   761  000350  0E00               	movlw	0
   762  000352  6EAC               	movwf	4012,c	;volatile
   763  000354  0E00               	movlw	0
   764  000356  6EAB               	movwf	4011,c	;volatile
   765                           
   766                           ; BSR set to: 0
   767  000358  0100               	movlb	0	; () banked
   768  00035A  B165               	btfsc	OpenUSART@config& (0+255),0,b
   769                           
   770                           ; BSR set to: 0
   771  00035C  88AC               	bsf	4012,4,c	;volatile
   772                           
   773                           ; BSR set to: 0
   774                           
   775                           ; BSR set to: 0
   776  00035E  0100               	movlb	0	; () banked
   777  000360  A365               	btfss	OpenUSART@config& (0+255),1,b
   778  000362  D002               	goto	l2050
   779                           
   780                           ; BSR set to: 0
   781  000364  8CAC               	bsf	4012,6,c	;volatile
   782  000366  8CAB               	bsf	4011,6,c	;volatile
   783  000368                     l2050:
   784                           
   785                           ; BSR set to: 0
   786  000368  0100               	movlb	0	; () banked
   787  00036A  B565               	btfsc	OpenUSART@config& (0+255),2,b
   788                           
   789                           ; BSR set to: 0
   790  00036C  8EAC               	bsf	4012,7,c	;volatile
   791                           
   792                           ; BSR set to: 0
   793                           
   794                           ; BSR set to: 0
   795  00036E  0100               	movlb	0	; () banked
   796  000370  A765               	btfss	OpenUSART@config& (0+255),3,b
   797  000372  D002               	goto	l505
   798                           
   799                           ; BSR set to: 0
   800  000374  88AB               	bsf	4011,4,c	;volatile
   801  000376  D001               	goto	l2058
   802  000378                     l505:
   803                           
   804                           ; BSR set to: 0
   805  000378  8AAB               	bsf	4011,5,c	;volatile
   806  00037A                     l2058:
   807                           
   808                           ; BSR set to: 0
   809  00037A  0100               	movlb	0	; () banked
   810  00037C  B965               	btfsc	OpenUSART@config& (0+255),4,b
   811                           
   812                           ; BSR set to: 0
   813  00037E  84AC               	bsf	4012,2,c	;volatile
   814                           
   815                           ; BSR set to: 0
   816  000380  989E               	bcf	3998,4,c	;volatile
   817                           
   818                           ; BSR set to: 0
   819  000382  0100               	movlb	0	; () banked
   820  000384  BB65               	btfsc	OpenUSART@config& (0+255),5,b
   821                           
   822                           ; BSR set to: 0
   823  000386  86AB               	bsf	4011,3,c	;volatile
   824                           
   825                           ; BSR set to: 0
   826                           
   827                           ; BSR set to: 0
   828  000388  0100               	movlb	0	; () banked
   829  00038A  AD65               	btfss	OpenUSART@config& (0+255),6,b
   830  00038C  D002               	goto	l509
   831                           
   832                           ; BSR set to: 0
   833  00038E  8A9D               	bsf	3997,5,c	;volatile
   834  000390  D001               	goto	l510
   835  000392                     l509:
   836                           
   837                           ; BSR set to: 0
   838  000392  9A9D               	bcf	3997,5,c	;volatile
   839  000394                     l510:
   840                           
   841                           ; BSR set to: 0
   842  000394  9A9E               	bcf	3998,5,c	;volatile
   843                           
   844                           ; BSR set to: 0
   845  000396  0100               	movlb	0	; () banked
   846  000398  AF65               	btfss	OpenUSART@config& (0+255),7,b
   847  00039A  D002               	goto	l511
   848                           
   849                           ; BSR set to: 0
   850  00039C  889D               	bsf	3997,4,c	;volatile
   851  00039E  D001               	goto	l512
   852  0003A0                     l511:
   853                           
   854                           ; BSR set to: 0
   855  0003A0  989D               	bcf	3997,4,c	;volatile
   856  0003A2                     l512:
   857                           
   858                           ; BSR set to: 0
   859  0003A2  C060  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
   860                           
   861                           ; BSR set to: 0
   862  0003A6  0100               	movlb	0	; () banked
   863  0003A8  C061  F062         	movff	OpenUSART@spbrg+1,??_OpenUSART
   864  0003AC  C062  F063         	movff	??_OpenUSART,??_OpenUSART+1
   865  0003B0  0100               	movlb	0	; () banked
   866  0003B2  6B64               	clrf	(??_OpenUSART+2)& (0+255),b
   867  0003B4  0100               	movlb	0	; () banked
   868  0003B6  5163               	movf	(??_OpenUSART+1)& (0+255),w,b
   869  0003B8  6EB0               	movwf	4016,c	;volatile
   870                           
   871                           ; BSR set to: 0
   872  0003BA  8AAC               	bsf	4012,5,c	;volatile
   873                           
   874                           ; BSR set to: 0
   875  0003BC  8EAB               	bsf	4011,7,c	;volatile
   876                           
   877                           ; BSR set to: 0
   878  0003BE  9C94               	bcf	3988,6,c	;volatile
   879                           
   880                           ; BSR set to: 0
   881  0003C0  8E94               	bsf	3988,7,c	;volatile
   882                           
   883                           ; BSR set to: 0
   884  0003C2  B8AC               	btfsc	4012,4,c	;volatile
   885                           
   886                           ; BSR set to: 0
   887  0003C4  BEAC               	btfsc	4012,7,c	;volatile
   888  0003C6  D001               	goto	l514
   889                           
   890                           ; BSR set to: 0
   891  0003C8  8C94               	bsf	3988,6,c	;volatile
   892  0003CA                     l514:
   893                           
   894                           ; BSR set to: 0
   895  0003CA  0012               	return	
   896  0003CC                     __end_of_OpenUSART:
   897                           	opt stack 0
   898                           tblptru	equ	0xFF8
   899                           tblptrh	equ	0xFF7
   900                           tblptrl	equ	0xFF6
   901                           tablat	equ	0xFF5
   902                           intcon	equ	0xFF2
   903                           postinc0	equ	0xFEE
   904                           wreg	equ	0xFE8
   905                           postdec1	equ	0xFE5
   906                           fsr1l	equ	0xFE1
   907                           
   908 ;; *************** function _init_I2C *****************
   909 ;; Defined at:
   910 ;;		line 45 in file "i2cFunct.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;		None
   913 ;; Auto vars:     Size  Location     Type
   914 ;;		None
   915 ;; Return value:  Size  Location     Type
   916 ;;		None               void
   917 ;; Registers used:
   918 ;;		wreg, status,2, status,0, cstack
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   924 ;;      Params:         0       0       0       0       0       0       0       0       0
   925 ;;      Locals:         0       0       0       0       0       0       0       0       0
   926 ;;      Temps:          0       0       0       0       0       0       0       0       0
   927 ;;      Totals:         0       0       0       0       0       0       0       0       0
   928 ;;Total ram usage:        0 bytes
   929 ;; Hardware stack levels used:    1
   930 ;; Hardware stack levels required when called:    8
   931 ;; This function calls:
   932 ;;		_I2C_open
   933 ;; This function is called by:
   934 ;;		_main
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           	psect	text4
   939  000852                     __ptext4:
   940                           	opt stack 0
   941  000852                     _init_I2C:
   942                           	opt stack 22
   943                           
   944                           ;i2cFunct.c: 46: I2C_open(0b00001000,0b00000000,((48000000/(4*400000))-1));
   945                           
   946                           ; BSR set to: 0
   947                           ;incstack = 0
   948  000852  0E00               	movlw	0
   949  000854  0100               	movlb	0	; () banked
   950  000856  6F62               	movwf	I2C_open@slew& (0+255),b
   951  000858  0E1D               	movlw	29
   952  00085A  0100               	movlb	0	; () banked
   953  00085C  6F63               	movwf	I2C_open@baud_clock& (0+255),b
   954  00085E  0E08               	movlw	8
   955  000860  EC02  F004         	call	_I2C_open
   956  000864  0012               	return	
   957  000866                     __end_of_init_I2C:
   958                           	opt stack 0
   959                           tblptru	equ	0xFF8
   960                           tblptrh	equ	0xFF7
   961                           tblptrl	equ	0xFF6
   962                           tablat	equ	0xFF5
   963                           intcon	equ	0xFF2
   964                           postinc0	equ	0xFEE
   965                           wreg	equ	0xFE8
   966                           postdec1	equ	0xFE5
   967                           fsr1l	equ	0xFE1
   968                           
   969 ;; *************** function _I2C_open *****************
   970 ;; Defined at:
   971 ;;		line 11 in file "i2cFunct.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;  sync_mode       1    wreg     unsigned char 
   974 ;;  slew            1    2[BANK0 ] unsigned char 
   975 ;;  baud_clock      1    3[BANK0 ] unsigned char 
   976 ;; Auto vars:     Size  Location     Type
   977 ;;  sync_mode       1    4[BANK0 ] unsigned char 
   978 ;; Return value:  Size  Location     Type
   979 ;;		None               void
   980 ;; Registers used:
   981 ;;		wreg, status,2, status,0, cstack
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   987 ;;      Params:         0       2       0       0       0       0       0       0       0
   988 ;;      Locals:         0       1       0       0       0       0       0       0       0
   989 ;;      Temps:          0       0       0       0       0       0       0       0       0
   990 ;;      Totals:         0       3       0       0       0       0       0       0       0
   991 ;;Total ram usage:        3 bytes
   992 ;; Hardware stack levels used:    1
   993 ;; Hardware stack levels required when called:    7
   994 ;; This function calls:
   995 ;;		_CloseI2C
   996 ;;		_OpenI2C
   997 ;; This function is called by:
   998 ;;		_init_I2C
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           	psect	text5
  1003  000804                     __ptext5:
  1004                           	opt stack 0
  1005  000804                     _I2C_open:
  1006                           	opt stack 22
  1007                           
  1008                           ;incstack = 0
  1009                           ;I2C_open@sync_mode stored from wreg
  1010  000804  0100               	movlb	0	; () banked
  1011  000806  6F64               	movwf	I2C_open@sync_mode& (0+255),b
  1012                           
  1013                           ; BSR set to: 0
  1014                           ;i2cFunct.c: 16: CloseI2C();
  1015  000808  EC71  F004         	call	_CloseI2C	;wreg free
  1016                           
  1017                           ;i2cFunct.c: 17: OpenI2C(sync_mode,slew);
  1018  00080C  C062  F060         	movff	I2C_open@slew,OpenI2C@slew
  1019  000810  0100               	movlb	0	; () banked
  1020  000812  5164               	movf	I2C_open@sync_mode& (0+255),w,b
  1021  000814  ECB2  F003         	call	_OpenI2C
  1022                           
  1023                           ;i2cFunct.c: 18: SSPADD = baud_clock;
  1024  000818  C063  FFC8         	movff	I2C_open@baud_clock,4040	;volatile
  1025  00081C  0012               	return	
  1026  00081E                     __end_of_I2C_open:
  1027                           	opt stack 0
  1028                           tblptru	equ	0xFF8
  1029                           tblptrh	equ	0xFF7
  1030                           tblptrl	equ	0xFF6
  1031                           tablat	equ	0xFF5
  1032                           intcon	equ	0xFF2
  1033                           postinc0	equ	0xFEE
  1034                           wreg	equ	0xFE8
  1035                           postdec1	equ	0xFE5
  1036                           fsr1l	equ	0xFE1
  1037                           
  1038 ;; *************** function _OpenI2C *****************
  1039 ;; Defined at:
  1040 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\i2c\i2c_open.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;  sync_mode       1    wreg     unsigned char 
  1043 ;;  slew            1    0[BANK0 ] unsigned char 
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;  sync_mode       1    1[BANK0 ] unsigned char 
  1046 ;; Return value:  Size  Location     Type
  1047 ;;		None               void
  1048 ;; Registers used:
  1049 ;;		wreg, status,2, status,0
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1055 ;;      Params:         0       1       0       0       0       0       0       0       0
  1056 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1057 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1058 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1059 ;;Total ram usage:        2 bytes
  1060 ;; Hardware stack levels used:    1
  1061 ;; Hardware stack levels required when called:    6
  1062 ;; This function calls:
  1063 ;;		Nothing
  1064 ;; This function is called by:
  1065 ;;		_I2C_open
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           	psect	text6
  1070  000764                     __ptext6:
  1071                           	opt stack 0
  1072  000764                     _OpenI2C:
  1073                           	opt stack 22
  1074                           
  1075                           ;incstack = 0
  1076                           ;OpenI2C@sync_mode stored from wreg
  1077  000764  0100               	movlb	0	; () banked
  1078  000766  6F61               	movwf	OpenI2C@sync_mode& (0+255),b
  1079                           
  1080                           ; BSR set to: 0
  1081  000768  0E3F               	movlw	63
  1082  00076A  16C7               	andwf	4039,f,c	;volatile
  1083                           
  1084                           ; BSR set to: 0
  1085  00076C  0E00               	movlw	0
  1086  00076E  6EC6               	movwf	4038,c	;volatile
  1087                           
  1088                           ; BSR set to: 0
  1089  000770  0E00               	movlw	0
  1090  000772  6EC5               	movwf	4037,c	;volatile
  1091  000774  0100               	movlb	0	; () banked
  1092  000776  5161               	movf	OpenI2C@sync_mode& (0+255),w,b
  1093  000778  12C6               	iorwf	4038,f,c	;volatile
  1094  00077A  0100               	movlb	0	; () banked
  1095  00077C  5160               	movf	OpenI2C@slew& (0+255),w,b
  1096  00077E  12C7               	iorwf	4039,f,c	;volatile
  1097                           
  1098                           ; BSR set to: 0
  1099  000780  8293               	bsf	3987,1,c	;volatile
  1100                           
  1101                           ; BSR set to: 0
  1102  000782  8093               	bsf	3987,0,c	;volatile
  1103                           
  1104                           ; BSR set to: 0
  1105  000784  8AC6               	bsf	4038,5,c	;volatile
  1106                           
  1107                           ; BSR set to: 0
  1108  000786  0012               	return	
  1109  000788                     __end_of_OpenI2C:
  1110                           	opt stack 0
  1111                           tblptru	equ	0xFF8
  1112                           tblptrh	equ	0xFF7
  1113                           tblptrl	equ	0xFF6
  1114                           tablat	equ	0xFF5
  1115                           intcon	equ	0xFF2
  1116                           postinc0	equ	0xFEE
  1117                           wreg	equ	0xFE8
  1118                           postdec1	equ	0xFE5
  1119                           fsr1l	equ	0xFE1
  1120                           
  1121 ;; *************** function _CloseI2C *****************
  1122 ;; Defined at:
  1123 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\i2c\i2c_clos.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;		None
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;		None
  1128 ;; Return value:  Size  Location     Type
  1129 ;;		None               void
  1130 ;; Registers used:
  1131 ;;		status,2, status,0
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1137 ;;      Params:         0       0       0       0       0       0       0       0       0
  1138 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1139 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1140 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1141 ;;Total ram usage:        0 bytes
  1142 ;; Hardware stack levels used:    1
  1143 ;; Hardware stack levels required when called:    6
  1144 ;; This function calls:
  1145 ;;		Nothing
  1146 ;; This function is called by:
  1147 ;;		_I2C_open
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           	psect	text7
  1152  0008E2                     __ptext7:
  1153                           	opt stack 0
  1154  0008E2                     _CloseI2C:
  1155                           	opt stack 22
  1156                           
  1157                           ; BSR set to: 0
  1158                           ;incstack = 0
  1159  0008E2  9AC6               	bcf	4038,5,c	;volatile
  1160  0008E4  0012               	return	
  1161  0008E6                     __end_of_CloseI2C:
  1162                           	opt stack 0
  1163                           tblptru	equ	0xFF8
  1164                           tblptrh	equ	0xFF7
  1165                           tblptrl	equ	0xFF6
  1166                           tablat	equ	0xFF5
  1167                           intcon	equ	0xFF2
  1168                           postinc0	equ	0xFEE
  1169                           wreg	equ	0xFE8
  1170                           postdec1	equ	0xFE5
  1171                           fsr1l	equ	0xFE1
  1172                           
  1173 ;; *************** function _init_ACC *****************
  1174 ;; Defined at:
  1175 ;;		line 264 in file "accmag.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;		None
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;		None
  1180 ;; Return value:  Size  Location     Type
  1181 ;;		None               void
  1182 ;; Registers used:
  1183 ;;		wreg, status,2, status,0, cstack
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1189 ;;      Params:         0       0       0       0       0       0       0       0       0
  1190 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1191 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1192 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1193 ;;Total ram usage:        0 bytes
  1194 ;; Hardware stack levels used:    1
  1195 ;; Hardware stack levels required when called:   11
  1196 ;; This function calls:
  1197 ;;		_I2C_turn_on_acc
  1198 ;; This function is called by:
  1199 ;;		_main
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203                           	psect	text8
  1204  00081E                     __ptext8:
  1205                           	opt stack 0
  1206  00081E                     _init_ACC:
  1207                           	opt stack 19
  1208                           
  1209                           ;accmag.c: 265: I2C_turn_on_acc(0b00100000,0b00011000,0b00110000,0b00000000);
  1210                           
  1211                           ;incstack = 0
  1212  00081E  0E18               	movlw	24
  1213  000820  0100               	movlb	0	; () banked
  1214  000822  6F68               	movwf	I2C_turn_on_acc@data_rate& (0+255),b
  1215  000824  0E30               	movlw	48
  1216  000826  0100               	movlb	0	; () banked
  1217  000828  6F69               	movwf	I2C_turn_on_acc@full_scale& (0+255),b
  1218  00082A  0E00               	movlw	0
  1219  00082C  0100               	movlb	0	; () banked
  1220  00082E  6F6A               	movwf	I2C_turn_on_acc@sleep_wakeup& (0+255),b
  1221  000830  0E20               	movlw	32
  1222  000832  ECDF  F002         	call	_I2C_turn_on_acc
  1223  000836  0012               	return	
  1224  000838                     __end_of_init_ACC:
  1225                           	opt stack 0
  1226                           tblptru	equ	0xFF8
  1227                           tblptrh	equ	0xFF7
  1228                           tblptrl	equ	0xFF6
  1229                           tablat	equ	0xFF5
  1230                           intcon	equ	0xFF2
  1231                           postinc0	equ	0xFEE
  1232                           wreg	equ	0xFE8
  1233                           postdec1	equ	0xFE5
  1234                           fsr1l	equ	0xFE1
  1235                           
  1236 ;; *************** function _I2C_turn_on_acc *****************
  1237 ;; Defined at:
  1238 ;;		line 244 in file "accmag.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;  mode            1    wreg     unsigned char 
  1241 ;;  data_rate       1    8[BANK0 ] unsigned char 
  1242 ;;  full_scale      1    9[BANK0 ] unsigned char 
  1243 ;;  sleep_wakeup    1   10[BANK0 ] unsigned char 
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;  mode            1   11[BANK0 ] unsigned char 
  1246 ;; Return value:  Size  Location     Type
  1247 ;;		None               void
  1248 ;; Registers used:
  1249 ;;		wreg, status,2, status,0, cstack
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1255 ;;      Params:         0       3       0       0       0       0       0       0       0
  1256 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1257 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1258 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1259 ;;Total ram usage:        4 bytes
  1260 ;; Hardware stack levels used:    1
  1261 ;; Hardware stack levels required when called:   10
  1262 ;; This function calls:
  1263 ;;		_I2C_write_reg_acc
  1264 ;; This function is called by:
  1265 ;;		_init_ACC
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           	psect	text9
  1270  0005BE                     __ptext9:
  1271                           	opt stack 0
  1272  0005BE                     _I2C_turn_on_acc:
  1273                           	opt stack 19
  1274                           
  1275                           ;incstack = 0
  1276                           ;I2C_turn_on_acc@mode stored from wreg
  1277  0005BE  0100               	movlb	0	; () banked
  1278  0005C0  6F6B               	movwf	I2C_turn_on_acc@mode& (0+255),b
  1279                           
  1280                           ; BSR set to: 0
  1281                           ;accmag.c: 245: I2C_write_reg_acc(0x20,data_rate|mode|0x07);
  1282  0005C2  0100               	movlb	0	; () banked
  1283  0005C4  5168               	movf	I2C_turn_on_acc@data_rate& (0+255),w,b
  1284  0005C6  0100               	movlb	0	; () banked
  1285  0005C8  116B               	iorwf	I2C_turn_on_acc@mode& (0+255),w,b
  1286  0005CA  0907               	iorlw	7
  1287  0005CC  0100               	movlb	0	; () banked
  1288  0005CE  6F66               	movwf	I2C_write_reg_acc@valor& (0+255),b
  1289  0005D0  0E20               	movlw	32
  1290  0005D2  EC5F  F003         	call	_I2C_write_reg_acc
  1291                           
  1292                           ;accmag.c: 247: I2C_write_reg_acc(0x21,0);
  1293  0005D6  0E00               	movlw	0
  1294  0005D8  0100               	movlb	0	; () banked
  1295  0005DA  6F66               	movwf	I2C_write_reg_acc@valor& (0+255),b
  1296  0005DC  0E21               	movlw	33
  1297  0005DE  EC5F  F003         	call	_I2C_write_reg_acc
  1298                           
  1299                           ;accmag.c: 249: I2C_write_reg_acc(0x23,0b10000000|full_scale);
  1300  0005E2  0100               	movlb	0	; () banked
  1301  0005E4  5169               	movf	I2C_turn_on_acc@full_scale& (0+255),w,b
  1302  0005E6  0980               	iorlw	128
  1303  0005E8  0100               	movlb	0	; () banked
  1304  0005EA  6F66               	movwf	I2C_write_reg_acc@valor& (0+255),b
  1305  0005EC  0E23               	movlw	35
  1306  0005EE  EC5F  F003         	call	_I2C_write_reg_acc
  1307                           
  1308                           ;accmag.c: 250: I2C_write_reg_acc(0x24,sleep_wakeup);
  1309  0005F2  C06A  F066         	movff	I2C_turn_on_acc@sleep_wakeup,I2C_write_reg_acc@valor
  1310  0005F6  0E24               	movlw	36
  1311  0005F8  EC5F  F003         	call	_I2C_write_reg_acc
  1312  0005FC  0012               	return	
  1313  0005FE                     __end_of_I2C_turn_on_acc:
  1314                           	opt stack 0
  1315                           tblptru	equ	0xFF8
  1316                           tblptrh	equ	0xFF7
  1317                           tblptrl	equ	0xFF6
  1318                           tablat	equ	0xFF5
  1319                           intcon	equ	0xFF2
  1320                           postinc0	equ	0xFEE
  1321                           wreg	equ	0xFE8
  1322                           postdec1	equ	0xFE5
  1323                           fsr1l	equ	0xFE1
  1324                           
  1325 ;; *************** function _I2C_write_reg_acc *****************
  1326 ;; Defined at:
  1327 ;;		line 9 in file "accmag.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;  reg             1    wreg     unsigned char 
  1330 ;;  valor           1    6[BANK0 ] unsigned char 
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;  reg             1    7[BANK0 ] unsigned char 
  1333 ;; Return value:  Size  Location     Type
  1334 ;;		None               void
  1335 ;; Registers used:
  1336 ;;		wreg, status,2, status,0, cstack
  1337 ;; Tracked objects:
  1338 ;;		On entry : 0/0
  1339 ;;		On exit  : 0/0
  1340 ;;		Unchanged: 0/0
  1341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1342 ;;      Params:         0       1       0       0       0       0       0       0       0
  1343 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1344 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1345 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1346 ;;Total ram usage:        2 bytes
  1347 ;; Hardware stack levels used:    1
  1348 ;; Hardware stack levels required when called:    9
  1349 ;; This function calls:
  1350 ;;		_I2C_send
  1351 ;;		_IdleI2C
  1352 ;; This function is called by:
  1353 ;;		_I2C_turn_on_acc
  1354 ;;		_stop_ACC
  1355 ;; This function uses a non-reentrant model
  1356 ;;
  1357                           
  1358                           	psect	text10
  1359  0006BE                     __ptext10:
  1360                           	opt stack 0
  1361  0006BE                     _I2C_write_reg_acc:
  1362                           	opt stack 19
  1363                           
  1364                           ;incstack = 0
  1365                           ;I2C_write_reg_acc@reg stored from wreg
  1366  0006BE  0100               	movlb	0	; () banked
  1367  0006C0  6F67               	movwf	I2C_write_reg_acc@reg& (0+255),b
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;accmag.c: 12: IdleI2C();
  1371  0006C2  EC33  F004         	call	_IdleI2C	;wreg free
  1372                           
  1373                           ;accmag.c: 14: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  1374  0006C6  80C5               	bsf	4037,0,c	;volatile
  1375  0006C8                     l311:
  1376  0006C8  B0C5               	btfsc	4037,0,c	;volatile
  1377  0006CA  D7FE               	goto	l311
  1378                           
  1379                           ;accmag.c: 18: I2C_send(0x30);
  1380  0006CC  0E30               	movlw	48
  1381  0006CE  EC48  F003         	call	_I2C_send
  1382                           
  1383                           ;accmag.c: 22: I2C_send(reg);
  1384  0006D2  0100               	movlb	0	; () banked
  1385  0006D4  5167               	movf	I2C_write_reg_acc@reg& (0+255),w,b
  1386  0006D6  EC48  F003         	call	_I2C_send
  1387                           
  1388                           ;accmag.c: 25: I2C_send(valor);
  1389  0006DA  0100               	movlb	0	; () banked
  1390  0006DC  5166               	movf	I2C_write_reg_acc@valor& (0+255),w,b
  1391  0006DE  EC48  F003         	call	_I2C_send
  1392                           
  1393                           ;accmag.c: 27: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  1394  0006E2  84C5               	bsf	4037,2,c	;volatile
  1395  0006E4                     l314:
  1396  0006E4  A4C5               	btfss	4037,2,c	;volatile
  1397  0006E6  0012               	return	
  1398  0006E8  D7FD               	goto	l314
  1399  0006EA                     __end_of_I2C_write_reg_acc:
  1400                           	opt stack 0
  1401                           tblptru	equ	0xFF8
  1402                           tblptrh	equ	0xFF7
  1403                           tblptrl	equ	0xFF6
  1404                           tablat	equ	0xFF5
  1405                           intcon	equ	0xFF2
  1406                           postinc0	equ	0xFEE
  1407                           wreg	equ	0xFE8
  1408                           postdec1	equ	0xFE5
  1409                           fsr1l	equ	0xFE1
  1410                           
  1411 ;; *************** function _I2C_send *****************
  1412 ;; Defined at:
  1413 ;;		line 26 in file "i2cFunct.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;  reg             1    wreg     unsigned char 
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;  reg             1    4[BANK0 ] unsigned char 
  1418 ;;  status          1    5[BANK0 ] char 
  1419 ;;  data            1    3[BANK0 ] unsigned char 
  1420 ;; Return value:  Size  Location     Type
  1421 ;;		None               void
  1422 ;; Registers used:
  1423 ;;		wreg, status,2, status,0, cstack
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1429 ;;      Params:         0       0       0       0       0       0       0       0       0
  1430 ;;      Locals:         0       3       0       0       0       0       0       0       0
  1431 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1432 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1433 ;;Total ram usage:        3 bytes
  1434 ;; Hardware stack levels used:    1
  1435 ;; Hardware stack levels required when called:    8
  1436 ;; This function calls:
  1437 ;;		_IdleI2C
  1438 ;;		_WriteI2C
  1439 ;; This function is called by:
  1440 ;;		_I2C_write_reg_acc
  1441 ;;		_I2C_read_byte_gyro
  1442 ;;		_I2C_read_data_gyro
  1443 ;;		_I2C_write_reg_gyro
  1444 ;;		_I2C_read_byte_acc
  1445 ;;		_I2C_write_reg_mag
  1446 ;;		_I2C_read_byte_mag
  1447 ;;		_I2C_read_data_mag
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           	psect	text11
  1452  000690                     __ptext11:
  1453                           	opt stack 0
  1454  000690                     _I2C_send:
  1455                           	opt stack 19
  1456                           
  1457                           ;incstack = 0
  1458                           ;I2C_send@reg stored from wreg
  1459  000690  0100               	movlb	0	; () banked
  1460  000692  6F64               	movwf	I2C_send@reg& (0+255),b
  1461                           
  1462                           ; BSR set to: 0
  1463                           ;i2cFunct.c: 28: unsigned char data;
  1464                           ;i2cFunct.c: 29: signed char status;
  1465                           ;i2cFunct.c: 31: data = SSPBUF;
  1466  000694  CFC9 F063          	movff	4041,I2C_send@data	;volatile
  1467  000698                     l2012:
  1468                           
  1469                           ; BSR set to: 0
  1470                           ;i2cFunct.c: 33: {
  1471                           ;i2cFunct.c: 34: status = WriteI2C(reg);
  1472  000698  0100               	movlb	0	; () banked
  1473  00069A  5164               	movf	I2C_send@reg& (0+255),w,b
  1474  00069C  EC24  F001         	call	_WriteI2C
  1475  0006A0  0100               	movlb	0	; () banked
  1476  0006A2  6F65               	movwf	I2C_send@status& (0+255),b
  1477                           
  1478                           ;i2cFunct.c: 35: IdleI2C();
  1479  0006A4  EC33  F004         	call	_IdleI2C	;wreg free
  1480                           
  1481                           ;i2cFunct.c: 36: if (status == -1)
  1482  0006A8  0100               	movlb	0	; () banked
  1483  0006AA  2965               	incf	I2C_send@status& (0+255),w,b
  1484  0006AC  A4D8               	btfss	status,2,c
  1485  0006AE  D003               	goto	l215
  1486                           
  1487                           ; BSR set to: 0
  1488                           ;i2cFunct.c: 37: {
  1489                           ;i2cFunct.c: 38: data = SSPBUF;
  1490  0006B0  CFC9 F063          	movff	4041,I2C_send@data	;volatile
  1491                           
  1492                           ;i2cFunct.c: 39: SSPCON1bits.WCOL = 0;
  1493  0006B4  9EC6               	bcf	4038,7,c	;volatile
  1494  0006B6                     l215:
  1495                           
  1496                           ; BSR set to: 0
  1497                           ;i2cFunct.c: 40: }
  1498                           ;i2cFunct.c: 41: }
  1499                           ;i2cFunct.c: 42: while(status!=0);
  1500  0006B6  0100               	movlb	0	; () banked
  1501  0006B8  6765               	tstfsz	I2C_send@status& (0+255),b
  1502  0006BA  D7EE               	goto	l2012
  1503                           
  1504                           ; BSR set to: 0
  1505                           
  1506                           ; BSR set to: 0
  1507  0006BC  0012               	return	
  1508  0006BE                     __end_of_I2C_send:
  1509                           	opt stack 0
  1510                           tblptru	equ	0xFF8
  1511                           tblptrh	equ	0xFF7
  1512                           tblptrl	equ	0xFF6
  1513                           tablat	equ	0xFF5
  1514                           intcon	equ	0xFF2
  1515                           postinc0	equ	0xFEE
  1516                           wreg	equ	0xFE8
  1517                           postdec1	equ	0xFE5
  1518                           fsr1l	equ	0xFE1
  1519                           status	equ	0xFD8
  1520                           
  1521 ;; *************** function _WriteI2C *****************
  1522 ;; Defined at:
  1523 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\i2c\i2c_writ.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;  data_out        1    wreg     unsigned char 
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;  data_out        1    2[BANK0 ] unsigned char 
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      char 
  1530 ;; Registers used:
  1531 ;;		wreg, status,2, status,0, cstack
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1537 ;;      Params:         0       0       0       0       0       0       0       0       0
  1538 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1539 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1540 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1541 ;;Total ram usage:        2 bytes
  1542 ;; Hardware stack levels used:    1
  1543 ;; Hardware stack levels required when called:    7
  1544 ;; This function calls:
  1545 ;;		_IdleI2C
  1546 ;; This function is called by:
  1547 ;;		_I2C_send
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           	psect	text12
  1552  000248                     __ptext12:
  1553                           	opt stack 0
  1554  000248                     _WriteI2C:
  1555                           	opt stack 19
  1556                           
  1557                           ; BSR set to: 0
  1558                           ;incstack = 0
  1559                           ;WriteI2C@data_out stored from wreg
  1560  000248  0100               	movlb	0	; () banked
  1561  00024A  6F62               	movwf	WriteI2C@data_out& (0+255),b
  1562                           
  1563                           ; BSR set to: 0
  1564  00024C  C062  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  1565                           
  1566                           ; BSR set to: 0
  1567  000250  AEC6               	btfss	4038,7,c	;volatile
  1568  000252  D002               	goto	l1974
  1569                           
  1570                           ; BSR set to: 0
  1571  000254  0EFF               	movlw	255
  1572  000256  D038               	goto	l636
  1573  000258                     l1974:
  1574                           
  1575                           ; BSR set to: 0
  1576  000258  CFC6 F061          	movff	4038,??_WriteI2C	;volatile
  1577  00025C  0E0F               	movlw	15
  1578  00025E  0100               	movlb	0	; () banked
  1579  000260  1761               	andwf	??_WriteI2C& (0+255),f,b
  1580  000262  0100               	movlb	0	; () banked
  1581  000264  5161               	movf	??_WriteI2C& (0+255),w,b
  1582  000266  0A08               	xorlw	8
  1583  000268  B4D8               	btfsc	status,2,c
  1584  00026A  D011               	goto	l1992
  1585                           
  1586                           ; BSR set to: 0
  1587  00026C  CFC6 F061          	movff	4038,??_WriteI2C	;volatile
  1588  000270  0E0F               	movlw	15
  1589  000272  0100               	movlb	0	; () banked
  1590  000274  1761               	andwf	??_WriteI2C& (0+255),f,b
  1591  000276  0100               	movlb	0	; () banked
  1592  000278  5161               	movf	??_WriteI2C& (0+255),w,b
  1593  00027A  0A0B               	xorlw	11
  1594  00027C  B4D8               	btfsc	status,2,c
  1595  00027E  D007               	goto	l1992
  1596                           
  1597                           ; BSR set to: 0
  1598  000280  88C6               	bsf	4038,4,c	;volatile
  1599  000282                     l639:
  1600                           
  1601                           ; BSR set to: 0
  1602  000282  A69E               	btfss	3998,3,c	;volatile
  1603  000284  D7FE               	goto	l639
  1604                           
  1605                           ; BSR set to: 0
  1606  000286  A4C7               	btfss	4039,2,c	;volatile
  1607                           
  1608                           ; BSR set to: 0
  1609  000288  B0C7               	btfsc	4039,0,c	;volatile
  1610  00028A  D01D               	goto	l2006
  1611  00028C  D01A               	goto	u1770
  1612  00028E                     l1992:
  1613                           
  1614                           ; BSR set to: 0
  1615  00028E  CFC6 F061          	movff	4038,??_WriteI2C	;volatile
  1616  000292  0E0F               	movlw	15
  1617  000294  0100               	movlb	0	; () banked
  1618  000296  1761               	andwf	??_WriteI2C& (0+255),f,b
  1619  000298  0100               	movlb	0	; () banked
  1620  00029A  5161               	movf	??_WriteI2C& (0+255),w,b
  1621  00029C  0A08               	xorlw	8
  1622  00029E  B4D8               	btfsc	status,2,c
  1623  0002A0  D00A               	goto	l648
  1624                           
  1625                           ; BSR set to: 0
  1626  0002A2  CFC6 F061          	movff	4038,??_WriteI2C	;volatile
  1627  0002A6  0E0F               	movlw	15
  1628  0002A8  0100               	movlb	0	; () banked
  1629  0002AA  1761               	andwf	??_WriteI2C& (0+255),f,b
  1630  0002AC  0100               	movlb	0	; () banked
  1631  0002AE  5161               	movf	??_WriteI2C& (0+255),w,b
  1632  0002B0  0A0B               	xorlw	11
  1633  0002B2  A4D8               	btfss	status,2,c
  1634  0002B4  D009               	goto	l636
  1635  0002B6                     l648:
  1636                           
  1637                           ; BSR set to: 0
  1638  0002B6  B0C7               	btfsc	4039,0,c	;volatile
  1639  0002B8  D7FE               	goto	l648
  1640                           
  1641                           ; BSR set to: 0
  1642                           
  1643                           ; BSR set to: 0
  1644  0002BA  EC33  F004         	call	_IdleI2C	;wreg free
  1645  0002BE  ACC5               	btfss	4037,6,c	;volatile
  1646  0002C0  D002               	goto	l2006
  1647  0002C2                     u1770:
  1648  0002C2  0EFE               	movlw	254
  1649  0002C4  D001               	goto	l636
  1650  0002C6                     l2006:
  1651  0002C6  0E00               	movlw	0
  1652  0002C8                     l636:
  1653  0002C8  0012               	return	
  1654  0002CA                     __end_of_WriteI2C:
  1655                           	opt stack 0
  1656                           tblptru	equ	0xFF8
  1657                           tblptrh	equ	0xFF7
  1658                           tblptrl	equ	0xFF6
  1659                           tablat	equ	0xFF5
  1660                           intcon	equ	0xFF2
  1661                           postinc0	equ	0xFEE
  1662                           wreg	equ	0xFE8
  1663                           postdec1	equ	0xFE5
  1664                           fsr1l	equ	0xFE1
  1665                           status	equ	0xFD8
  1666                           
  1667 ;; *************** function _IdleI2C *****************
  1668 ;; Defined at:
  1669 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\i2c\i2c_idle.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;		None
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;		None
  1674 ;; Return value:  Size  Location     Type
  1675 ;;		None               void
  1676 ;; Registers used:
  1677 ;;		wreg, status,2, status,0
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1683 ;;      Params:         0       0       0       0       0       0       0       0       0
  1684 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1685 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1686 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1687 ;;Total ram usage:        1 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; Hardware stack levels required when called:    6
  1690 ;; This function calls:
  1691 ;;		Nothing
  1692 ;; This function is called by:
  1693 ;;		_I2C_send
  1694 ;;		_I2C_write_reg_acc
  1695 ;;		_WriteI2C
  1696 ;;		_I2C_read_byte_gyro
  1697 ;;		_I2C_read_data_gyro
  1698 ;;		_I2C_write_reg_gyro
  1699 ;;		_I2C_read_byte_acc
  1700 ;;		_I2C_write_reg_mag
  1701 ;;		_I2C_read_byte_mag
  1702 ;;		_I2C_read_data_mag
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text13
  1707  000866                     __ptext13:
  1708                           	opt stack 0
  1709  000866                     _IdleI2C:
  1710                           	opt stack 21
  1711  000866                     l1960:
  1712  000866  CFC5 F060          	movff	4037,??_IdleI2C	;volatile
  1713  00086A  0E1F               	movlw	31
  1714  00086C  0100               	movlb	0	; () banked
  1715  00086E  1760               	andwf	??_IdleI2C& (0+255),f,b
  1716  000870  B4D8               	btfsc	status,2,c
  1717                           
  1718                           ; BSR set to: 0
  1719  000872  B4C7               	btfsc	4039,2,c	;volatile
  1720  000874  D7F8               	goto	l1960
  1721                           
  1722                           ; BSR set to: 0
  1723                           
  1724                           ; BSR set to: 0
  1725  000876  0012               	return	
  1726  000878                     __end_of_IdleI2C:
  1727                           	opt stack 0
  1728                           tblptru	equ	0xFF8
  1729                           tblptrh	equ	0xFF7
  1730                           tblptrl	equ	0xFF6
  1731                           tablat	equ	0xFF5
  1732                           intcon	equ	0xFF2
  1733                           postinc0	equ	0xFEE
  1734                           wreg	equ	0xFE8
  1735                           postdec1	equ	0xFE5
  1736                           fsr1l	equ	0xFE1
  1737                           status	equ	0xFD8
  1738                           
  1739 ;; *************** function _Interruption *****************
  1740 ;; Defined at:
  1741 ;;		line 105 in file "main.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;		None
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;		None
  1746 ;; Return value:  Size  Location     Type
  1747 ;;		None               void
  1748 ;; Registers used:
  1749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  1750 ;; Tracked objects:
  1751 ;;		On entry : 0/0
  1752 ;;		On exit  : 0/0
  1753 ;;		Unchanged: 0/0
  1754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1755 ;;      Params:         0       0       0       0       0       0       0       0       0
  1756 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1757 ;;      Temps:         15       0       0       0       0       0       0       0       0
  1758 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1759 ;;Total ram usage:       15 bytes
  1760 ;; Hardware stack levels used:    1
  1761 ;; Hardware stack levels required when called:    5
  1762 ;; This function calls:
  1763 ;;		_imprimir
  1764 ;;		_readData
  1765 ;;		_timer0_isr
  1766 ;;		_uart_isr
  1767 ;; This function is called by:
  1768 ;;		Interrupt level 2
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           	psect	intcode
  1773  000008                     __pintcode:
  1774                           	opt stack 0
  1775  000008                     _Interruption:
  1776                           	opt stack 19
  1777                           
  1778                           ; BSR set to: 0
  1779                           ;incstack = 0
  1780  000008  CFFA F01A          	movff	pclath,??_Interruption+1
  1781  00000C  CFFB F01B          	movff	pclatu,??_Interruption+2
  1782  000010  CFE9 F01C          	movff	fsr0l,??_Interruption+3
  1783  000014  ED79  F000         	call	int_func,f	;refresh shadow registers
  1784                           pclatu	equ	0xFFB
  1785                           pclath	equ	0xFFA
  1786                           tblptru	equ	0xFF8
  1787                           tblptrh	equ	0xFF7
  1788                           tblptrl	equ	0xFF6
  1789                           tablat	equ	0xFF5
  1790                           intcon	equ	0xFF2
  1791                           postinc0	equ	0xFEE
  1792                           fsr0l	equ	0xFE9
  1793                           wreg	equ	0xFE8
  1794                           postdec1	equ	0xFE5
  1795                           fsr1l	equ	0xFE1
  1796                           status	equ	0xFD8
  1797                           
  1798                           	psect	intcode_body
  1799  0000F2                     __pintcode_body:
  1800                           	opt stack 19
  1801  0000F2                     int_func:
  1802                           	opt stack 19
  1803  0000F2  0006               	pop		; remove dummy address from shadow register refresh
  1804  0000F4  CFEA F01D          	movff	fsr0h,??_Interruption+4
  1805  0000F8  CFE1 F01E          	movff	fsr1l,??_Interruption+5
  1806  0000FC  CFE2 F01F          	movff	fsr1h,??_Interruption+6
  1807  000100  CFD9 F020          	movff	fsr2l,??_Interruption+7
  1808  000104  CFDA F021          	movff	fsr2h,??_Interruption+8
  1809  000108  CFF3 F022          	movff	prodl,??_Interruption+9
  1810  00010C  CFF4 F023          	movff	prodh,??_Interruption+10
  1811  000110  CFF6 F024          	movff	tblptrl,??_Interruption+11
  1812  000114  CFF7 F025          	movff	tblptrh,??_Interruption+12
  1813  000118  CFF8 F026          	movff	tblptru,??_Interruption+13
  1814  00011C  CFF5 F027          	movff	tablat,??_Interruption+14
  1815                           
  1816                           ;main.c: 107: if (INTCONbits.PEIE & PIR1bits.RCIF) {
  1817  000120  0E01               	movlw	1
  1818  000122  ACF2               	btfss	intcon,6,c	;volatile
  1819  000124  0E00               	movlw	0
  1820  000126  AA9E               	btfss	3998,5,c	;volatile
  1821  000128  0E00               	movlw	0
  1822  00012A  A0E8               	btfss	wreg,0,c
  1823  00012C  D003               	goto	i2u162_40
  1824  00012E  6A19               	clrf	??_Interruption& (0+255),c
  1825  000130  2A19               	incf	??_Interruption& (0+255),f,c
  1826  000132  D001               	goto	i2u162_48
  1827  000134                     i2u162_40:
  1828  000134  6A19               	clrf	??_Interruption& (0+255),c
  1829  000136                     i2u162_48:
  1830  000136  5019               	movf	??_Interruption,w,c
  1831  000138  B4D8               	btfsc	status,2,c
  1832  00013A  D003               	goto	i2l1950
  1833                           
  1834                           ;main.c: 108: uart_isr();
  1835  00013C  EC18  F003         	call	_uart_isr	;wreg free
  1836                           
  1837                           ;main.c: 109: } else {
  1838  000140  D014               	goto	i2l120
  1839  000142                     i2l1950:
  1840                           
  1841                           ;main.c: 110: if (INTCONbits.TMR0IE & INTCONbits.TMR0IF) {
  1842  000142  0E01               	movlw	1
  1843  000144  AAF2               	btfss	intcon,5,c	;volatile
  1844  000146  0E00               	movlw	0
  1845  000148  A4F2               	btfss	intcon,2,c	;volatile
  1846  00014A  0E00               	movlw	0
  1847  00014C  A0E8               	btfss	wreg,0,c
  1848  00014E  D003               	goto	i2u164_40
  1849  000150  6A19               	clrf	??_Interruption& (0+255),c
  1850  000152  2A19               	incf	??_Interruption& (0+255),f,c
  1851  000154  D001               	goto	i2u164_48
  1852  000156                     i2u164_40:
  1853  000156  6A19               	clrf	??_Interruption& (0+255),c
  1854  000158                     i2u164_48:
  1855  000158  5019               	movf	??_Interruption,w,c
  1856  00015A  B4D8               	btfsc	status,2,c
  1857  00015C  D006               	goto	i2l120
  1858                           
  1859                           ;main.c: 111: timer0_isr();
  1860  00015E  EC56  F004         	call	_timer0_isr	;wreg free
  1861                           
  1862                           ;main.c: 112: readData();
  1863  000162  EC75  F003         	call	_readData	;wreg free
  1864                           
  1865                           ;main.c: 113: imprimir();
  1866  000166  EC0E  F000         	call	_imprimir	;wreg free
  1867  00016A                     i2l120:
  1868  00016A  C027  FFF5         	movff	??_Interruption+14,tablat
  1869  00016E  C026  FFF8         	movff	??_Interruption+13,tblptru
  1870  000172  C025  FFF7         	movff	??_Interruption+12,tblptrh
  1871  000176  C024  FFF6         	movff	??_Interruption+11,tblptrl
  1872  00017A  C023  FFF4         	movff	??_Interruption+10,prodh
  1873  00017E  C022  FFF3         	movff	??_Interruption+9,prodl
  1874  000182  C021  FFDA         	movff	??_Interruption+8,fsr2h
  1875  000186  C020  FFD9         	movff	??_Interruption+7,fsr2l
  1876  00018A  C01F  FFE2         	movff	??_Interruption+6,fsr1h
  1877  00018E  C01E  FFE1         	movff	??_Interruption+5,fsr1l
  1878  000192  C01D  FFEA         	movff	??_Interruption+4,fsr0h
  1879  000196  C01C  FFE9         	movff	??_Interruption+3,fsr0l
  1880  00019A  C01B  FFFB         	movff	??_Interruption+2,pclatu
  1881  00019E  C01A  FFFA         	movff	??_Interruption+1,pclath
  1882  0001A2  0011               	retfie		f
  1883  0001A4                     __end_of_Interruption:
  1884                           	opt stack 0
  1885                           pclatu	equ	0xFFB
  1886                           pclath	equ	0xFFA
  1887                           tblptru	equ	0xFF8
  1888                           tblptrh	equ	0xFF7
  1889                           tblptrl	equ	0xFF6
  1890                           tablat	equ	0xFF5
  1891                           prodh	equ	0xFF4
  1892                           prodl	equ	0xFF3
  1893                           intcon	equ	0xFF2
  1894                           postinc0	equ	0xFEE
  1895                           fsr0h	equ	0xFEA
  1896                           fsr0l	equ	0xFE9
  1897                           wreg	equ	0xFE8
  1898                           postdec1	equ	0xFE5
  1899                           fsr1h	equ	0xFE2
  1900                           fsr1l	equ	0xFE1
  1901                           fsr2h	equ	0xFDA
  1902                           fsr2l	equ	0xFD9
  1903                           status	equ	0xFD8
  1904                           
  1905 ;; *************** function _uart_isr *****************
  1906 ;; Defined at:
  1907 ;;		line 15 in file "uartFunct.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;		None
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;		None
  1912 ;; Return value:  Size  Location     Type
  1913 ;;		None               void
  1914 ;; Registers used:
  1915 ;;		wreg, status,2, status,0, cstack
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1921 ;;      Params:         0       0       0       0       0       0       0       0       0
  1922 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1923 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1924 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1925 ;;Total ram usage:        1 bytes
  1926 ;; Hardware stack levels used:    1
  1927 ;; Hardware stack levels required when called:    2
  1928 ;; This function calls:
  1929 ;;		_ReadUSART
  1930 ;;		_endTimer
  1931 ;;		_startTimer
  1932 ;; This function is called by:
  1933 ;;		_Interruption
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           	psect	text15
  1938  000630                     __ptext15:
  1939                           	opt stack 0
  1940  000630                     _uart_isr:
  1941                           	opt stack 21
  1942                           
  1943                           ;uartFunct.c: 16: PIR1bits.RCIF=0;
  1944                           
  1945                           ;incstack = 0
  1946  000630  9A9E               	bcf	3998,5,c	;volatile
  1947                           
  1948                           ;uartFunct.c: 17: CaracterRx = ReadUSART();
  1949  000632  ECE6  F003         	call	_ReadUSART	;wreg free
  1950  000636  6E05               	movwf	??_uart_isr& (0+255),c
  1951  000638  5005               	movf	??_uart_isr,w,c
  1952  00063A  6E28               	movwf	_CaracterRx,c
  1953  00063C  6A29               	clrf	_CaracterRx+1,c
  1954  00063E                     i2l152:
  1955  00063E  A2AC               	btfss	4012,1,c	;volatile
  1956  000640  D7FE               	goto	i2l152
  1957                           
  1958                           ;uartFunct.c: 19: if (CaracterRx == 83){
  1959  000642  5028               	movf	_CaracterRx,w,c
  1960  000644  0A53               	xorlw	83
  1961  000646  1029               	iorwf	_CaracterRx+1,w,c
  1962  000648  A4D8               	btfss	status,2,c
  1963  00064A  D003               	goto	i2l1706
  1964                           
  1965                           ;uartFunct.c: 20: startTimer();
  1966  00064C  EC1C  F004         	call	_startTimer	;wreg free
  1967                           
  1968                           ;uartFunct.c: 21: }else if(CaracterRx == 88){
  1969  000650  D006               	goto	i2l158
  1970  000652                     i2l1706:
  1971  000652  5028               	movf	_CaracterRx,w,c
  1972  000654  0A58               	xorlw	88
  1973  000656  1029               	iorwf	_CaracterRx+1,w,c
  1974  000658  B4D8               	btfsc	status,2,c
  1975                           
  1976                           ;uartFunct.c: 22: endTimer();
  1977  00065A  EC6B  F004         	call	_endTimer	;wreg free
  1978  00065E                     i2l158:
  1979  00065E  0012               	return	
  1980  000660                     __end_of_uart_isr:
  1981                           	opt stack 0
  1982                           pclatu	equ	0xFFB
  1983                           pclath	equ	0xFFA
  1984                           tblptru	equ	0xFF8
  1985                           tblptrh	equ	0xFF7
  1986                           tblptrl	equ	0xFF6
  1987                           tablat	equ	0xFF5
  1988                           prodh	equ	0xFF4
  1989                           prodl	equ	0xFF3
  1990                           intcon	equ	0xFF2
  1991                           postinc0	equ	0xFEE
  1992                           fsr0h	equ	0xFEA
  1993                           fsr0l	equ	0xFE9
  1994                           wreg	equ	0xFE8
  1995                           postdec1	equ	0xFE5
  1996                           fsr1h	equ	0xFE2
  1997                           fsr1l	equ	0xFE1
  1998                           fsr2h	equ	0xFDA
  1999                           fsr2l	equ	0xFD9
  2000                           status	equ	0xFD8
  2001                           
  2002 ;; *************** function _startTimer *****************
  2003 ;; Defined at:
  2004 ;;		line 24 in file "readTime.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;		None
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;		None
  2009 ;; Return value:  Size  Location     Type
  2010 ;;		None               void
  2011 ;; Registers used:
  2012 ;;		wreg, status,2, status,0, cstack
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2018 ;;      Params:         0       0       0       0       0       0       0       0       0
  2019 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2020 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2021 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2022 ;;Total ram usage:        0 bytes
  2023 ;; Hardware stack levels used:    1
  2024 ;; Hardware stack levels required when called:    1
  2025 ;; This function calls:
  2026 ;;		_OpenTimer0
  2027 ;;		_WriteTimer0
  2028 ;; This function is called by:
  2029 ;;		_uart_isr
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           	psect	text16
  2034  000838                     __ptext16:
  2035                           	opt stack 0
  2036  000838                     _startTimer:
  2037                           	opt stack 21
  2038                           
  2039                           ;readTime.c: 25: INTCONbits.GIE =1;
  2040                           
  2041                           ;incstack = 0
  2042  000838  8EF2               	bsf	intcon,7,c	;volatile
  2043                           
  2044                           ;readTime.c: 26: INTCONbits.PEIE = 1;
  2045  00083A  8CF2               	bsf	intcon,6,c	;volatile
  2046                           
  2047                           ;readTime.c: 27: INTCONbits.TMR0IE = 1;
  2048  00083C  8AF2               	bsf	intcon,5,c	;volatile
  2049                           
  2050                           ;readTime.c: 28: OpenTimer0(0b11111111&0b10111111&0b11011111&0b11111111);
  2051  00083E  0E9F               	movlw	159
  2052  000840  ECD6  F003         	call	_OpenTimer0
  2053                           
  2054                           ;readTime.c: 29: WriteTimer0(timer0);
  2055  000844  C04A  F001         	movff	_timer0,WriteTimer0@timer0
  2056  000848  C04B  F002         	movff	_timer0+1,WriteTimer0@timer0+1
  2057  00084C  EC3C  F004         	call	_WriteTimer0	;wreg free
  2058  000850  0012               	return	
  2059  000852                     __end_of_startTimer:
  2060                           	opt stack 0
  2061                           pclatu	equ	0xFFB
  2062                           pclath	equ	0xFFA
  2063                           tblptru	equ	0xFF8
  2064                           tblptrh	equ	0xFF7
  2065                           tblptrl	equ	0xFF6
  2066                           tablat	equ	0xFF5
  2067                           prodh	equ	0xFF4
  2068                           prodl	equ	0xFF3
  2069                           intcon	equ	0xFF2
  2070                           postinc0	equ	0xFEE
  2071                           fsr0h	equ	0xFEA
  2072                           fsr0l	equ	0xFE9
  2073                           wreg	equ	0xFE8
  2074                           postdec1	equ	0xFE5
  2075                           fsr1h	equ	0xFE2
  2076                           fsr1l	equ	0xFE1
  2077                           fsr2h	equ	0xFDA
  2078                           fsr2l	equ	0xFD9
  2079                           status	equ	0xFD8
  2080                           
  2081 ;; *************** function _OpenTimer0 *****************
  2082 ;; Defined at:
  2083 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0open.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;  config          1    wreg     unsigned char 
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;  config          1    0[COMRAM] unsigned char 
  2088 ;; Return value:  Size  Location     Type
  2089 ;;		None               void
  2090 ;; Registers used:
  2091 ;;		wreg, status,2, status,0
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2097 ;;      Params:         0       0       0       0       0       0       0       0       0
  2098 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2099 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2100 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2101 ;;Total ram usage:        1 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; This function calls:
  2104 ;;		Nothing
  2105 ;; This function is called by:
  2106 ;;		_startTimer
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           	psect	text17
  2111  0007AC                     __ptext17:
  2112                           	opt stack 0
  2113  0007AC                     _OpenTimer0:
  2114                           	opt stack 21
  2115                           
  2116                           ;incstack = 0
  2117                           ;OpenTimer0@config stored from wreg
  2118  0007AC  6E01               	movwf	OpenTimer0@config,c
  2119  0007AE  5001               	movf	OpenTimer0@config,w,c
  2120  0007B0  0B7F               	andlw	127
  2121  0007B2  6ED5               	movwf	4053,c	;volatile
  2122  0007B4  0E00               	movlw	0
  2123  0007B6  6ED7               	movwf	4055,c	;volatile
  2124  0007B8  0E00               	movlw	0
  2125  0007BA  6ED6               	movwf	4054,c	;volatile
  2126  0007BC  94F2               	bcf	intcon,2,c	;volatile
  2127  0007BE  AE01               	btfss	OpenTimer0@config,7,c
  2128  0007C0  D002               	goto	i2l467
  2129  0007C2  8AF2               	bsf	intcon,5,c	;volatile
  2130  0007C4  D001               	goto	i2l468
  2131  0007C6                     i2l467:
  2132  0007C6  9AF2               	bcf	intcon,5,c	;volatile
  2133  0007C8                     i2l468:
  2134  0007C8  8ED5               	bsf	4053,7,c	;volatile
  2135  0007CA  0012               	return	
  2136  0007CC                     __end_of_OpenTimer0:
  2137                           	opt stack 0
  2138                           pclatu	equ	0xFFB
  2139                           pclath	equ	0xFFA
  2140                           tblptru	equ	0xFF8
  2141                           tblptrh	equ	0xFF7
  2142                           tblptrl	equ	0xFF6
  2143                           tablat	equ	0xFF5
  2144                           prodh	equ	0xFF4
  2145                           prodl	equ	0xFF3
  2146                           intcon	equ	0xFF2
  2147                           postinc0	equ	0xFEE
  2148                           fsr0h	equ	0xFEA
  2149                           fsr0l	equ	0xFE9
  2150                           wreg	equ	0xFE8
  2151                           postdec1	equ	0xFE5
  2152                           fsr1h	equ	0xFE2
  2153                           fsr1l	equ	0xFE1
  2154                           fsr2h	equ	0xFDA
  2155                           fsr2l	equ	0xFD9
  2156                           status	equ	0xFD8
  2157                           
  2158 ;; *************** function _endTimer *****************
  2159 ;; Defined at:
  2160 ;;		line 35 in file "readTime.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;		None
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;		None
  2165 ;; Return value:  Size  Location     Type
  2166 ;;		None               void
  2167 ;; Registers used:
  2168 ;;		cstack
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2174 ;;      Params:         0       0       0       0       0       0       0       0       0
  2175 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2176 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2177 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2178 ;;Total ram usage:        0 bytes
  2179 ;; Hardware stack levels used:    1
  2180 ;; Hardware stack levels required when called:    1
  2181 ;; This function calls:
  2182 ;;		_CloseTimer0
  2183 ;; This function is called by:
  2184 ;;		_uart_isr
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           	psect	text18
  2189  0008D6                     __ptext18:
  2190                           	opt stack 0
  2191  0008D6                     _endTimer:
  2192                           	opt stack 21
  2193                           
  2194                           ;readTime.c: 36: CloseTimer0();
  2195                           
  2196                           ;incstack = 0
  2197  0008D6  EC6E  F004         	call	_CloseTimer0	;wreg free
  2198  0008DA  0012               	return	
  2199  0008DC                     __end_of_endTimer:
  2200                           	opt stack 0
  2201                           pclatu	equ	0xFFB
  2202                           pclath	equ	0xFFA
  2203                           tblptru	equ	0xFF8
  2204                           tblptrh	equ	0xFF7
  2205                           tblptrl	equ	0xFF6
  2206                           tablat	equ	0xFF5
  2207                           prodh	equ	0xFF4
  2208                           prodl	equ	0xFF3
  2209                           intcon	equ	0xFF2
  2210                           postinc0	equ	0xFEE
  2211                           fsr0h	equ	0xFEA
  2212                           fsr0l	equ	0xFE9
  2213                           wreg	equ	0xFE8
  2214                           postdec1	equ	0xFE5
  2215                           fsr1h	equ	0xFE2
  2216                           fsr1l	equ	0xFE1
  2217                           fsr2h	equ	0xFDA
  2218                           fsr2l	equ	0xFD9
  2219                           status	equ	0xFD8
  2220                           
  2221 ;; *************** function _CloseTimer0 *****************
  2222 ;; Defined at:
  2223 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0close.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;		None
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;		None
  2228 ;; Return value:  Size  Location     Type
  2229 ;;		None               void
  2230 ;; Registers used:
  2231 ;;		None
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2237 ;;      Params:         0       0       0       0       0       0       0       0       0
  2238 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2239 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2240 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2241 ;;Total ram usage:        0 bytes
  2242 ;; Hardware stack levels used:    1
  2243 ;; This function calls:
  2244 ;;		Nothing
  2245 ;; This function is called by:
  2246 ;;		_endTimer
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           	psect	text19
  2251  0008DC                     __ptext19:
  2252                           	opt stack 0
  2253  0008DC                     _CloseTimer0:
  2254                           	opt stack 21
  2255                           
  2256                           ;incstack = 0
  2257  0008DC  9ED5               	bcf	4053,7,c	;volatile
  2258  0008DE  9AF2               	bcf	intcon,5,c	;volatile
  2259  0008E0  0012               	return	
  2260  0008E2                     __end_of_CloseTimer0:
  2261                           	opt stack 0
  2262                           pclatu	equ	0xFFB
  2263                           pclath	equ	0xFFA
  2264                           tblptru	equ	0xFF8
  2265                           tblptrh	equ	0xFF7
  2266                           tblptrl	equ	0xFF6
  2267                           tablat	equ	0xFF5
  2268                           prodh	equ	0xFF4
  2269                           prodl	equ	0xFF3
  2270                           intcon	equ	0xFF2
  2271                           postinc0	equ	0xFEE
  2272                           fsr0h	equ	0xFEA
  2273                           fsr0l	equ	0xFE9
  2274                           wreg	equ	0xFE8
  2275                           postdec1	equ	0xFE5
  2276                           fsr1h	equ	0xFE2
  2277                           fsr1l	equ	0xFE1
  2278                           fsr2h	equ	0xFDA
  2279                           fsr2l	equ	0xFD9
  2280                           status	equ	0xFD8
  2281                           
  2282 ;; *************** function _ReadUSART *****************
  2283 ;; Defined at:
  2284 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uread.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;		None
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;  data            1    0[COMRAM] unsigned char 
  2289 ;; Return value:  Size  Location     Type
  2290 ;;                  1    wreg      unsigned char 
  2291 ;; Registers used:
  2292 ;;		wreg, status,2, status,0
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2298 ;;      Params:         0       0       0       0       0       0       0       0       0
  2299 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2300 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2301 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2302 ;;Total ram usage:        1 bytes
  2303 ;; Hardware stack levels used:    1
  2304 ;; This function calls:
  2305 ;;		Nothing
  2306 ;; This function is called by:
  2307 ;;		_uart_isr
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           	psect	text20
  2312  0007CC                     __ptext20:
  2313                           	opt stack 0
  2314  0007CC                     _ReadUSART:
  2315                           	opt stack 22
  2316                           
  2317                           ;incstack = 0
  2318  0007CC  0EF2               	movlw	242
  2319  0007CE  1630               	andwf	_USART_Status,f,c
  2320  0007D0  ACAB               	btfss	4011,6,c	;volatile
  2321  0007D2  D003               	goto	i2l535
  2322  0007D4  9030               	bcf	_USART_Status,0,c
  2323  0007D6  B0AB               	btfsc	4011,0,c	;volatile
  2324  0007D8  8030               	bsf	_USART_Status,0,c
  2325  0007DA                     i2l535:
  2326  0007DA  B4AB               	btfsc	4011,2,c	;volatile
  2327  0007DC  8430               	bsf	_USART_Status,2,c
  2328  0007DE  B2AB               	btfsc	4011,1,c	;volatile
  2329  0007E0  8630               	bsf	_USART_Status,3,c
  2330  0007E2  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  2331  0007E6  5001               	movf	ReadUSART@data,w,c
  2332  0007E8  0012               	return	
  2333  0007EA                     __end_of_ReadUSART:
  2334                           	opt stack 0
  2335                           pclatu	equ	0xFFB
  2336                           pclath	equ	0xFFA
  2337                           tblptru	equ	0xFF8
  2338                           tblptrh	equ	0xFF7
  2339                           tblptrl	equ	0xFF6
  2340                           tablat	equ	0xFF5
  2341                           prodh	equ	0xFF4
  2342                           prodl	equ	0xFF3
  2343                           intcon	equ	0xFF2
  2344                           postinc0	equ	0xFEE
  2345                           fsr0h	equ	0xFEA
  2346                           fsr0l	equ	0xFE9
  2347                           wreg	equ	0xFE8
  2348                           postdec1	equ	0xFE5
  2349                           fsr1h	equ	0xFE2
  2350                           fsr1l	equ	0xFE1
  2351                           fsr2h	equ	0xFDA
  2352                           fsr2l	equ	0xFD9
  2353                           status	equ	0xFD8
  2354                           
  2355 ;; *************** function _timer0_isr *****************
  2356 ;; Defined at:
  2357 ;;		line 11 in file "readTime.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;		None
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;		None
  2362 ;; Return value:  Size  Location     Type
  2363 ;;		None               void
  2364 ;; Registers used:
  2365 ;;		cstack
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2371 ;;      Params:         0       0       0       0       0       0       0       0       0
  2372 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2373 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2374 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2375 ;;Total ram usage:        0 bytes
  2376 ;; Hardware stack levels used:    1
  2377 ;; Hardware stack levels required when called:    1
  2378 ;; This function calls:
  2379 ;;		_WriteTimer0
  2380 ;; This function is called by:
  2381 ;;		_Interruption
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           	psect	text21
  2386  0008AC                     __ptext21:
  2387                           	opt stack 0
  2388  0008AC                     _timer0_isr:
  2389                           	opt stack 22
  2390                           
  2391                           ;readTime.c: 12: INTCONbits.TMR0IF = 0;
  2392                           
  2393                           ;incstack = 0
  2394  0008AC  94F2               	bcf	intcon,2,c	;volatile
  2395                           
  2396                           ;readTime.c: 13: WriteTimer0(timer0);
  2397  0008AE  C04A  F001         	movff	_timer0,WriteTimer0@timer0
  2398  0008B2  C04B  F002         	movff	_timer0+1,WriteTimer0@timer0+1
  2399  0008B6  EC3C  F004         	call	_WriteTimer0	;wreg free
  2400                           
  2401                           ;readTime.c: 14: return;
  2402  0008BA  0012               	return	
  2403  0008BC                     __end_of_timer0_isr:
  2404                           	opt stack 0
  2405                           pclatu	equ	0xFFB
  2406                           pclath	equ	0xFFA
  2407                           tblptru	equ	0xFF8
  2408                           tblptrh	equ	0xFF7
  2409                           tblptrl	equ	0xFF6
  2410                           tablat	equ	0xFF5
  2411                           prodh	equ	0xFF4
  2412                           prodl	equ	0xFF3
  2413                           intcon	equ	0xFF2
  2414                           postinc0	equ	0xFEE
  2415                           fsr0h	equ	0xFEA
  2416                           fsr0l	equ	0xFE9
  2417                           wreg	equ	0xFE8
  2418                           postdec1	equ	0xFE5
  2419                           fsr1h	equ	0xFE2
  2420                           fsr1l	equ	0xFE1
  2421                           fsr2h	equ	0xFDA
  2422                           fsr2l	equ	0xFD9
  2423                           status	equ	0xFD8
  2424                           
  2425 ;; *************** function _WriteTimer0 *****************
  2426 ;; Defined at:
  2427 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0write.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;  timer0          2    0[COMRAM] unsigned int 
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  timer           2    2[COMRAM] struct Timers
  2432 ;; Return value:  Size  Location     Type
  2433 ;;		None               void
  2434 ;; Registers used:
  2435 ;;		None
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2441 ;;      Params:         2       0       0       0       0       0       0       0       0
  2442 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2443 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2444 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2445 ;;Total ram usage:        4 bytes
  2446 ;; Hardware stack levels used:    1
  2447 ;; This function calls:
  2448 ;;		Nothing
  2449 ;; This function is called by:
  2450 ;;		_timer0_isr
  2451 ;;		_startTimer
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455                           	psect	text22
  2456  000878                     __ptext22:
  2457                           	opt stack 0
  2458  000878                     _WriteTimer0:
  2459                           	opt stack 21
  2460                           
  2461                           ;incstack = 0
  2462  000878  C001  F003         	movff	WriteTimer0@timer0,WriteTimer0@timer
  2463  00087C  C002  F004         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  2464  000880  C004  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  2465  000884  C003  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  2466  000888  0012               	return	
  2467  00088A                     __end_of_WriteTimer0:
  2468                           	opt stack 0
  2469                           pclatu	equ	0xFFB
  2470                           pclath	equ	0xFFA
  2471                           tblptru	equ	0xFF8
  2472                           tblptrh	equ	0xFF7
  2473                           tblptrl	equ	0xFF6
  2474                           tablat	equ	0xFF5
  2475                           prodh	equ	0xFF4
  2476                           prodl	equ	0xFF3
  2477                           intcon	equ	0xFF2
  2478                           postinc0	equ	0xFEE
  2479                           fsr0h	equ	0xFEA
  2480                           fsr0l	equ	0xFE9
  2481                           wreg	equ	0xFE8
  2482                           postdec1	equ	0xFE5
  2483                           fsr1h	equ	0xFE2
  2484                           fsr1l	equ	0xFE1
  2485                           fsr2h	equ	0xFDA
  2486                           fsr2l	equ	0xFD9
  2487                           status	equ	0xFD8
  2488                           
  2489 ;; *************** function _readData *****************
  2490 ;; Defined at:
  2491 ;;		line 23 in file "main.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;		None
  2494 ;; Auto vars:     Size  Location     Type
  2495 ;;		None
  2496 ;; Return value:  Size  Location     Type
  2497 ;;		None               void
  2498 ;; Registers used:
  2499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2505 ;;      Params:         0       0       0       0       0       0       0       0       0
  2506 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2507 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2508 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2509 ;;Total ram usage:        0 bytes
  2510 ;; Hardware stack levels used:    1
  2511 ;; Hardware stack levels required when called:    4
  2512 ;; This function calls:
  2513 ;;		_I2C_read_data_acc
  2514 ;; This function is called by:
  2515 ;;		_Interruption
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519                           	psect	text23
  2520  0006EA                     __ptext23:
  2521                           	opt stack 0
  2522  0006EA                     _readData:
  2523                           	opt stack 19
  2524                           
  2525                           ;main.c: 24: I2C_read_data_acc(0x28, &acc_x);
  2526                           
  2527                           ;incstack = 0
  2528  0006EA  0E00               	movlw	high _acc_x
  2529  0006EC  6E08               	movwf	I2C_read_data_acc@rdptr+1,c
  2530  0006EE  0E3C               	movlw	low _acc_x
  2531  0006F0  6E07               	movwf	I2C_read_data_acc@rdptr,c
  2532  0006F2  0E28               	movlw	40
  2533  0006F4  EC65  F001         	call	_I2C_read_data_acc
  2534                           
  2535                           ;main.c: 25: I2C_read_data_acc(0x2A, &acc_y);
  2536  0006F8  0E00               	movlw	high _acc_y
  2537  0006FA  6E08               	movwf	I2C_read_data_acc@rdptr+1,c
  2538  0006FC  0E3E               	movlw	low _acc_y
  2539  0006FE  6E07               	movwf	I2C_read_data_acc@rdptr,c
  2540  000700  0E2A               	movlw	42
  2541  000702  EC65  F001         	call	_I2C_read_data_acc
  2542                           
  2543                           ;main.c: 26: I2C_read_data_acc(0x2C, &acc_z);
  2544  000706  0E00               	movlw	high _acc_z
  2545  000708  6E08               	movwf	I2C_read_data_acc@rdptr+1,c
  2546  00070A  0E40               	movlw	low _acc_z
  2547  00070C  6E07               	movwf	I2C_read_data_acc@rdptr,c
  2548  00070E  0E2C               	movlw	44
  2549  000710  EC65  F001         	call	_I2C_read_data_acc
  2550  000714  0012               	return	
  2551  000716                     __end_of_readData:
  2552                           	opt stack 0
  2553                           pclatu	equ	0xFFB
  2554                           pclath	equ	0xFFA
  2555                           tblptru	equ	0xFF8
  2556                           tblptrh	equ	0xFF7
  2557                           tblptrl	equ	0xFF6
  2558                           tablat	equ	0xFF5
  2559                           prodh	equ	0xFF4
  2560                           prodl	equ	0xFF3
  2561                           intcon	equ	0xFF2
  2562                           postinc0	equ	0xFEE
  2563                           fsr0h	equ	0xFEA
  2564                           fsr0l	equ	0xFE9
  2565                           wreg	equ	0xFE8
  2566                           postdec1	equ	0xFE5
  2567                           fsr1h	equ	0xFE2
  2568                           fsr1l	equ	0xFE1
  2569                           fsr2h	equ	0xFDA
  2570                           fsr2l	equ	0xFD9
  2571                           status	equ	0xFD8
  2572                           
  2573 ;; *************** function _I2C_read_data_acc *****************
  2574 ;; Defined at:
  2575 ;;		line 76 in file "accmag.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;  reg             1    wreg     unsigned char 
  2578 ;;  rdptr           2    6[COMRAM] PTR unsigned char 
  2579 ;;		 -> acc_z(2), acc_y(2), acc_x(2), 
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;  reg             1    8[COMRAM] unsigned char 
  2582 ;; Return value:  Size  Location     Type
  2583 ;;		None               void
  2584 ;; Registers used:
  2585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2591 ;;      Params:         2       0       0       0       0       0       0       0       0
  2592 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2593 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2594 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2595 ;;Total ram usage:        3 bytes
  2596 ;; Hardware stack levels used:    1
  2597 ;; Hardware stack levels required when called:    3
  2598 ;; This function calls:
  2599 ;;		_data_acc
  2600 ;;		_getsI2C
  2601 ;;		i2_I2C_send
  2602 ;;		i2_IdleI2C
  2603 ;; This function is called by:
  2604 ;;		_readData
  2605 ;; This function uses a non-reentrant model
  2606 ;;
  2607                           
  2608                           	psect	text24
  2609  0002CA                     __ptext24:
  2610                           	opt stack 0
  2611  0002CA                     _I2C_read_data_acc:
  2612                           	opt stack 19
  2613                           
  2614                           ;incstack = 0
  2615                           ;I2C_read_data_acc@reg stored from wreg
  2616  0002CA  6E09               	movwf	I2C_read_data_acc@reg,c
  2617                           
  2618                           ;accmag.c: 79: IdleI2C();
  2619  0002CC  EC5E  F004         	call	i2_IdleI2C	;wreg free
  2620                           
  2621                           ;accmag.c: 80: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  2622  0002D0  80C5               	bsf	4037,0,c	;volatile
  2623  0002D2                     i2l341:
  2624  0002D2  B0C5               	btfsc	4037,0,c	;volatile
  2625  0002D4  D7FE               	goto	i2l341
  2626                           
  2627                           ;accmag.c: 83: I2C_send(0x30);
  2628  0002D6  0E30               	movlw	48
  2629  0002D8  ECC4  F003         	call	i2_I2C_send
  2630                           
  2631                           ;accmag.c: 86: reg = reg|0b10000000;
  2632  0002DC  5009               	movf	I2C_read_data_acc@reg,w,c
  2633  0002DE  0980               	iorlw	128
  2634  0002E0  6E09               	movwf	I2C_read_data_acc@reg,c
  2635                           
  2636                           ;accmag.c: 87: I2C_send(reg);
  2637  0002E2  5009               	movf	I2C_read_data_acc@reg,w,c
  2638  0002E4  ECC4  F003         	call	i2_I2C_send
  2639                           
  2640                           ;accmag.c: 90: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  2641  0002E8  82C5               	bsf	4037,1,c	;volatile
  2642  0002EA                     i2l344:
  2643  0002EA  B2C5               	btfsc	4037,1,c	;volatile
  2644  0002EC  D7FE               	goto	i2l344
  2645                           
  2646                           ;accmag.c: 93: I2C_send(0x31);
  2647  0002EE  0E31               	movlw	49
  2648  0002F0  ECC4  F003         	call	i2_I2C_send
  2649  0002F4                     i2l1938:
  2650  0002F4  C008  F003         	movff	I2C_read_data_acc@rdptr+1,getsI2C@rdptr+1
  2651  0002F8  C007  F002         	movff	I2C_read_data_acc@rdptr,getsI2C@rdptr
  2652  0002FC  0E01               	movlw	1
  2653  0002FE  6E04               	movwf	getsI2C@length,c
  2654  000300  EC1E  F002         	call	_getsI2C	;wreg free
  2655  000304  0900               	iorlw	0
  2656  000306  A4D8               	btfss	status,2,c
  2657  000308  D7F5               	goto	i2l1938
  2658                           
  2659                           ;accmag.c: 98: SSPCON2bits.ACKDT=0;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  2660  00030A  9AC5               	bcf	4037,5,c	;volatile
  2661  00030C  88C5               	bsf	4037,4,c	;volatile
  2662  00030E                     i2l350:
  2663  00030E  B8C5               	btfsc	4037,4,c	;volatile
  2664  000310  D7FE               	goto	i2l350
  2665  000312                     i2l1940:
  2666  000312  0E01               	movlw	1
  2667  000314  2407               	addwf	I2C_read_data_acc@rdptr,w,c
  2668  000316  6E02               	movwf	getsI2C@rdptr,c
  2669  000318  0E00               	movlw	0
  2670  00031A  2008               	addwfc	I2C_read_data_acc@rdptr+1,w,c
  2671  00031C  6E03               	movwf	getsI2C@rdptr+1,c
  2672  00031E  0E01               	movlw	1
  2673  000320  6E04               	movwf	getsI2C@length,c
  2674  000322  EC1E  F002         	call	_getsI2C	;wreg free
  2675  000326  0900               	iorlw	0
  2676  000328  A4D8               	btfss	status,2,c
  2677  00032A  D7F3               	goto	i2l1940
  2678                           
  2679                           ;accmag.c: 103: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  2680  00032C  8AC5               	bsf	4037,5,c	;volatile
  2681  00032E  88C5               	bsf	4037,4,c	;volatile
  2682  000330                     i2l356:
  2683  000330  B8C5               	btfsc	4037,4,c	;volatile
  2684  000332  D7FE               	goto	i2l356
  2685  000334                     i2l359:
  2686  000334  B8C5               	btfsc	4037,4,c	;volatile
  2687  000336  D7FE               	goto	i2l359
  2688                           
  2689                           ;accmag.c: 106: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  2690  000338  84C5               	bsf	4037,2,c	;volatile
  2691  00033A                     i2l362:
  2692  00033A  B4C5               	btfsc	4037,2,c	;volatile
  2693  00033C  D7FE               	goto	i2l362
  2694                           
  2695                           ;accmag.c: 107: data_acc(rdptr);
  2696  00033E  C008  F002         	movff	I2C_read_data_acc@rdptr+1,data_acc@ptr+1
  2697  000342  C007  F001         	movff	I2C_read_data_acc@rdptr,data_acc@ptr
  2698  000346  EC30  F003         	call	_data_acc	;wreg free
  2699  00034A  0012               	return	
  2700  00034C                     __end_of_I2C_read_data_acc:
  2701                           	opt stack 0
  2702                           pclatu	equ	0xFFB
  2703                           pclath	equ	0xFFA
  2704                           tblptru	equ	0xFF8
  2705                           tblptrh	equ	0xFF7
  2706                           tblptrl	equ	0xFF6
  2707                           tablat	equ	0xFF5
  2708                           prodh	equ	0xFF4
  2709                           prodl	equ	0xFF3
  2710                           intcon	equ	0xFF2
  2711                           postinc0	equ	0xFEE
  2712                           fsr0h	equ	0xFEA
  2713                           fsr0l	equ	0xFE9
  2714                           wreg	equ	0xFE8
  2715                           postdec1	equ	0xFE5
  2716                           fsr1h	equ	0xFE2
  2717                           fsr1l	equ	0xFE1
  2718                           fsr2h	equ	0xFDA
  2719                           fsr2l	equ	0xFD9
  2720                           status	equ	0xFD8
  2721                           
  2722 ;; *************** function i2_I2C_send *****************
  2723 ;; Defined at:
  2724 ;;		line 26 in file "i2cFunct.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;  reg             1    wreg     unsigned char 
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;  reg             1    4[COMRAM] unsigned char 
  2729 ;;  I2C_send        1    5[COMRAM] char 
  2730 ;;  I2C_send        1    3[COMRAM] unsigned char 
  2731 ;; Return value:  Size  Location     Type
  2732 ;;		None               void
  2733 ;; Registers used:
  2734 ;;		wreg, status,2, status,0, cstack
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2740 ;;      Params:         0       0       0       0       0       0       0       0       0
  2741 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2742 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2743 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2744 ;;Total ram usage:        3 bytes
  2745 ;; Hardware stack levels used:    1
  2746 ;; Hardware stack levels required when called:    2
  2747 ;; This function calls:
  2748 ;;		i2_IdleI2C
  2749 ;;		i2_WriteI2C
  2750 ;; This function is called by:
  2751 ;;		_I2C_read_data_acc
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           	psect	text25
  2756  000788                     __ptext25:
  2757                           	opt stack 0
  2758  000788                     i2_I2C_send:
  2759                           	opt stack 19
  2760                           
  2761                           ;incstack = 0
  2762                           ;i2I2C_send@reg stored from wreg
  2763  000788  6E05               	movwf	i2I2C_send@reg,c
  2764                           
  2765                           ;i2cFunct.c: 28: unsigned char data;
  2766                           ;i2cFunct.c: 29: signed char status;
  2767                           ;i2cFunct.c: 31: data = SSPBUF;
  2768  00078A  CFC9 F004          	movff	4041,i2I2C_send@data	;volatile
  2769  00078E                     i2l1918:
  2770                           
  2771                           ;i2cFunct.c: 33: {
  2772                           ;i2cFunct.c: 34: status = WriteI2C(reg);
  2773  00078E  5005               	movf	i2I2C_send@reg,w,c
  2774  000790  ECE6  F001         	call	i2_WriteI2C
  2775  000794  6E06               	movwf	i2I2C_send@status,c
  2776                           
  2777                           ;i2cFunct.c: 35: IdleI2C();
  2778  000796  EC5E  F004         	call	i2_IdleI2C	;wreg free
  2779                           
  2780                           ;i2cFunct.c: 36: if (status == -1)
  2781  00079A  2806               	incf	i2I2C_send@status,w,c
  2782  00079C  A4D8               	btfss	status,2,c
  2783  00079E  D003               	goto	i2l215
  2784                           
  2785                           ;i2cFunct.c: 37: {
  2786                           ;i2cFunct.c: 38: data = SSPBUF;
  2787  0007A0  CFC9 F004          	movff	4041,i2I2C_send@data	;volatile
  2788                           
  2789                           ;i2cFunct.c: 39: SSPCON1bits.WCOL = 0;
  2790  0007A4  9EC6               	bcf	4038,7,c	;volatile
  2791  0007A6                     i2l215:
  2792                           
  2793                           ;i2cFunct.c: 40: }
  2794                           ;i2cFunct.c: 41: }
  2795                           ;i2cFunct.c: 42: while(status!=0);
  2796  0007A6  6606               	tstfsz	i2I2C_send@status,c
  2797  0007A8  D7F2               	goto	i2l1918
  2798  0007AA  0012               	return	
  2799  0007AC                     __end_ofi2_I2C_send:
  2800                           	opt stack 0
  2801                           pclatu	equ	0xFFB
  2802                           pclath	equ	0xFFA
  2803                           tblptru	equ	0xFF8
  2804                           tblptrh	equ	0xFF7
  2805                           tblptrl	equ	0xFF6
  2806                           tablat	equ	0xFF5
  2807                           prodh	equ	0xFF4
  2808                           prodl	equ	0xFF3
  2809                           intcon	equ	0xFF2
  2810                           postinc0	equ	0xFEE
  2811                           fsr0h	equ	0xFEA
  2812                           fsr0l	equ	0xFE9
  2813                           wreg	equ	0xFE8
  2814                           postdec1	equ	0xFE5
  2815                           fsr1h	equ	0xFE2
  2816                           fsr1l	equ	0xFE1
  2817                           fsr2h	equ	0xFDA
  2818                           fsr2l	equ	0xFD9
  2819                           status	equ	0xFD8
  2820                           
  2821 ;; *************** function i2_WriteI2C *****************
  2822 ;; Defined at:
  2823 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\i2c\i2c_writ.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;  data_out        1    wreg     unsigned char 
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;  data_out        1    2[COMRAM] unsigned char 
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  1    wreg      char 
  2830 ;; Registers used:
  2831 ;;		wreg, status,2, status,0, cstack
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2837 ;;      Params:         0       0       0       0       0       0       0       0       0
  2838 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2839 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2840 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2841 ;;Total ram usage:        2 bytes
  2842 ;; Hardware stack levels used:    1
  2843 ;; Hardware stack levels required when called:    1
  2844 ;; This function calls:
  2845 ;;		i2_IdleI2C
  2846 ;; This function is called by:
  2847 ;;		i2_I2C_send
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851                           	psect	text26
  2852  0003CC                     __ptext26:
  2853                           	opt stack 0
  2854  0003CC                     i2_WriteI2C:
  2855                           	opt stack 19
  2856                           
  2857                           ;incstack = 0
  2858                           ;i2WriteI2C@data_out stored from wreg
  2859  0003CC  6E03               	movwf	i2WriteI2C@data_out,c
  2860  0003CE  C003  FFC9         	movff	i2WriteI2C@data_out,4041	;volatile
  2861  0003D2  AEC6               	btfss	4038,7,c	;volatile
  2862  0003D4  D002               	goto	i2l1880
  2863  0003D6  0EFF               	movlw	255
  2864  0003D8  D030               	goto	i2l636
  2865  0003DA                     i2l1880:
  2866  0003DA  CFC6 F002          	movff	4038,??i2_WriteI2C	;volatile
  2867  0003DE  0E0F               	movlw	15
  2868  0003E0  1602               	andwf	??i2_WriteI2C,f,c
  2869  0003E2  5002               	movf	??i2_WriteI2C,w,c
  2870  0003E4  0A08               	xorlw	8
  2871  0003E6  B4D8               	btfsc	status,2,c
  2872  0003E8  D00F               	goto	i2l1898
  2873  0003EA  CFC6 F002          	movff	4038,??i2_WriteI2C	;volatile
  2874  0003EE  0E0F               	movlw	15
  2875  0003F0  1602               	andwf	??i2_WriteI2C,f,c
  2876  0003F2  5002               	movf	??i2_WriteI2C,w,c
  2877  0003F4  0A0B               	xorlw	11
  2878  0003F6  B4D8               	btfsc	status,2,c
  2879  0003F8  D007               	goto	i2l1898
  2880  0003FA  88C6               	bsf	4038,4,c	;volatile
  2881  0003FC                     i2l639:
  2882  0003FC  A69E               	btfss	3998,3,c	;volatile
  2883  0003FE  D7FE               	goto	i2l639
  2884  000400  A4C7               	btfss	4039,2,c	;volatile
  2885  000402  B0C7               	btfsc	4039,0,c	;volatile
  2886  000404  D019               	goto	i2l1912
  2887  000406  D016               	goto	i2u151_40
  2888  000408                     i2l1898:
  2889  000408  CFC6 F002          	movff	4038,??i2_WriteI2C	;volatile
  2890  00040C  0E0F               	movlw	15
  2891  00040E  1602               	andwf	??i2_WriteI2C,f,c
  2892  000410  5002               	movf	??i2_WriteI2C,w,c
  2893  000412  0A08               	xorlw	8
  2894  000414  B4D8               	btfsc	status,2,c
  2895  000416  D008               	goto	i2l648
  2896  000418  CFC6 F002          	movff	4038,??i2_WriteI2C	;volatile
  2897  00041C  0E0F               	movlw	15
  2898  00041E  1602               	andwf	??i2_WriteI2C,f,c
  2899  000420  5002               	movf	??i2_WriteI2C,w,c
  2900  000422  0A0B               	xorlw	11
  2901  000424  A4D8               	btfss	status,2,c
  2902  000426  D009               	goto	i2l636
  2903  000428                     i2l648:
  2904  000428  B0C7               	btfsc	4039,0,c	;volatile
  2905  00042A  D7FE               	goto	i2l648
  2906  00042C  EC5E  F004         	call	i2_IdleI2C	;wreg free
  2907  000430  ACC5               	btfss	4037,6,c	;volatile
  2908  000432  D002               	goto	i2l1912
  2909  000434                     i2u151_40:
  2910  000434  0EFE               	movlw	254
  2911  000436  D001               	goto	i2l636
  2912  000438                     i2l1912:
  2913  000438  0E00               	movlw	0
  2914  00043A                     i2l636:
  2915  00043A  0012               	return	
  2916  00043C                     __end_ofi2_WriteI2C:
  2917                           	opt stack 0
  2918                           pclatu	equ	0xFFB
  2919                           pclath	equ	0xFFA
  2920                           tblptru	equ	0xFF8
  2921                           tblptrh	equ	0xFF7
  2922                           tblptrl	equ	0xFF6
  2923                           tablat	equ	0xFF5
  2924                           prodh	equ	0xFF4
  2925                           prodl	equ	0xFF3
  2926                           intcon	equ	0xFF2
  2927                           postinc0	equ	0xFEE
  2928                           fsr0h	equ	0xFEA
  2929                           fsr0l	equ	0xFE9
  2930                           wreg	equ	0xFE8
  2931                           postdec1	equ	0xFE5
  2932                           fsr1h	equ	0xFE2
  2933                           fsr1l	equ	0xFE1
  2934                           fsr2h	equ	0xFDA
  2935                           fsr2l	equ	0xFD9
  2936                           status	equ	0xFD8
  2937                           
  2938 ;; *************** function i2_IdleI2C *****************
  2939 ;; Defined at:
  2940 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\i2c\i2c_idle.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;		None
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;		None
  2945 ;; Return value:  Size  Location     Type
  2946 ;;		None               void
  2947 ;; Registers used:
  2948 ;;		wreg, status,2, status,0
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2954 ;;      Params:         0       0       0       0       0       0       0       0       0
  2955 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2956 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2957 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2958 ;;Total ram usage:        1 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; This function calls:
  2961 ;;		Nothing
  2962 ;; This function is called by:
  2963 ;;		_I2C_read_data_acc
  2964 ;;		i2_I2C_send
  2965 ;;		i2_WriteI2C
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969                           	psect	text27
  2970  0008BC                     __ptext27:
  2971                           	opt stack 0
  2972  0008BC                     i2_IdleI2C:
  2973                           	opt stack 21
  2974  0008BC                     i2l1866:
  2975  0008BC  CFC5 F001          	movff	4037,??i2_IdleI2C	;volatile
  2976  0008C0  0E1F               	movlw	31
  2977  0008C2  1601               	andwf	??i2_IdleI2C,f,c
  2978  0008C4  B4D8               	btfsc	status,2,c
  2979  0008C6  B4C7               	btfsc	4039,2,c	;volatile
  2980  0008C8  D7F9               	goto	i2l1866
  2981  0008CA  0012               	return	
  2982  0008CC                     __end_ofi2_IdleI2C:
  2983                           	opt stack 0
  2984                           pclatu	equ	0xFFB
  2985                           pclath	equ	0xFFA
  2986                           tblptru	equ	0xFF8
  2987                           tblptrh	equ	0xFF7
  2988                           tblptrl	equ	0xFF6
  2989                           tablat	equ	0xFF5
  2990                           prodh	equ	0xFF4
  2991                           prodl	equ	0xFF3
  2992                           intcon	equ	0xFF2
  2993                           postinc0	equ	0xFEE
  2994                           fsr0h	equ	0xFEA
  2995                           fsr0l	equ	0xFE9
  2996                           wreg	equ	0xFE8
  2997                           postdec1	equ	0xFE5
  2998                           fsr1h	equ	0xFE2
  2999                           fsr1l	equ	0xFE1
  3000                           fsr2h	equ	0xFDA
  3001                           fsr2l	equ	0xFD9
  3002                           status	equ	0xFD8
  3003                           
  3004 ;; *************** function _getsI2C *****************
  3005 ;; Defined at:
  3006 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\i2c\i2c_gets.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;  rdptr           2    1[COMRAM] PTR unsigned char 
  3009 ;;		 -> acc_z(2), acc_y(2), acc_x(2), 
  3010 ;;  length          1    3[COMRAM] unsigned char 
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;		None
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  1    wreg      char 
  3015 ;; Registers used:
  3016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3022 ;;      Params:         3       0       0       0       0       0       0       0       0
  3023 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3024 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3025 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3026 ;;Total ram usage:        4 bytes
  3027 ;; Hardware stack levels used:    1
  3028 ;; Hardware stack levels required when called:    1
  3029 ;; This function calls:
  3030 ;;		_ReadI2C
  3031 ;; This function is called by:
  3032 ;;		_I2C_read_data_acc
  3033 ;;		_I2C_read_byte_gyro
  3034 ;;		_I2C_read_data_gyro
  3035 ;;		_I2C_read_byte_acc
  3036 ;;		_I2C_read_byte_mag
  3037 ;;		_I2C_read_data_mag
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           	psect	text28
  3042  00043C                     __ptext28:
  3043                           	opt stack 0
  3044  00043C                     _getsI2C:
  3045                           	opt stack 20
  3046                           
  3047                           ;incstack = 0
  3048  00043C  D026               	goto	i2l1466
  3049  00043E                     i2l1450:
  3050  00043E  EC8B  F003         	call	_ReadI2C	;wreg free
  3051  000442  C002  FFD9         	movff	getsI2C@rdptr,fsr2l
  3052  000446  C003  FFDA         	movff	getsI2C@rdptr+1,fsr2h
  3053  00044A  6EDF               	movwf	indf2,c
  3054  00044C  4A02               	infsnz	getsI2C@rdptr,f,c
  3055  00044E  2A03               	incf	getsI2C@rdptr+1,f,c
  3056  000450                     i2l568:
  3057  000450  B6C5               	btfsc	4037,3,c	;volatile
  3058  000452  D7FE               	goto	i2l568
  3059  000454  A6A1               	btfss	4001,3,c	;volatile
  3060  000456  D002               	goto	i2l1458
  3061  000458  0EFF               	movlw	255
  3062  00045A  D01C               	goto	i2l572
  3063  00045C                     i2l1458:
  3064  00045C  CFC6 F005          	movff	4038,??_getsI2C	;volatile
  3065  000460  0E0F               	movlw	15
  3066  000462  1605               	andwf	??_getsI2C,f,c
  3067  000464  5005               	movf	??_getsI2C,w,c
  3068  000466  0A08               	xorlw	8
  3069  000468  B4D8               	btfsc	status,2,c
  3070  00046A  D008               	goto	i2l1462
  3071  00046C  CFC6 F005          	movff	4038,??_getsI2C	;volatile
  3072  000470  0E0F               	movlw	15
  3073  000472  1605               	andwf	??_getsI2C,f,c
  3074  000474  5005               	movf	??_getsI2C,w,c
  3075  000476  0A0B               	xorlw	11
  3076  000478  A4D8               	btfss	status,2,c
  3077  00047A  D007               	goto	i2l1466
  3078  00047C                     i2l1462:
  3079  00047C  5004               	movf	getsI2C@length,w,c
  3080  00047E  B4D8               	btfsc	status,2,c
  3081  000480  D004               	goto	i2l1466
  3082  000482  9AC5               	bcf	4037,5,c	;volatile
  3083  000484  88C5               	bsf	4037,4,c	;volatile
  3084  000486                     i2l577:
  3085  000486  B8C5               	btfsc	4037,4,c	;volatile
  3086  000488  D7FE               	goto	i2l577
  3087  00048A                     i2l1466:
  3088  00048A  0604               	decf	getsI2C@length,f,c
  3089  00048C  2804               	incf	getsI2C@length& (0+255),w,c
  3090  00048E  A4D8               	btfss	status,2,c
  3091  000490  D7D6               	goto	i2l1450
  3092  000492  0E00               	movlw	0
  3093  000494                     i2l572:
  3094  000494  0012               	return	
  3095  000496                     __end_of_getsI2C:
  3096                           	opt stack 0
  3097                           pclatu	equ	0xFFB
  3098                           pclath	equ	0xFFA
  3099                           tblptru	equ	0xFF8
  3100                           tblptrh	equ	0xFF7
  3101                           tblptrl	equ	0xFF6
  3102                           tablat	equ	0xFF5
  3103                           prodh	equ	0xFF4
  3104                           prodl	equ	0xFF3
  3105                           intcon	equ	0xFF2
  3106                           postinc0	equ	0xFEE
  3107                           fsr0h	equ	0xFEA
  3108                           fsr0l	equ	0xFE9
  3109                           wreg	equ	0xFE8
  3110                           postdec1	equ	0xFE5
  3111                           fsr1h	equ	0xFE2
  3112                           fsr1l	equ	0xFE1
  3113                           indf2	equ	0xFDF
  3114                           fsr2h	equ	0xFDA
  3115                           fsr2l	equ	0xFD9
  3116                           status	equ	0xFD8
  3117                           
  3118 ;; *************** function _ReadI2C *****************
  3119 ;; Defined at:
  3120 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\i2c\i2c_read.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;		None
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;		None
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  1    wreg      unsigned char 
  3127 ;; Registers used:
  3128 ;;		wreg, status,2, status,0
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3134 ;;      Params:         0       0       0       0       0       0       0       0       0
  3135 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3136 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3137 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3138 ;;Total ram usage:        1 bytes
  3139 ;; Hardware stack levels used:    1
  3140 ;; This function calls:
  3141 ;;		Nothing
  3142 ;; This function is called by:
  3143 ;;		_getsI2C
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147                           	psect	text29
  3148  000716                     __ptext29:
  3149                           	opt stack 0
  3150  000716                     _ReadI2C:
  3151                           	opt stack 20
  3152                           
  3153                           ;incstack = 0
  3154  000716  CFC6 F001          	movff	4038,??_ReadI2C	;volatile
  3155  00071A  0E0F               	movlw	15
  3156  00071C  1601               	andwf	??_ReadI2C,f,c
  3157  00071E  5001               	movf	??_ReadI2C,w,c
  3158  000720  0A08               	xorlw	8
  3159  000722  B4D8               	btfsc	status,2,c
  3160  000724  D007               	goto	i2l614
  3161  000726  CFC6 F001          	movff	4038,??_ReadI2C	;volatile
  3162  00072A  0E0F               	movlw	15
  3163  00072C  1601               	andwf	??_ReadI2C,f,c
  3164  00072E  5001               	movf	??_ReadI2C,w,c
  3165  000730  0A0B               	xorlw	11
  3166  000732  B4D8               	btfsc	status,2,c
  3167  000734                     i2l614:
  3168  000734  86C5               	bsf	4037,3,c	;volatile
  3169  000736                     i2l615:
  3170  000736  A0C7               	btfss	4039,0,c	;volatile
  3171  000738  D7FE               	goto	i2l615
  3172  00073A  50C9               	movf	4041,w,c	;volatile
  3173  00073C  0012               	return	
  3174  00073E                     __end_of_ReadI2C:
  3175                           	opt stack 0
  3176                           pclatu	equ	0xFFB
  3177                           pclath	equ	0xFFA
  3178                           tblptru	equ	0xFF8
  3179                           tblptrh	equ	0xFF7
  3180                           tblptrl	equ	0xFF6
  3181                           tablat	equ	0xFF5
  3182                           prodh	equ	0xFF4
  3183                           prodl	equ	0xFF3
  3184                           intcon	equ	0xFF2
  3185                           postinc0	equ	0xFEE
  3186                           fsr0h	equ	0xFEA
  3187                           fsr0l	equ	0xFE9
  3188                           wreg	equ	0xFE8
  3189                           postdec1	equ	0xFE5
  3190                           fsr1h	equ	0xFE2
  3191                           fsr1l	equ	0xFE1
  3192                           indf2	equ	0xFDF
  3193                           fsr2h	equ	0xFDA
  3194                           fsr2l	equ	0xFD9
  3195                           status	equ	0xFD8
  3196                           
  3197 ;; *************** function _data_acc *****************
  3198 ;; Defined at:
  3199 ;;		line 115 in file "accmag.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;  ptr             2    0[COMRAM] PTR int 
  3202 ;;		 -> acc_z(2), acc_y(2), acc_x(2), 
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;		None
  3205 ;; Return value:  Size  Location     Type
  3206 ;;		None               void
  3207 ;; Registers used:
  3208 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3209 ;; Tracked objects:
  3210 ;;		On entry : 0/0
  3211 ;;		On exit  : 0/0
  3212 ;;		Unchanged: 0/0
  3213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3214 ;;      Params:         2       0       0       0       0       0       0       0       0
  3215 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3216 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3217 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3218 ;;Total ram usage:        5 bytes
  3219 ;; Hardware stack levels used:    1
  3220 ;; This function calls:
  3221 ;;		Nothing
  3222 ;; This function is called by:
  3223 ;;		_I2C_read_data_acc
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           	psect	text30
  3228  000660                     __ptext30:
  3229                           	opt stack 0
  3230  000660                     _data_acc:
  3231                           	opt stack 21
  3232                           
  3233                           ;accmag.c: 116: *ptr = *ptr >> 4;
  3234                           
  3235                           ;incstack = 0
  3236  000660  C001  FFD9         	movff	data_acc@ptr,fsr2l
  3237  000664  C002  FFDA         	movff	data_acc@ptr+1,fsr2h
  3238  000668  CFDE F003          	movff	postinc2,??_data_acc
  3239  00066C  CFDD F004          	movff	postdec2,??_data_acc+1
  3240  000670  0E04               	movlw	4
  3241  000672  6E05               	movwf	(??_data_acc+2)& (0+255),c
  3242  000674                     i2u48_45:
  3243  000674  3404               	rlcf	??_data_acc+1,w,c
  3244  000676  3204               	rrcf	??_data_acc+1,f,c
  3245  000678  3203               	rrcf	??_data_acc,f,c
  3246  00067A  2E05               	decfsz	(??_data_acc+2)& (0+255),f,c
  3247  00067C  D7FB               	goto	i2u48_45
  3248  00067E  C001  FFD9         	movff	data_acc@ptr,fsr2l
  3249  000682  C002  FFDA         	movff	data_acc@ptr+1,fsr2h
  3250  000686  C003  FFDE         	movff	??_data_acc,postinc2
  3251  00068A  C004  FFDD         	movff	??_data_acc+1,postdec2
  3252  00068E  0012               	return	
  3253  000690                     __end_of_data_acc:
  3254                           	opt stack 0
  3255                           pclatu	equ	0xFFB
  3256                           pclath	equ	0xFFA
  3257                           tblptru	equ	0xFF8
  3258                           tblptrh	equ	0xFF7
  3259                           tblptrl	equ	0xFF6
  3260                           tablat	equ	0xFF5
  3261                           prodh	equ	0xFF4
  3262                           prodl	equ	0xFF3
  3263                           intcon	equ	0xFF2
  3264                           postinc0	equ	0xFEE
  3265                           fsr0h	equ	0xFEA
  3266                           fsr0l	equ	0xFE9
  3267                           wreg	equ	0xFE8
  3268                           postdec1	equ	0xFE5
  3269                           fsr1h	equ	0xFE2
  3270                           fsr1l	equ	0xFE1
  3271                           indf2	equ	0xFDF
  3272                           postinc2	equ	0xFDE
  3273                           postdec2	equ	0xFDD
  3274                           fsr2h	equ	0xFDA
  3275                           fsr2l	equ	0xFD9
  3276                           status	equ	0xFD8
  3277                           
  3278 ;; *************** function _imprimir *****************
  3279 ;; Defined at:
  3280 ;;		line 58 in file "main.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;		None
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;		None
  3285 ;; Return value:  Size  Location     Type
  3286 ;;		None               void
  3287 ;; Registers used:
  3288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3294 ;;      Params:         0       0       0       0       0       0       0       0       0
  3295 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3296 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3297 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3298 ;;Total ram usage:        0 bytes
  3299 ;; Hardware stack levels used:    1
  3300 ;; Hardware stack levels required when called:    3
  3301 ;; This function calls:
  3302 ;;		_WriteUSART
  3303 ;;		_itoa
  3304 ;;		_putsUSART
  3305 ;; This function is called by:
  3306 ;;		_Interruption
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           	psect	text31
  3311  00001C                     __ptext31:
  3312                           	opt stack 0
  3313  00001C                     _imprimir:
  3314                           	opt stack 20
  3315  00001C                     i2l81:
  3316  00001C  A2AC               	btfss	4012,1,c	;volatile
  3317  00001E  D7FE               	goto	i2l81
  3318                           
  3319                           ;main.c: 60: WriteUSART(35);
  3320  000020  0E23               	movlw	35
  3321  000022  EC45  F004         	call	_WriteUSART
  3322  000026                     i2l84:
  3323  000026  A2AC               	btfss	4012,1,c	;volatile
  3324  000028  D7FE               	goto	i2l84
  3325                           
  3326                           ;main.c: 62: WriteUSART(88);
  3327  00002A  0E58               	movlw	88
  3328  00002C  EC45  F004         	call	_WriteUSART
  3329  000030                     i2l87:
  3330  000030  A2AC               	btfss	4012,1,c	;volatile
  3331  000032  D7FE               	goto	i2l87
  3332                           
  3333                           ;main.c: 64: itoa(buf, acc_x, 10);
  3334  000034  0E00               	movlw	high _buf
  3335  000036  6E12               	movwf	itoa@buf+1,c
  3336  000038  0E32               	movlw	low _buf
  3337  00003A  6E11               	movwf	itoa@buf,c
  3338  00003C  C03C  F013         	movff	_acc_x,itoa@val
  3339  000040  C03D  F014         	movff	_acc_x+1,itoa@val+1
  3340  000044  0E00               	movlw	0
  3341  000046  6E16               	movwf	itoa@base+1,c
  3342  000048  0E0A               	movlw	10
  3343  00004A  6E15               	movwf	itoa@base,c
  3344  00004C  EC4B  F002         	call	_itoa	;wreg free
  3345                           
  3346                           ;main.c: 65: putsUSART(&buf);
  3347  000050  0E00               	movlw	high _buf
  3348  000052  6E03               	movwf	putsUSART@data+1,c
  3349  000054  0E32               	movlw	low _buf
  3350  000056  6E02               	movwf	putsUSART@data,c
  3351  000058  EC9F  F003         	call	_putsUSART	;wreg free
  3352  00005C                     i2l90:
  3353  00005C  A2AC               	btfss	4012,1,c	;volatile
  3354  00005E  D7FE               	goto	i2l90
  3355                           
  3356                           ;main.c: 68: WriteUSART(43);
  3357  000060  0E2B               	movlw	43
  3358  000062  EC45  F004         	call	_WriteUSART
  3359  000066                     i2l93:
  3360  000066  A2AC               	btfss	4012,1,c	;volatile
  3361  000068  D7FE               	goto	i2l93
  3362                           
  3363                           ;main.c: 70: WriteUSART(89);
  3364  00006A  0E59               	movlw	89
  3365  00006C  EC45  F004         	call	_WriteUSART
  3366  000070                     i2l96:
  3367  000070  A2AC               	btfss	4012,1,c	;volatile
  3368  000072  D7FE               	goto	i2l96
  3369                           
  3370                           ;main.c: 73: itoa(buf, acc_y, 10);
  3371  000074  0E00               	movlw	high _buf
  3372  000076  6E12               	movwf	itoa@buf+1,c
  3373  000078  0E32               	movlw	low _buf
  3374  00007A  6E11               	movwf	itoa@buf,c
  3375  00007C  C03E  F013         	movff	_acc_y,itoa@val
  3376  000080  C03F  F014         	movff	_acc_y+1,itoa@val+1
  3377  000084  0E00               	movlw	0
  3378  000086  6E16               	movwf	itoa@base+1,c
  3379  000088  0E0A               	movlw	10
  3380  00008A  6E15               	movwf	itoa@base,c
  3381  00008C  EC4B  F002         	call	_itoa	;wreg free
  3382                           
  3383                           ;main.c: 74: putsUSART(&buf);
  3384  000090  0E00               	movlw	high _buf
  3385  000092  6E03               	movwf	putsUSART@data+1,c
  3386  000094  0E32               	movlw	low _buf
  3387  000096  6E02               	movwf	putsUSART@data,c
  3388  000098  EC9F  F003         	call	_putsUSART	;wreg free
  3389  00009C                     i2l99:
  3390  00009C  A2AC               	btfss	4012,1,c	;volatile
  3391  00009E  D7FE               	goto	i2l99
  3392                           
  3393                           ;main.c: 76: WriteUSART(43);
  3394  0000A0  0E2B               	movlw	43
  3395  0000A2  EC45  F004         	call	_WriteUSART
  3396  0000A6                     i2l102:
  3397  0000A6  A2AC               	btfss	4012,1,c	;volatile
  3398  0000A8  D7FE               	goto	i2l102
  3399                           
  3400                           ;main.c: 78: WriteUSART(90);
  3401  0000AA  0E5A               	movlw	90
  3402  0000AC  EC45  F004         	call	_WriteUSART
  3403  0000B0                     i2l105:
  3404  0000B0  A2AC               	btfss	4012,1,c	;volatile
  3405  0000B2  D7FE               	goto	i2l105
  3406                           
  3407                           ;main.c: 81: itoa(buf, acc_z, 10);
  3408  0000B4  0E00               	movlw	high _buf
  3409  0000B6  6E12               	movwf	itoa@buf+1,c
  3410  0000B8  0E32               	movlw	low _buf
  3411  0000BA  6E11               	movwf	itoa@buf,c
  3412  0000BC  C040  F013         	movff	_acc_z,itoa@val
  3413  0000C0  C041  F014         	movff	_acc_z+1,itoa@val+1
  3414  0000C4  0E00               	movlw	0
  3415  0000C6  6E16               	movwf	itoa@base+1,c
  3416  0000C8  0E0A               	movlw	10
  3417  0000CA  6E15               	movwf	itoa@base,c
  3418  0000CC  EC4B  F002         	call	_itoa	;wreg free
  3419                           
  3420                           ;main.c: 82: putsUSART(&buf);
  3421  0000D0  0E00               	movlw	high _buf
  3422  0000D2  6E03               	movwf	putsUSART@data+1,c
  3423  0000D4  0E32               	movlw	low _buf
  3424  0000D6  6E02               	movwf	putsUSART@data,c
  3425  0000D8  EC9F  F003         	call	_putsUSART	;wreg free
  3426  0000DC                     i2l108:
  3427  0000DC  A2AC               	btfss	4012,1,c	;volatile
  3428  0000DE  D7FE               	goto	i2l108
  3429                           
  3430                           ;main.c: 84: WriteUSART(43);
  3431  0000E0  0E2B               	movlw	43
  3432  0000E2  EC45  F004         	call	_WriteUSART
  3433  0000E6                     i2l111:
  3434  0000E6  A2AC               	btfss	4012,1,c	;volatile
  3435  0000E8  D7FE               	goto	i2l111
  3436                           
  3437                           ;main.c: 86: WriteUSART(33);
  3438  0000EA  0E21               	movlw	33
  3439  0000EC  EC45  F004         	call	_WriteUSART
  3440  0000F0  0012               	return	
  3441  0000F2                     __end_of_imprimir:
  3442                           	opt stack 0
  3443                           pclatu	equ	0xFFB
  3444                           pclath	equ	0xFFA
  3445                           tblptru	equ	0xFF8
  3446                           tblptrh	equ	0xFF7
  3447                           tblptrl	equ	0xFF6
  3448                           tablat	equ	0xFF5
  3449                           prodh	equ	0xFF4
  3450                           prodl	equ	0xFF3
  3451                           intcon	equ	0xFF2
  3452                           postinc0	equ	0xFEE
  3453                           fsr0h	equ	0xFEA
  3454                           fsr0l	equ	0xFE9
  3455                           wreg	equ	0xFE8
  3456                           postdec1	equ	0xFE5
  3457                           fsr1h	equ	0xFE2
  3458                           fsr1l	equ	0xFE1
  3459                           indf2	equ	0xFDF
  3460                           postinc2	equ	0xFDE
  3461                           postdec2	equ	0xFDD
  3462                           fsr2h	equ	0xFDA
  3463                           fsr2l	equ	0xFD9
  3464                           status	equ	0xFD8
  3465                           
  3466 ;; *************** function _putsUSART *****************
  3467 ;; Defined at:
  3468 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uputs.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;  data            2    1[COMRAM] PTR unsigned char 
  3471 ;;		 -> buf(10), 
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;		None
  3474 ;; Return value:  Size  Location     Type
  3475 ;;		None               void
  3476 ;; Registers used:
  3477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/0
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3483 ;;      Params:         2       0       0       0       0       0       0       0       0
  3484 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3485 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3486 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3487 ;;Total ram usage:        2 bytes
  3488 ;; Hardware stack levels used:    1
  3489 ;; Hardware stack levels required when called:    1
  3490 ;; This function calls:
  3491 ;;		_WriteUSART
  3492 ;; This function is called by:
  3493 ;;		_imprimir
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           	psect	text32
  3498  00073E                     __ptext32:
  3499                           	opt stack 0
  3500  00073E                     _putsUSART:
  3501                           	opt stack 21
  3502  00073E                     i2l522:
  3503  00073E  A2AC               	btfss	4012,1,c	;volatile
  3504  000740  D7FE               	goto	i2l522
  3505  000742  C002  FFD9         	movff	putsUSART@data,fsr2l
  3506  000746  C003  FFDA         	movff	putsUSART@data+1,fsr2h
  3507  00074A  50DF               	movf	indf2,w,c
  3508  00074C  EC45  F004         	call	_WriteUSART
  3509  000750  C002  FFD9         	movff	putsUSART@data,fsr2l
  3510  000754  C003  FFDA         	movff	putsUSART@data+1,fsr2h
  3511  000758  4A02               	infsnz	putsUSART@data,f,c
  3512  00075A  2A03               	incf	putsUSART@data+1,f,c
  3513  00075C  50DF               	movf	indf2,w,c
  3514  00075E  B4D8               	btfsc	status,2,c
  3515  000760  0012               	return	
  3516  000762  D7ED               	goto	i2l522
  3517  000764                     __end_of_putsUSART:
  3518                           	opt stack 0
  3519                           pclatu	equ	0xFFB
  3520                           pclath	equ	0xFFA
  3521                           tblptru	equ	0xFF8
  3522                           tblptrh	equ	0xFF7
  3523                           tblptrl	equ	0xFF6
  3524                           tablat	equ	0xFF5
  3525                           prodh	equ	0xFF4
  3526                           prodl	equ	0xFF3
  3527                           intcon	equ	0xFF2
  3528                           postinc0	equ	0xFEE
  3529                           fsr0h	equ	0xFEA
  3530                           fsr0l	equ	0xFE9
  3531                           wreg	equ	0xFE8
  3532                           postdec1	equ	0xFE5
  3533                           fsr1h	equ	0xFE2
  3534                           fsr1l	equ	0xFE1
  3535                           indf2	equ	0xFDF
  3536                           postinc2	equ	0xFDE
  3537                           postdec2	equ	0xFDD
  3538                           fsr2h	equ	0xFDA
  3539                           fsr2l	equ	0xFD9
  3540                           status	equ	0xFD8
  3541                           
  3542 ;; *************** function _WriteUSART *****************
  3543 ;; Defined at:
  3544 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uwrite.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;  data            1    wreg     unsigned char 
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;  data            1    0[COMRAM] unsigned char 
  3549 ;; Return value:  Size  Location     Type
  3550 ;;		None               void
  3551 ;; Registers used:
  3552 ;;		wreg
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3558 ;;      Params:         0       0       0       0       0       0       0       0       0
  3559 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3560 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3561 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3562 ;;Total ram usage:        1 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; This function calls:
  3565 ;;		Nothing
  3566 ;; This function is called by:
  3567 ;;		_imprimir
  3568 ;;		_putsUSART
  3569 ;;		_putintUSART
  3570 ;;		_putiUSART
  3571 ;; This function uses a non-reentrant model
  3572 ;;
  3573                           
  3574                           	psect	text33
  3575  00088A                     __ptext33:
  3576                           	opt stack 0
  3577  00088A                     _WriteUSART:
  3578                           	opt stack 21
  3579                           
  3580                           ;incstack = 0
  3581                           ;WriteUSART@data stored from wreg
  3582  00088A  6E01               	movwf	WriteUSART@data,c
  3583  00088C  ACAC               	btfss	4012,6,c	;volatile
  3584  00088E  D003               	goto	i2l1416
  3585  000890  90AC               	bcf	4012,0,c	;volatile
  3586  000892  B230               	btfsc	_USART_Status,1,c
  3587  000894  80AC               	bsf	4012,0,c	;volatile
  3588  000896                     i2l1416:
  3589  000896  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
  3590  00089A  0012               	return	
  3591  00089C                     __end_of_WriteUSART:
  3592                           	opt stack 0
  3593                           pclatu	equ	0xFFB
  3594                           pclath	equ	0xFFA
  3595                           tblptru	equ	0xFF8
  3596                           tblptrh	equ	0xFF7
  3597                           tblptrl	equ	0xFF6
  3598                           tablat	equ	0xFF5
  3599                           prodh	equ	0xFF4
  3600                           prodl	equ	0xFF3
  3601                           intcon	equ	0xFF2
  3602                           postinc0	equ	0xFEE
  3603                           fsr0h	equ	0xFEA
  3604                           fsr0l	equ	0xFE9
  3605                           wreg	equ	0xFE8
  3606                           postdec1	equ	0xFE5
  3607                           fsr1h	equ	0xFE2
  3608                           fsr1l	equ	0xFE1
  3609                           indf2	equ	0xFDF
  3610                           postinc2	equ	0xFDE
  3611                           postdec2	equ	0xFDD
  3612                           fsr2h	equ	0xFDA
  3613                           fsr2l	equ	0xFD9
  3614                           status	equ	0xFD8
  3615                           
  3616 ;; *************** function _itoa *****************
  3617 ;; Defined at:
  3618 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\itoa.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;  buf             2   16[COMRAM] PTR unsigned char 
  3621 ;;		 -> buf(10), 
  3622 ;;  val             2   18[COMRAM] int 
  3623 ;;  base            2   20[COMRAM] int 
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;  cp              2   22[COMRAM] PTR unsigned char 
  3626 ;;		 -> buf(10), 
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  2   16[COMRAM] PTR unsigned char 
  3629 ;; Registers used:
  3630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3636 ;;      Params:         6       0       0       0       0       0       0       0       0
  3637 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3638 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3639 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3640 ;;Total ram usage:        8 bytes
  3641 ;; Hardware stack levels used:    1
  3642 ;; Hardware stack levels required when called:    2
  3643 ;; This function calls:
  3644 ;;		_utoa
  3645 ;; This function is called by:
  3646 ;;		_imprimir
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           	psect	text34
  3651  000496                     __ptext34:
  3652                           	opt stack 0
  3653  000496                     _itoa:
  3654                           	opt stack 20
  3655                           
  3656                           ;incstack = 0
  3657  000496  C012  F018         	movff	itoa@buf+1,itoa@cp+1
  3658  00049A  C011  F017         	movff	itoa@buf,itoa@cp
  3659  00049E  5014               	movf	itoa@val+1,w,c
  3660  0004A0  0A80               	xorlw	128
  3661  0004A2  6EF3               	movwf	prodl,c
  3662  0004A4  0E80               	movlw	128
  3663  0004A6  5CF3               	subwf	prodl,w,c
  3664  0004A8  0E00               	movlw	0
  3665  0004AA  B4D8               	btfsc	status,2,c
  3666  0004AC  5C13               	subwf	itoa@val,w,c
  3667  0004AE  B0D8               	btfsc	status,0,c
  3668  0004B0  D00C               	goto	i2l1550
  3669  0004B2  C011  FFD9         	movff	itoa@buf,fsr2l
  3670  0004B6  C012  FFDA         	movff	itoa@buf+1,fsr2h
  3671  0004BA  0E2D               	movlw	45
  3672  0004BC  6EDF               	movwf	indf2,c
  3673  0004BE  4A11               	infsnz	itoa@buf,f,c
  3674  0004C0  2A12               	incf	itoa@buf+1,f,c
  3675  0004C2  6C13               	negf	itoa@val,c
  3676  0004C4  1E14               	comf	itoa@val+1,f,c
  3677  0004C6  B0D8               	btfsc	status,0,c
  3678  0004C8  2A14               	incf	itoa@val+1,f,c
  3679  0004CA                     i2l1550:
  3680  0004CA  C012  F009         	movff	itoa@buf+1,utoa@buf+1
  3681  0004CE  C011  F008         	movff	itoa@buf,utoa@buf
  3682  0004D2  C013  F00A         	movff	itoa@val,utoa@val
  3683  0004D6  C014  F00B         	movff	itoa@val+1,utoa@val+1
  3684  0004DA  C015  F00C         	movff	itoa@base,utoa@base
  3685  0004DE  C016  F00D         	movff	itoa@base+1,utoa@base+1
  3686  0004E2  ECD2  F000         	call	_utoa	;wreg free
  3687                           
  3688                           ;	Return value of _itoa is never used
  3689  0004E6  0012               	return	
  3690  0004E8                     __end_of_itoa:
  3691                           	opt stack 0
  3692                           pclatu	equ	0xFFB
  3693                           pclath	equ	0xFFA
  3694                           tblptru	equ	0xFF8
  3695                           tblptrh	equ	0xFF7
  3696                           tblptrl	equ	0xFF6
  3697                           tablat	equ	0xFF5
  3698                           prodh	equ	0xFF4
  3699                           prodl	equ	0xFF3
  3700                           intcon	equ	0xFF2
  3701                           postinc0	equ	0xFEE
  3702                           fsr0h	equ	0xFEA
  3703                           fsr0l	equ	0xFE9
  3704                           wreg	equ	0xFE8
  3705                           postdec1	equ	0xFE5
  3706                           fsr1h	equ	0xFE2
  3707                           fsr1l	equ	0xFE1
  3708                           indf2	equ	0xFDF
  3709                           postinc2	equ	0xFDE
  3710                           postdec2	equ	0xFDD
  3711                           fsr2h	equ	0xFDA
  3712                           fsr2l	equ	0xFD9
  3713                           status	equ	0xFD8
  3714                           
  3715 ;; *************** function _utoa *****************
  3716 ;; Defined at:
  3717 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\itoa.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;  buf             2    7[COMRAM] PTR unsigned char 
  3720 ;;		 -> buf(10), 
  3721 ;;  val             2    9[COMRAM] unsigned int 
  3722 ;;  base            2   11[COMRAM] int 
  3723 ;; Auto vars:     Size  Location     Type
  3724 ;;  v               2   13[COMRAM] unsigned int 
  3725 ;;  c               1   15[COMRAM] unsigned char 
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  2    7[COMRAM] PTR unsigned char 
  3728 ;; Registers used:
  3729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3735 ;;      Params:         6       0       0       0       0       0       0       0       0
  3736 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3737 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3738 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3739 ;;Total ram usage:        9 bytes
  3740 ;; Hardware stack levels used:    1
  3741 ;; Hardware stack levels required when called:    1
  3742 ;; This function calls:
  3743 ;;		___lwdiv
  3744 ;;		___lwmod
  3745 ;; This function is called by:
  3746 ;;		_itoa
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           	psect	text35
  3751  0001A4                     __ptext35:
  3752                           	opt stack 0
  3753  0001A4                     _utoa:
  3754                           	opt stack 20
  3755                           
  3756                           ;incstack = 0
  3757  0001A4  C00A  F00E         	movff	utoa@val,utoa@v
  3758  0001A8  C00B  F00F         	movff	utoa@val+1,utoa@v+1
  3759  0001AC                     i2l1484:
  3760  0001AC  C00E  F001         	movff	utoa@v,___lwdiv@dividend
  3761  0001B0  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
  3762  0001B4  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  3763  0001B8  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  3764  0001BC  EC74  F002         	call	___lwdiv	;wreg free
  3765  0001C0  C001  F00E         	movff	?___lwdiv,utoa@v
  3766  0001C4  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
  3767  0001C8  4A08               	infsnz	utoa@buf,f,c
  3768  0001CA  2A09               	incf	utoa@buf+1,f,c
  3769  0001CC  500F               	movf	utoa@v+1,w,c
  3770  0001CE  100E               	iorwf	utoa@v,w,c
  3771  0001D0  A4D8               	btfss	status,2,c
  3772  0001D2  D7EC               	goto	i2l1484
  3773  0001D4  C008  FFD9         	movff	utoa@buf,fsr2l
  3774  0001D8  C009  FFDA         	movff	utoa@buf+1,fsr2h
  3775  0001DC  0E00               	movlw	0
  3776  0001DE  6EDF               	movwf	indf2,c
  3777  0001E0  0608               	decf	utoa@buf,f,c
  3778  0001E2  A0D8               	btfss	status,0,c
  3779  0001E4  0609               	decf	utoa@buf+1,f,c
  3780  0001E6                     i2l1494:
  3781  0001E6  C00A  F001         	movff	utoa@val,___lwmod@dividend
  3782  0001EA  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
  3783  0001EE  C00C  F003         	movff	utoa@base,___lwmod@divisor
  3784  0001F2  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
  3785  0001F6  ECBE  F002         	call	___lwmod	;wreg free
  3786  0001FA  5001               	movf	?___lwmod,w,c
  3787  0001FC  6E10               	movwf	utoa@c,c
  3788  0001FE  C00A  F001         	movff	utoa@val,___lwdiv@dividend
  3789  000202  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
  3790  000206  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  3791  00020A  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  3792  00020E  EC74  F002         	call	___lwdiv	;wreg free
  3793  000212  C001  F00A         	movff	?___lwdiv,utoa@val
  3794  000216  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
  3795  00021A  0E09               	movlw	9
  3796  00021C  6410               	cpfsgt	utoa@c,c
  3797  00021E  D002               	goto	i2l1087
  3798  000220  0E07               	movlw	7
  3799  000222  2610               	addwf	utoa@c,f,c
  3800  000224                     i2l1087:
  3801  000224  0E30               	movlw	48
  3802  000226  2610               	addwf	utoa@c,f,c
  3803  000228  C008  FFD9         	movff	utoa@buf,fsr2l
  3804  00022C  C009  FFDA         	movff	utoa@buf+1,fsr2h
  3805  000230  C010  FFDF         	movff	utoa@c,indf2
  3806  000234  0608               	decf	utoa@buf,f,c
  3807  000236  A0D8               	btfss	status,0,c
  3808  000238  0609               	decf	utoa@buf+1,f,c
  3809  00023A  500B               	movf	utoa@val+1,w,c
  3810  00023C  100A               	iorwf	utoa@val,w,c
  3811  00023E  A4D8               	btfss	status,2,c
  3812  000240  D7D2               	goto	i2l1494
  3813                           
  3814                           ;	Return value of _utoa is never used
  3815  000242  4A08               	infsnz	utoa@buf,f,c
  3816  000244  2A09               	incf	utoa@buf+1,f,c
  3817  000246  0012               	return	
  3818  000248                     __end_of_utoa:
  3819                           	opt stack 0
  3820                           pclatu	equ	0xFFB
  3821                           pclath	equ	0xFFA
  3822                           tblptru	equ	0xFF8
  3823                           tblptrh	equ	0xFF7
  3824                           tblptrl	equ	0xFF6
  3825                           tablat	equ	0xFF5
  3826                           prodh	equ	0xFF4
  3827                           prodl	equ	0xFF3
  3828                           intcon	equ	0xFF2
  3829                           postinc0	equ	0xFEE
  3830                           fsr0h	equ	0xFEA
  3831                           fsr0l	equ	0xFE9
  3832                           wreg	equ	0xFE8
  3833                           postdec1	equ	0xFE5
  3834                           fsr1h	equ	0xFE2
  3835                           fsr1l	equ	0xFE1
  3836                           indf2	equ	0xFDF
  3837                           postinc2	equ	0xFDE
  3838                           postdec2	equ	0xFDD
  3839                           fsr2h	equ	0xFDA
  3840                           fsr2l	equ	0xFD9
  3841                           status	equ	0xFD8
  3842                           
  3843 ;; *************** function ___lwmod *****************
  3844 ;; Defined at:
  3845 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;  dividend        2    0[COMRAM] unsigned int 
  3848 ;;  divisor         2    2[COMRAM] unsigned int 
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;  counter         1    4[COMRAM] unsigned char 
  3851 ;; Return value:  Size  Location     Type
  3852 ;;                  2    0[COMRAM] unsigned int 
  3853 ;; Registers used:
  3854 ;;		wreg, status,2, status,0
  3855 ;; Tracked objects:
  3856 ;;		On entry : 0/0
  3857 ;;		On exit  : 0/0
  3858 ;;		Unchanged: 0/0
  3859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3860 ;;      Params:         4       0       0       0       0       0       0       0       0
  3861 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3862 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3863 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3864 ;;Total ram usage:        5 bytes
  3865 ;; Hardware stack levels used:    1
  3866 ;; This function calls:
  3867 ;;		Nothing
  3868 ;; This function is called by:
  3869 ;;		_utoa
  3870 ;; This function uses a non-reentrant model
  3871 ;;
  3872                           
  3873                           	psect	text36
  3874  00057C                     __ptext36:
  3875                           	opt stack 0
  3876  00057C                     ___lwmod:
  3877                           	opt stack 20
  3878                           
  3879                           ;incstack = 0
  3880  00057C  5004               	movf	___lwmod@divisor+1,w,c
  3881  00057E  1003               	iorwf	___lwmod@divisor,w,c
  3882  000580  B4D8               	btfsc	status,2,c
  3883  000582  D018               	goto	i2l1191
  3884  000584  0E01               	movlw	1
  3885  000586  6E05               	movwf	___lwmod@counter,c
  3886  000588  D004               	goto	i2l1354
  3887  00058A                     i2l1352:
  3888  00058A  90D8               	bcf	status,0,c
  3889  00058C  3603               	rlcf	___lwmod@divisor,f,c
  3890  00058E  3604               	rlcf	___lwmod@divisor+1,f,c
  3891  000590  2A05               	incf	___lwmod@counter,f,c
  3892  000592                     i2l1354:
  3893  000592  AE04               	btfss	___lwmod@divisor+1,7,c
  3894  000594  D7FA               	goto	i2l1352
  3895  000596                     i2l1356:
  3896  000596  5003               	movf	___lwmod@divisor,w,c
  3897  000598  5C01               	subwf	___lwmod@dividend,w,c
  3898  00059A  5004               	movf	___lwmod@divisor+1,w,c
  3899  00059C  5802               	subwfb	___lwmod@dividend+1,w,c
  3900  00059E  A0D8               	btfss	status,0,c
  3901  0005A0  D004               	goto	i2l1360
  3902  0005A2  5003               	movf	___lwmod@divisor,w,c
  3903  0005A4  5E01               	subwf	___lwmod@dividend,f,c
  3904  0005A6  5004               	movf	___lwmod@divisor+1,w,c
  3905  0005A8  5A02               	subwfb	___lwmod@dividend+1,f,c
  3906  0005AA                     i2l1360:
  3907  0005AA  90D8               	bcf	status,0,c
  3908  0005AC  3204               	rrcf	___lwmod@divisor+1,f,c
  3909  0005AE  3203               	rrcf	___lwmod@divisor,f,c
  3910  0005B0  2E05               	decfsz	___lwmod@counter,f,c
  3911  0005B2  D7F1               	goto	i2l1356
  3912  0005B4                     i2l1191:
  3913  0005B4  C001  F001         	movff	___lwmod@dividend,?___lwmod
  3914  0005B8  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  3915  0005BC  0012               	return	
  3916  0005BE                     __end_of___lwmod:
  3917                           	opt stack 0
  3918                           pclatu	equ	0xFFB
  3919                           pclath	equ	0xFFA
  3920                           tblptru	equ	0xFF8
  3921                           tblptrh	equ	0xFF7
  3922                           tblptrl	equ	0xFF6
  3923                           tablat	equ	0xFF5
  3924                           prodh	equ	0xFF4
  3925                           prodl	equ	0xFF3
  3926                           intcon	equ	0xFF2
  3927                           postinc0	equ	0xFEE
  3928                           fsr0h	equ	0xFEA
  3929                           fsr0l	equ	0xFE9
  3930                           wreg	equ	0xFE8
  3931                           postdec1	equ	0xFE5
  3932                           fsr1h	equ	0xFE2
  3933                           fsr1l	equ	0xFE1
  3934                           indf2	equ	0xFDF
  3935                           postinc2	equ	0xFDE
  3936                           postdec2	equ	0xFDD
  3937                           fsr2h	equ	0xFDA
  3938                           fsr2l	equ	0xFD9
  3939                           status	equ	0xFD8
  3940                           
  3941 ;; *************** function ___lwdiv *****************
  3942 ;; Defined at:
  3943 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;  dividend        2    0[COMRAM] unsigned int 
  3946 ;;  divisor         2    2[COMRAM] unsigned int 
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;  quotient        2    4[COMRAM] unsigned int 
  3949 ;;  counter         1    6[COMRAM] unsigned char 
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  2    0[COMRAM] unsigned int 
  3952 ;; Registers used:
  3953 ;;		wreg, status,2, status,0
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3959 ;;      Params:         4       0       0       0       0       0       0       0       0
  3960 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3961 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3962 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3963 ;;Total ram usage:        7 bytes
  3964 ;; Hardware stack levels used:    1
  3965 ;; This function calls:
  3966 ;;		Nothing
  3967 ;; This function is called by:
  3968 ;;		_utoa
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           	psect	text37
  3973  0004E8                     __ptext37:
  3974                           	opt stack 0
  3975  0004E8                     ___lwdiv:
  3976                           	opt stack 20
  3977                           
  3978                           ;incstack = 0
  3979  0004E8  0E00               	movlw	0
  3980  0004EA  6E06               	movwf	___lwdiv@quotient+1,c
  3981  0004EC  0E00               	movlw	0
  3982  0004EE  6E05               	movwf	___lwdiv@quotient,c
  3983  0004F0  5004               	movf	___lwdiv@divisor+1,w,c
  3984  0004F2  1003               	iorwf	___lwdiv@divisor,w,c
  3985  0004F4  B4D8               	btfsc	status,2,c
  3986  0004F6  D01C               	goto	i2l1181
  3987  0004F8  0E01               	movlw	1
  3988  0004FA  6E07               	movwf	___lwdiv@counter,c
  3989  0004FC  D004               	goto	i2l1334
  3990  0004FE                     i2l1332:
  3991  0004FE  90D8               	bcf	status,0,c
  3992  000500  3603               	rlcf	___lwdiv@divisor,f,c
  3993  000502  3604               	rlcf	___lwdiv@divisor+1,f,c
  3994  000504  2A07               	incf	___lwdiv@counter,f,c
  3995  000506                     i2l1334:
  3996  000506  AE04               	btfss	___lwdiv@divisor+1,7,c
  3997  000508  D7FA               	goto	i2l1332
  3998  00050A                     i2l1336:
  3999  00050A  90D8               	bcf	status,0,c
  4000  00050C  3605               	rlcf	___lwdiv@quotient,f,c
  4001  00050E  3606               	rlcf	___lwdiv@quotient+1,f,c
  4002  000510  5003               	movf	___lwdiv@divisor,w,c
  4003  000512  5C01               	subwf	___lwdiv@dividend,w,c
  4004  000514  5004               	movf	___lwdiv@divisor+1,w,c
  4005  000516  5802               	subwfb	___lwdiv@dividend+1,w,c
  4006  000518  A0D8               	btfss	status,0,c
  4007  00051A  D005               	goto	i2l1344
  4008  00051C  5003               	movf	___lwdiv@divisor,w,c
  4009  00051E  5E01               	subwf	___lwdiv@dividend,f,c
  4010  000520  5004               	movf	___lwdiv@divisor+1,w,c
  4011  000522  5A02               	subwfb	___lwdiv@dividend+1,f,c
  4012  000524  8005               	bsf	___lwdiv@quotient,0,c
  4013  000526                     i2l1344:
  4014  000526  90D8               	bcf	status,0,c
  4015  000528  3204               	rrcf	___lwdiv@divisor+1,f,c
  4016  00052A  3203               	rrcf	___lwdiv@divisor,f,c
  4017  00052C  2E07               	decfsz	___lwdiv@counter,f,c
  4018  00052E  D7ED               	goto	i2l1336
  4019  000530                     i2l1181:
  4020  000530  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  4021  000534  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4022  000538  0012               	return	
  4023  00053A                     __end_of___lwdiv:
  4024                           	opt stack 0
  4025  0000                     pclatu	equ	0xFFB
  4026                           pclath	equ	0xFFA
  4027                           tblptru	equ	0xFF8
  4028                           tblptrh	equ	0xFF7
  4029                           tblptrl	equ	0xFF6
  4030                           tablat	equ	0xFF5
  4031                           prodh	equ	0xFF4
  4032                           prodl	equ	0xFF3
  4033                           intcon	equ	0xFF2
  4034                           postinc0	equ	0xFEE
  4035                           fsr0h	equ	0xFEA
  4036                           fsr0l	equ	0xFE9
  4037                           wreg	equ	0xFE8
  4038                           postdec1	equ	0xFE5
  4039                           fsr1h	equ	0xFE2
  4040                           fsr1l	equ	0xFE1
  4041                           indf2	equ	0xFDF
  4042                           postinc2	equ	0xFDE
  4043                           postdec2	equ	0xFDD
  4044                           fsr2h	equ	0xFDA
  4045                           fsr2l	equ	0xFD9
  4046                           status	equ	0xFD8
  4047                           pclatu	equ	0xFFB
  4048                           pclath	equ	0xFFA
  4049                           tblptru	equ	0xFF8
  4050                           tblptrh	equ	0xFF7
  4051                           tblptrl	equ	0xFF6
  4052                           tablat	equ	0xFF5
  4053                           prodh	equ	0xFF4
  4054                           prodl	equ	0xFF3
  4055                           intcon	equ	0xFF2
  4056                           postinc0	equ	0xFEE
  4057                           fsr0h	equ	0xFEA
  4058                           fsr0l	equ	0xFE9
  4059                           wreg	equ	0xFE8
  4060                           postdec1	equ	0xFE5
  4061                           fsr1h	equ	0xFE2
  4062                           fsr1l	equ	0xFE1
  4063                           indf2	equ	0xFDF
  4064                           postinc2	equ	0xFDE
  4065                           postdec2	equ	0xFDD
  4066                           fsr2h	equ	0xFDA
  4067                           fsr2l	equ	0xFD9
  4068                           status	equ	0xFD8
  4069                           
  4070                           	psect	rparam
  4071  0000                     pclatu	equ	0xFFB
  4072                           pclath	equ	0xFFA
  4073                           tblptru	equ	0xFF8
  4074                           tblptrh	equ	0xFF7
  4075                           tblptrl	equ	0xFF6
  4076                           tablat	equ	0xFF5
  4077                           prodh	equ	0xFF4
  4078                           prodl	equ	0xFF3
  4079                           intcon	equ	0xFF2
  4080                           postinc0	equ	0xFEE
  4081                           fsr0h	equ	0xFEA
  4082                           fsr0l	equ	0xFE9
  4083                           wreg	equ	0xFE8
  4084                           postdec1	equ	0xFE5
  4085                           fsr1h	equ	0xFE2
  4086                           fsr1l	equ	0xFE1
  4087                           indf2	equ	0xFDF
  4088                           postinc2	equ	0xFDE
  4089                           postdec2	equ	0xFDD
  4090                           fsr2h	equ	0xFDA
  4091                           fsr2l	equ	0xFD9
  4092                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     39      81
    BANK0           160     12      12
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> buf(COMRAM[10]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> buf(COMRAM[10]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> buf(COMRAM[10]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 10
		 -> buf(COMRAM[10]), 

    getsI2C@rdptr	PTR unsigned char  size(2) Largest target is 2
		 -> acc_z(COMRAM[2]), acc_y(COMRAM[2]), acc_x(COMRAM[2]), 

    putsUSART@data	PTR unsigned char  size(2) Largest target is 10
		 -> buf(COMRAM[10]), 

    data_acc@ptr	PTR int  size(2) Largest target is 2
		 -> acc_z(COMRAM[2]), acc_y(COMRAM[2]), acc_x(COMRAM[2]), 

    I2C_read_data_acc@rdptr	PTR unsigned char  size(2) Largest target is 2
		 -> acc_z(COMRAM[2]), acc_y(COMRAM[2]), acc_x(COMRAM[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> buf(COMRAM[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Interruption in COMRAM

    _startTimer->_WriteTimer0
    _timer0_isr->_WriteTimer0
    _readData->_I2C_read_data_acc
    _I2C_read_data_acc->i2_I2C_send
    i2_I2C_send->i2_WriteI2C
    i2_WriteI2C->i2_IdleI2C
    _getsI2C->_ReadI2C
    _imprimir->_itoa
    _putsUSART->_WriteUSART
    _itoa->_utoa
    _utoa->___lwdiv

Critical Paths under _main in BANK0

    _init_UART->_OpenUSART
    _init_I2C->_I2C_open
    _I2C_open->_OpenI2C
    _init_ACC->_I2C_turn_on_acc
    _I2C_turn_on_acc->_I2C_write_reg_acc
    _I2C_write_reg_acc->_I2C_send
    _I2C_send->_WriteI2C
    _WriteI2C->_IdleI2C

Critical Paths under _Interruption in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interruption in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interruption in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interruption in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interruption in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interruption in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interruption in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interruption in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1280
                           _init_ACC
                           _init_I2C
                          _init_UART
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            4     4      0     364
                                              6 BANK0      4     4      0
                          _OpenUSART
                          _baudUSART
 ---------------------------------------------------------------------------------
 (2) _baudUSART                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            6     4      2     273
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             0     0      0     269
                           _I2C_open
 ---------------------------------------------------------------------------------
 (2) _I2C_open                                             3     1      2     269
                                              2 BANK0      3     1      2
                           _CloseI2C
                            _OpenI2C
 ---------------------------------------------------------------------------------
 (3) _OpenI2C                                              2     1      1      97
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _CloseI2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ACC                                             0     0      0     647
                    _I2C_turn_on_acc
 ---------------------------------------------------------------------------------
 (2) _I2C_turn_on_acc                                      4     1      3     647
                                              8 BANK0      4     1      3
                  _I2C_write_reg_acc
 ---------------------------------------------------------------------------------
 (3) _I2C_write_reg_acc                                    2     1      1     400
                                              6 BANK0      2     1      1
                           _I2C_send
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (4) _I2C_send                                             3     3      0      91
                                              3 BANK0      3     3      0
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (5) _WriteI2C                                             2     2      0      22
                                              1 BANK0      2     2      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (4) _IdleI2C                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Interruption                                        15    15      0    3043
                                             24 COMRAM    15    15      0
                           _imprimir
                           _readData
                         _timer0_isr
                           _uart_isr
 ---------------------------------------------------------------------------------
 (8) _uart_isr                                             1     1      0     176
                                              4 COMRAM     1     1      0
                          _ReadUSART
                           _endTimer
                         _startTimer
 ---------------------------------------------------------------------------------
 (9) _startTimer                                           0     0      0     161
                         _OpenTimer0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (10) _OpenTimer0                                          1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _endTimer                                             0     0      0       0
                        _CloseTimer0
 ---------------------------------------------------------------------------------
 (10) _CloseTimer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ReadUSART                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _timer0_isr                                           0     0      0     131
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (10) _WriteTimer0                                         4     2      2     131
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _readData                                             0     0      0    1253
                  _I2C_read_data_acc
 ---------------------------------------------------------------------------------
 (9) _I2C_read_data_acc                                    3     1      2    1253
                                              6 COMRAM     3     1      2
                           _data_acc
                            _getsI2C
                         i2_I2C_send
                          i2_IdleI2C
 ---------------------------------------------------------------------------------
 (10) i2_I2C_send                                          3     3      0      91
                                              3 COMRAM     3     3      0
                          i2_IdleI2C
                         i2_WriteI2C
 ---------------------------------------------------------------------------------
 (11) i2_WriteI2C                                          2     2      0      22
                                              1 COMRAM     2     2      0
                          i2_IdleI2C
 ---------------------------------------------------------------------------------
 (10) i2_IdleI2C                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _getsI2C                                             4     1      3     819
                                              1 COMRAM     4     1      3
                            _ReadI2C
 ---------------------------------------------------------------------------------
 (11) _ReadI2C                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _data_acc                                            5     3      2      73
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (8) _imprimir                                             0     0      0    1483
                         _WriteUSART
                               _itoa
                          _putsUSART
 ---------------------------------------------------------------------------------
 (9) _putsUSART                                            2     0      2     174
                                              1 COMRAM     2     0      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (10) _WriteUSART                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _itoa                                                 8     2      6    1294
                                             16 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (10) _utoa                                                9     3      6     797
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (11) ___lwmod                                             5     1      4     191
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (11) ___lwdiv                                             7     3      4     277
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_ACC
     _I2C_turn_on_acc
       _I2C_write_reg_acc
         _I2C_send
           _IdleI2C
           _WriteI2C
             _IdleI2C
         _IdleI2C
   _init_I2C
     _I2C_open
       _CloseI2C
       _OpenI2C
   _init_UART
     _OpenUSART
     _baudUSART

 _Interruption (ROOT)
   _imprimir
     _WriteUSART
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     _putsUSART
       _WriteUSART
   _readData
     _I2C_read_data_acc
       _data_acc
       _getsI2C
         _ReadI2C
       i2_I2C_send
         i2_IdleI2C
         i2_WriteI2C
           i2_IdleI2C
       i2_IdleI2C
   _timer0_isr
     _WriteTimer0
   _uart_isr
     _ReadUSART
     _endTimer
       _CloseTimer0
     _startTimer
       _OpenTimer0
       _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      C       C       5        7.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     27      51       1       85.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5D      20        0.0%
DATA                 0      0      5D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Fri Jan 09 17:11:42 2015

                          _x 004C                            _y 004E                            _z 0050  
                _SSPSTATbits 000FC7                           l66 0802                  __CFG_BORV$0 000000  
                 i2_WriteI2C 03CC                 __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000  
               __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000    I2C_turn_on_acc@full_scale 0069  
                        l215 06B6                          l311 06C8                          l314 06E4  
                        l510 0394                          l511 03A0                          l512 03A2  
                        l505 0378                          l514 03CA                          l509 0392  
                        l636 02C8                          l639 0282                          l648 02B6  
               __CFG_CPB$OFF 000000                 __CFG_CPD$OFF 000000                 __CFG_BOR$OFF 000000  
       __size_of_WriteTimer0 0012                          _end 0042                          _buf 0032  
                        _mid 0046                          wreg 000FE8                  ?i2_I2C_send 0001  
               __CFG_LVP$OFF 000000                   _CaracterRx 0028                 __CFG_WDT$OFF 000000  
                       l2012 0698                         l2006 02C6                         l2050 0368  
                       l2058 037A                         l1960 0866                         l1974 0258  
                       l1992 028E                         _LATC 000F8B                         _PIE1 000F9D  
                       u1770 02C2                         i2l81 001C                         i2l90 005C  
                       i2l84 0026                         i2l93 0066                         i2l87 0030  
                       i2l96 0070                         i2l99 009C                 __CFG_PWRT$ON 000000  
                       _main 07EA                         _itoa 0496                         fsr0h 000FEA  
                       fsr1h 000FE2                         fsr0l 000FE9                         fsr2h 000FDA  
                       fsr1l 000FE1                         indf2 000FDF                         fsr2l 000FD9  
                       _utoa 01A4          baudUSART@baudconfig 0060                         pclat 000FFA  
                       prodh 000FF4                         prodl 000FF3             __end_of_I2C_send 06BE  
           __end_of_I2C_open 081E                         start 0018                __CFG_IESO$OFF 000000  
            __end_of_IdleI2C 0878          __end_of_CloseTimer0 08E2                __CFG_MCLRE$ON 000000  
            __end_of_ReadI2C 073E              __end_of_OpenI2C 0788                __CFG_PLLDIV$5 000000  
                      ?_main 0001                        ?_itoa 0011                        ?_utoa 0008  
                      _T0CON 000FD5              __end_of___lwdiv 053A                        i2l102 00A6  
                      i2l111 00E6                        i2l120 016A              __end_of___lwmod 05BE  
                      i2l105 00B0                        i2l108 00DC                        i2l215 07A6  
                      i2l152 063E                        i2l341 02D2                        i2l350 030E  
                      i2l158 065E                        i2l344 02EA                        i2l522 073E  
                      i2l362 033A                        i2l356 0330                        i2l614 0734  
                      i2l615 0736                        i2l359 0334                        i2l535 07DA  
                      i2l467 07C6                        i2l572 0494                        i2l636 043A  
                      i2l468 07C8                        i2l639 03FC                        i2l568 0450  
                      i2l648 0428                        i2l577 0486                        _RCREG 000FAE  
                      _RCSTA 000FAB                        _TMR0H 000FD7                        _TMR0L 000FD6  
                      _SPBRG 000FAF                __CFG_USBDIV$1 000000                        _TRISC 000F94  
                      _TXREG 000FAD                        _TXSTA 000FAC                __CFG_WRT0$OFF 000000  
              __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000  
            __end_of_getsI2C 0496               __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000  
             __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000  
         __size_ofi2_IdleI2C 0010                __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000  
              __CFG_WRTD$OFF 000000                        _acc_x 003C                        _acc_y 003E  
                      _acc_z 0040               __CFG_EBTRB$OFF 000000                        _enter 0044  
                      _gyr_x 002A                        _gyr_y 002C                        _gyr_z 002E  
                      _start 0048                        tablat 000FF5                        utoa@c 0010  
                      utoa@v 000E                        status 000FD8             __end_of_CloseI2C 08E6  
             WriteUSART@data 0001              __initialization 05FE          __size_ofi2_I2C_send 0024  
               __end_of_main 0804                 __end_of_itoa 04E8                 __end_of_utoa 0248  
                ?i2_WriteI2C 0001                       ??_main 006C                       ??_itoa 0017  
                     ??_utoa 000E                __activetblptr 000000              __CFG_CCP2MX$OFF 000000  
   I2C_turn_on_acc@data_rate 0068             __end_of_WriteI2C 02CA                  OpenI2C@slew 0060  
                     i2l1332 04FE                       i2l1181 0530                       i2l1334 0506  
                     i2l1191 05B4                       i2l1087 0224                       i2l1344 0526  
                     i2l1336 050A                       i2l1360 05AA                       i2l1352 058A  
                     i2l1416 0896                       i2l1354 0592                       i2l1450 043E  
                     i2l1356 0596                       i2l1550 04CA                       i2l1462 047C  
                 _OpenTimer0 07AC                       i2l1458 045C                       i2l1466 048A  
                     i2l1706 0652                       i2l1484 01AC                       i2l1494 01E6  
                     i2l1912 0438                       i2l1940 0312                       i2l1918 078E  
                     i2l1950 0142                       i2l1880 03DA                       i2l1866 08BC  
                     i2l1938 02F4                       i2l1898 0408         I2C_read_data_acc@reg 0009  
                  ??_IdleI2C 0060           __size_of_ReadUSART 001E                  _CloseTimer0 08DC  
                     _SPBRGH 000FB0                       _SSPADD 000FC8                       _SSPBUF 000FC9  
           __end_of_data_acc 0690                    ??_ReadI2C 0001                ?_Interruption 0001  
             __CFG_VREGEN$ON 000000                    ??_OpenI2C 0061             __end_of_endTimer 08DC  
             __CFG_XINST$OFF 000000           __size_of_OpenUSART 0080            __end_ofi2_IdleI2C 08CC  
           __end_of_init_I2C 0866             __end_of_init_ACC 0838             OpenTimer0@config 0001  
                  ??___lwdiv 0005                    ??___lwmod 0005             __end_of_readData 0716  
                     clear_0 0604                       _timer0 004A             __end_of_imprimir 00F2  
                  ??_getsI2C 0005                       itoa@cp 0017                 __pdataCOMRAM 0042  
           __end_of_uart_isr 0660                    ?_I2C_send 0001                    ?_I2C_open 0062  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
   __size_of_I2C_turn_on_acc 0040                   __accesstop 0060      __end_of__initialization 062A  
             ??_Interruption 0019              __CFG_PBADEN$OFF 000000          __size_ofi2_WriteI2C 0070  
         __size_of_baudUSART 000A                   _WriteUSART 088A               __pcstackCOMRAM 0001  
          __end_of_ReadUSART 07EA                 ??i2_I2C_send 0004                   ??_I2C_send 0063  
                 ??_I2C_open 0064           I2C_open@baud_clock 0063                ReadUSART@data 0001  
                  ?_CloseI2C 0001            __end_of_OpenUSART 03CC  I2C_turn_on_acc@sleep_wakeup 006A  
                ?_OpenTimer0 0001           __size_of_init_UART 0042               init_UART@spbrg 0066  
         __end_ofi2_I2C_send 07AC             WriteTimer0@timer 0003                putsUSART@data 0002  
                    _BAUDCON 000FB8                ??_WriteTimer0 0003                    ?_WriteI2C 0001  
              i2I2C_send@reg 0005          init_UART@baudconfig 0069                    ?_data_acc 0001  
          __end_of_baudUSART 08D6                    ?_endTimer 0001                      i2u48_45 0674  
                 ??_CloseI2C 0060           __size_of_putsUSART 0026                      _SSPCON1 000FC6  
                    _SSPCON2 000FC5                      _SSPSTAT 000FC7                    ?_init_I2C 0001  
                  ?_init_ACC 0001                      _IdleI2C 0866                    ?_readData 0001  
                    _ReadI2C 0716                    ?_imprimir 0001            ??_I2C_turn_on_acc 006B  
                    _OpenI2C 0764                      __Hparam 0000         I2C_write_reg_acc@reg 0067  
                    __Lparam 0000                  ?_WriteUSART 0001                    ?_uart_isr 0001  
                    ___lwdiv 04E8                      ___lwmod 057C              __CFG_STVREN$OFF 000000  
               ??i2_WriteI2C 0002                      __pcinit 05FE                   ??_WriteI2C 0061  
                    __ramtop 0800          __size_of_OpenTimer0 0020                      _getsI2C 043C  
                    __ptext0 07EA                      __ptext1 053A                      __ptext2 08CC  
                    __ptext3 034C                      __ptext4 0852                      __ptext5 0804  
                    __ptext6 0764                      __ptext7 08E2                      __ptext8 081E  
                    __ptext9 05BE            __end_of_init_UART 057C                    _T0CONbits 000FD5  
       __end_of_Interruption 01A4                   ??_data_acc 0003          __end_of_WriteTimer0 088A  
                 ??_endTimer 0001               __pintcode_body 00F2         end_of_initialization 062A  
                 ??_init_I2C 0065                   ??_init_ACC 006C                 ?_CloseTimer0 0001  
                 ??_readData 000A                      itoa@buf 0011                      itoa@val 0013  
                    int_func 00F2                   ??_imprimir 0019           __end_ofi2_WriteI2C 043C  
                  _RCSTAbits 000FAB                   ??_uart_isr 0005                      postdec1 000FE5  
                    postdec2 000FDD                   _timer0_isr 08AC                      postinc0 000FEE  
                    postinc2 000FDE            __end_of_putsUSART 0764            _I2C_read_data_acc 02CA  
                    utoa@buf 0008                      utoa@val 000A                    i2_IdleI2C 08BC  
         ?_I2C_read_data_acc 0007                    _PORTCbits 000F82                 I2C_send@data 0063  
               I2C_open@slew 0062                    _TRISBbits 000F93                    _TRISCbits 000F94  
        ??_I2C_read_data_acc 0009          __size_of_WriteUSART 0012            __size_of_I2C_send 002E  
          __size_of_I2C_open 001A                   _startTimer 0838                    _TXSTAbits 000FAC  
  __end_of_I2C_read_data_acc 034C                __pidataCOMRAM 089C                   ?i2_IdleI2C 0001  
                _WriteTimer0 0878            _I2C_write_reg_acc 06BE           ?_I2C_write_reg_acc 0066  
        start_initialization 05FE                    _ReadUSART 07CC             WriteI2C@data_out 0062  
        ??_I2C_write_reg_acc 0067                 ??_OpenTimer0 0001            __size_of_CloseI2C 0004  
                  _OpenUSART 034C       I2C_write_reg_acc@valor 0066                  ?_timer0_isr 0001  
      __size_of_Interruption 019C    __end_of_I2C_write_reg_acc 06EA             __CFG_LPT1OSC$OFF 000000  
         __end_of_OpenTimer0 07CC            __size_of_WriteI2C 0082                  __pbssCOMRAM 0028  
                 ?_ReadUSART 0001                __pcstackBANK0 0060              _I2C_turn_on_acc 05BE  
          __size_of_data_acc 0030                  ?_startTimer 0001                    _baudUSART 08CC  
          __size_of_endTimer 0006                     ?_IdleI2C 0001              init_UART@config 0068  
                 ?_OpenUSART 0060                     ?_ReadI2C 0001                 _Interruption 0008  
          __size_of_init_I2C 0014            __size_of_init_ACC 001A         __size_of_CloseTimer0 0006  
          __size_of_readData 002C                     ?_OpenI2C 0060             ___lwdiv@dividend 0001  
          __size_of_imprimir 00D6                 ??_WriteUSART 0001   __size_of_I2C_read_data_acc 0082  
                  __pintcode 0008                     ?___lwdiv 0001                     ?___lwmod 0001  
          __size_of_uart_isr 0030                  ??i2_IdleI2C 0001                     ?_getsI2C 0002  
          WriteTimer0@timer0 0001          I2C_turn_on_acc@mode 006B               i2I2C_send@data 0004  
                   _I2C_send 0690                     _I2C_open 0804                    _init_UART 053A  
           ___lwdiv@quotient 0005          __size_of_timer0_isr 0010           __end_of_WriteUSART 089C  
                 ?_baudUSART 0001                     _PIE1bits 000F9D       I2C_read_data_acc@rdptr 0007  
                   i2u151_40 0434                     i2u162_40 0134                     i2u162_48 0136  
                   i2u164_40 0156                     i2u164_48 0158                     _PIR1bits 000F9E  
                   _PIR2bits 000FA1             __CFG_WDTPS$32768 000000   __size_of_I2C_write_reg_acc 002C  
                I2C_send@reg 0064          __size_of_startTimer 001A                    _putsUSART 073E  
    __end_of_I2C_turn_on_acc 05FE                  ??_ReadUSART 0001            I2C_open@sync_mode 0064  
                 ?_init_UART 0001                     _CloseI2C 08E2                    copy_data0 061E  
           OpenI2C@sync_mode 0061                  ??_OpenUSART 0062             __size_of_IdleI2C 0012  
            OpenUSART@config 0065             __size_of_ReadI2C 0028                     __Hrparam 0000  
           i2I2C_send@status 0006             __size_of_OpenI2C 0024                     __Lrparam 0000  
              getsI2C@length 0004             __size_of___lwdiv 0052             __size_of___lwmod 0042  
                   _WriteI2C 0248                 ?_WriteTimer0 0001                   ?_putsUSART 0002  
           __size_of_getsI2C 005A                  data_acc@ptr 0001                     _data_acc 0660  
            ___lwdiv@divisor 0003                     _endTimer 08D6              ___lwdiv@counter 0007  
                   __ptext10 06BE                     __ptext11 0690                     __ptext20 07CC  
                   __ptext12 0248                     __ptext21 08AC                     __ptext13 0866  
                   __ptext30 0660                     __ptext22 0878                     __ptext31 001C  
                   __ptext23 06EA                     __ptext15 0630                     __ptext32 073E  
                   __ptext24 02CA                     __ptext16 0838                     __ptext33 088A  
                   __ptext25 0788                     __ptext17 07AC                     __ptext34 0496  
                   __ptext26 03CC                     __ptext18 08D6                     __ptext35 01A4  
                   __ptext27 08BC                     __ptext19 08DC                     __ptext36 057C  
                   __ptext28 043C                     __ptext37 04E8                     __ptext29 0716  
                ??_baudUSART 0060                     _init_I2C 0852                     _init_ACC 081E  
                   _readData 06EA                __size_of_main 001A                __size_of_itoa 0052  
              __size_of_utoa 00A4                     _imprimir 001C                     _uart_isr 0630  
               ??_timer0_isr 0005        __CFG_CPUDIV$OSC1_PLL2 000000             ?_I2C_turn_on_acc 0068  
                 _INTCONbits 000FF2               OpenUSART@spbrg 0060                  ??_init_UART 0066  
                 i2_I2C_send 0788                     itoa@base 0015                 getsI2C@rdptr 0002  
               ??_startTimer 0005                     intlevel2 0000           __end_of_timer0_isr 08BC  
           ___lwmod@dividend 0001           i2WriteI2C@data_out 0003           __end_of_startTimer 0852  
                ??_putsUSART 0004                     utoa@base 000C                  _temperature 0031  
            ___lwmod@divisor 0003               I2C_send@status 0065              ___lwmod@counter 0005  
                _SSPCON1bits 000FC6                  _SSPCON2bits 000FC5           __CFG_FOSC$HSPLL_HS 000000  
              ??_CloseTimer0 0001                 _USART_Status 0030  
