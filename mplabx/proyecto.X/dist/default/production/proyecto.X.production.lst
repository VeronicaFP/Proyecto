

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Fri Dec 19 11:48:10 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           	psect	idataCOMRAM
    54  000842                     __pidataCOMRAM:
    55                           	opt stack 0
    56                           
    57                           ;initializer for _mid
    58  000842  20                 	db	32
    59  000843  00                 	db	0
    60                           
    61                           ;initializer for _timer0
    62  000844  FF88               	dw	65416
    63                           
    64                           ;initializer for _enter
    65  000846  0A                 	db	10
    66  000847  00                 	db	0
    67  0000                     _BAUDCON	set	4024
    68  0000                     _INTCONbits	set	4082
    69  0000                     _LATC	set	3979
    70  0000                     _PIE1	set	3997
    71  0000                     _PIE1bits	set	3997
    72  0000                     _PIR1bits	set	3998
    73  0000                     _PIR2bits	set	4001
    74  0000                     _PORTCbits	set	3970
    75  0000                     _RCREG	set	4014
    76  0000                     _RCSTA	set	4011
    77  0000                     _RCSTAbits	set	4011
    78  0000                     _SPBRG	set	4015
    79  0000                     _SPBRGH	set	4016
    80  0000                     _SSPADD	set	4040
    81  0000                     _SSPBUF	set	4041
    82  0000                     _SSPCON1	set	4038
    83  0000                     _SSPCON1bits	set	4038
    84  0000                     _SSPCON2	set	4037
    85  0000                     _SSPCON2bits	set	4037
    86  0000                     _SSPSTAT	set	4039
    87  0000                     _SSPSTATbits	set	4039
    88  0000                     _T0CON	set	4053
    89  0000                     _T0CONbits	set	4053
    90  0000                     _TMR0H	set	4055
    91  0000                     _TMR0L	set	4054
    92  0000                     _TRISBbits	set	3987
    93  0000                     _TRISC	set	3988
    94  0000                     _TRISCbits	set	3988
    95  0000                     _TXREG	set	4013
    96  0000                     _TXSTA	set	4012
    97  0000                     _TXSTAbits	set	4012
    98                           
    99                           ; #config settings
   100  0000                     
   101                           	psect	cinit
   102  00059A                     __pcinit:
   103                           	opt stack 0
   104  00059A                     start_initialization:
   105                           	opt stack 0
   106  00059A                     __initialization:
   107                           	opt stack 0
   108                           
   109                           ; Clear objects allocated to COMRAM (32 bytes)
   110  00059A  EE00  F028         	lfsr	0,__pbssCOMRAM
   111  00059E  0E20               	movlw	32
   112  0005A0                     clear_0:
   113  0005A0  6AEE               	clrf	postinc0,c
   114  0005A2  06E8               	decf	wreg,f,c
   115  0005A4  E1FD               	bnz	clear_0
   116                           
   117                           ; Initialize objects allocated to COMRAM (6 bytes)
   118                           ; load TBLPTR registers with __pidataCOMRAM
   119  0005A6  0E42               	movlw	low __pidataCOMRAM
   120  0005A8  6EF6               	movwf	tblptrl,c
   121  0005AA  0E08               	movlw	high __pidataCOMRAM
   122  0005AC  6EF7               	movwf	tblptrh,c
   123  0005AE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   124  0005B0  6EF8               	movwf	tblptru,c
   125  0005B2  EE00  F048         	lfsr	0,__pdataCOMRAM
   126  0005B6  EE10 F006          	lfsr	1,6
   127  0005BA                     copy_data0:
   128  0005BA  0009               	tblrd		*+
   129  0005BC  CFF5 FFEE          	movff	tablat,postinc0
   130  0005C0  50E5               	movf	postdec1,w,c
   131  0005C2  50E1               	movf	fsr1l,w,c
   132  0005C4  E1FA               	bnz	copy_data0
   133  0005C6                     end_of_initialization:
   134                           	opt stack 0
   135  0005C6                     __end_of__initialization:
   136                           	opt stack 0
   137  0005C6  0100               	movlb	0
   138  0005C8  EFC0  F003         	goto	_main	;jump to C main() function
   139                           tblptru	equ	0xFF8
   140                           tblptrh	equ	0xFF7
   141                           tblptrl	equ	0xFF6
   142                           tablat	equ	0xFF5
   143                           postinc0	equ	0xFEE
   144                           wreg	equ	0xFE8
   145                           postdec1	equ	0xFE5
   146                           fsr1l	equ	0xFE1
   147                           
   148                           	psect	bssCOMRAM
   149  000028                     __pbssCOMRAM:
   150                           	opt stack 0
   151  000028                     _CaracterRx:
   152                           	opt stack 0
   153  000028                     	ds	2
   154  00002A                     _gyr_x:
   155                           	opt stack 0
   156  00002A                     	ds	2
   157  00002C                     _gyr_y:
   158                           	opt stack 0
   159  00002C                     	ds	2
   160  00002E                     _gyr_z:
   161                           	opt stack 0
   162  00002E                     	ds	2
   163  000030                     _microsegundos:
   164                           	opt stack 0
   165  000030                     	ds	2
   166  000032                     _milisegundos:
   167                           	opt stack 0
   168  000032                     	ds	2
   169  000034                     _segundos:
   170                           	opt stack 0
   171  000034                     	ds	2
   172  000036                     _USART_Status:
   173                           	opt stack 0
   174  000036                     	ds	1
   175  000037                     _temperature:
   176                           	opt stack 0
   177  000037                     	ds	1
   178  000038                     _buf:
   179                           	opt stack 0
   180  000038                     	ds	10
   181  000042                     _acc_x:
   182                           	opt stack 0
   183  000042                     	ds	2
   184  000044                     _acc_y:
   185                           	opt stack 0
   186  000044                     	ds	2
   187  000046                     _acc_z:
   188                           	opt stack 0
   189  000046                     	ds	2
   190                           tblptru	equ	0xFF8
   191                           tblptrh	equ	0xFF7
   192                           tblptrl	equ	0xFF6
   193                           tablat	equ	0xFF5
   194                           postinc0	equ	0xFEE
   195                           wreg	equ	0xFE8
   196                           postdec1	equ	0xFE5
   197                           fsr1l	equ	0xFE1
   198                           
   199                           	psect	dataCOMRAM
   200  000048                     __pdataCOMRAM:
   201                           	opt stack 0
   202  000048                     _mid:
   203                           	opt stack 0
   204  000048                     	ds	2
   205  00004A                     _timer0:
   206                           	opt stack 0
   207  00004A                     	ds	2
   208  00004C                     _enter:
   209                           	opt stack 0
   210  00004C                     	ds	2
   211                           tblptru	equ	0xFF8
   212                           tblptrh	equ	0xFF7
   213                           tblptrl	equ	0xFF6
   214                           tablat	equ	0xFF5
   215                           postinc0	equ	0xFEE
   216                           wreg	equ	0xFE8
   217                           postdec1	equ	0xFE5
   218                           fsr1l	equ	0xFE1
   219                           
   220                           	psect	cstackBANK0
   221  000060                     __pcstackBANK0:
   222                           	opt stack 0
   223  000060                     ??_IdleI2C:
   224  000060                     baudUSART@baudconfig:
   225                           	opt stack 0
   226  000060                     OpenI2C@slew:
   227                           	opt stack 0
   228  000060                     OpenUSART@spbrg:
   229                           	opt stack 0
   230                           
   231                           ; 2 bytes @ 0x0
   232  000060                     	ds	1
   233  000061                     ??_WriteI2C:
   234  000061                     OpenI2C@sync_mode:
   235                           	opt stack 0
   236                           
   237                           ; 1 bytes @ 0x1
   238  000061                     	ds	1
   239  000062                     ??_OpenUSART:
   240  000062                     I2C_open@slew:
   241                           	opt stack 0
   242  000062                     WriteI2C@data_out:
   243                           	opt stack 0
   244                           
   245                           ; 1 bytes @ 0x2
   246  000062                     	ds	1
   247  000063                     I2C_open@baud_clock:
   248                           	opt stack 0
   249  000063                     I2C_send@data:
   250                           	opt stack 0
   251                           
   252                           ; 1 bytes @ 0x3
   253  000063                     	ds	1
   254  000064                     I2C_open@sync_mode:
   255                           	opt stack 0
   256  000064                     I2C_send@reg:
   257                           	opt stack 0
   258                           
   259                           ; 1 bytes @ 0x4
   260  000064                     	ds	1
   261  000065                     I2C_send@status:
   262                           	opt stack 0
   263  000065                     OpenUSART@config:
   264                           	opt stack 0
   265                           
   266                           ; 1 bytes @ 0x5
   267  000065                     	ds	1
   268  000066                     I2C_write_reg_acc@valor:
   269                           	opt stack 0
   270  000066                     init_UART@spbrg:
   271                           	opt stack 0
   272                           
   273                           ; 2 bytes @ 0x6
   274  000066                     	ds	1
   275  000067                     I2C_write_reg_acc@reg:
   276                           	opt stack 0
   277                           
   278                           ; 1 bytes @ 0x7
   279  000067                     	ds	1
   280  000068                     init_UART@config:
   281                           	opt stack 0
   282  000068                     I2C_turn_on_acc@data_rate:
   283                           	opt stack 0
   284                           
   285                           ; 1 bytes @ 0x8
   286  000068                     	ds	1
   287  000069                     init_UART@baudconfig:
   288                           	opt stack 0
   289  000069                     I2C_turn_on_acc@full_scale:
   290                           	opt stack 0
   291                           
   292                           ; 1 bytes @ 0x9
   293  000069                     	ds	1
   294  00006A                     I2C_turn_on_acc@sleep_wakeup:
   295                           	opt stack 0
   296                           
   297                           ; 1 bytes @ 0xA
   298  00006A                     	ds	1
   299  00006B                     I2C_turn_on_acc@mode:
   300                           	opt stack 0
   301                           
   302                           ; 1 bytes @ 0xB
   303  00006B                     	ds	1
   304  00006C                     tblptru	equ	0xFF8
   305                           tblptrh	equ	0xFF7
   306                           tblptrl	equ	0xFF6
   307                           tablat	equ	0xFF5
   308                           postinc0	equ	0xFEE
   309                           wreg	equ	0xFE8
   310                           postdec1	equ	0xFE5
   311                           fsr1l	equ	0xFE1
   312                           
   313                           ; 0 bytes @ 0xC
   314                           
   315                           	psect	cstackCOMRAM
   316  000001                     __pcstackCOMRAM:
   317                           	opt stack 0
   318  000001                     ??_ReadI2C:
   319  000001                     ??i2_IdleI2C:
   320  000001                     ?___lwdiv:
   321                           	opt stack 0
   322  000001                     ?___lwmod:
   323                           	opt stack 0
   324  000001                     OpenTimer0@config:
   325                           	opt stack 0
   326  000001                     ReadUSART@data:
   327                           	opt stack 0
   328  000001                     WriteUSART@data:
   329                           	opt stack 0
   330  000001                     data_acc@ptr:
   331                           	opt stack 0
   332  000001                     WriteTimer0@timer0:
   333                           	opt stack 0
   334  000001                     ___lwdiv@dividend:
   335                           	opt stack 0
   336  000001                     ___lwmod@dividend:
   337                           	opt stack 0
   338                           
   339                           ; 2 bytes @ 0x0
   340  000001                     	ds	1
   341  000002                     ??i2_WriteI2C:
   342  000002                     putsUSART@data:
   343                           	opt stack 0
   344  000002                     getsI2C@rdptr:
   345                           	opt stack 0
   346                           
   347                           ; 2 bytes @ 0x1
   348  000002                     	ds	1
   349  000003                     ??_data_acc:
   350  000003                     i2WriteI2C@data_out:
   351                           	opt stack 0
   352  000003                     WriteTimer0@timer:
   353                           	opt stack 0
   354  000003                     ___lwdiv@divisor:
   355                           	opt stack 0
   356  000003                     ___lwmod@divisor:
   357                           	opt stack 0
   358                           
   359                           ; 2 bytes @ 0x2
   360  000003                     	ds	1
   361  000004                     getsI2C@length:
   362                           	opt stack 0
   363  000004                     i2I2C_send@data:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0x3
   367  000004                     	ds	1
   368  000005                     ??_uart_isr:
   369  000005                     ??_getsI2C:
   370  000005                     ___lwmod@counter:
   371                           	opt stack 0
   372  000005                     i2I2C_send@reg:
   373                           	opt stack 0
   374  000005                     ___lwdiv@quotient:
   375                           	opt stack 0
   376                           
   377                           ; 2 bytes @ 0x4
   378  000005                     	ds	1
   379  000006                     i2I2C_send@status:
   380                           	opt stack 0
   381                           
   382                           ; 1 bytes @ 0x5
   383  000006                     	ds	1
   384  000007                     ___lwdiv@counter:
   385                           	opt stack 0
   386  000007                     I2C_read_data_acc@rdptr:
   387                           	opt stack 0
   388                           
   389                           ; 2 bytes @ 0x6
   390  000007                     	ds	1
   391  000008                     utoa@buf:
   392                           	opt stack 0
   393                           
   394                           ; 2 bytes @ 0x7
   395  000008                     	ds	1
   396  000009                     I2C_read_data_acc@reg:
   397                           	opt stack 0
   398                           
   399                           ; 1 bytes @ 0x8
   400  000009                     	ds	1
   401  00000A                     utoa@val:
   402                           	opt stack 0
   403                           
   404                           ; 2 bytes @ 0x9
   405  00000A                     	ds	2
   406  00000C                     utoa@base:
   407                           	opt stack 0
   408                           
   409                           ; 2 bytes @ 0xB
   410  00000C                     	ds	2
   411  00000E                     utoa@v:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0xD
   415  00000E                     	ds	2
   416  000010                     utoa@c:
   417                           	opt stack 0
   418                           
   419                           ; 1 bytes @ 0xF
   420  000010                     	ds	1
   421  000011                     itoa@buf:
   422                           	opt stack 0
   423                           
   424                           ; 2 bytes @ 0x10
   425  000011                     	ds	2
   426  000013                     itoa@val:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0x12
   430  000013                     	ds	2
   431  000015                     itoa@base:
   432                           	opt stack 0
   433                           
   434                           ; 2 bytes @ 0x14
   435  000015                     	ds	2
   436  000017                     itoa@cp:
   437                           	opt stack 0
   438                           
   439                           ; 2 bytes @ 0x16
   440  000017                     	ds	2
   441  000019                     ??_Interruption:
   442                           
   443                           ; 0 bytes @ 0x18
   444  000019                     	ds	15
   445                           tblptru	equ	0xFF8
   446                           tblptrh	equ	0xFF7
   447                           tblptrl	equ	0xFF6
   448                           tablat	equ	0xFF5
   449                           postinc0	equ	0xFEE
   450                           wreg	equ	0xFE8
   451                           postdec1	equ	0xFE5
   452                           fsr1l	equ	0xFE1
   453                           
   454 ;;
   455 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   456 ;;
   457 ;; *************** function _main *****************
   458 ;; Defined at:
   459 ;;		line 31 in file "main.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;		None
   462 ;; Auto vars:     Size  Location     Type
   463 ;;		None
   464 ;; Return value:  Size  Location     Type
   465 ;;		None               void
   466 ;; Registers used:
   467 ;;		wreg, status,2, status,0, cstack
   468 ;; Tracked objects:
   469 ;;		On entry : 0/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   473 ;;      Params:         0       0       0       0       0       0       0       0       0
   474 ;;      Locals:         0       0       0       0       0       0       0       0       0
   475 ;;      Temps:          0       0       0       0       0       0       0       0       0
   476 ;;      Totals:         0       0       0       0       0       0       0       0       0
   477 ;;Total ram usage:        0 bytes
   478 ;; Hardware stack levels required when called:   12
   479 ;; This function calls:
   480 ;;		_init_ACC
   481 ;;		_init_I2C
   482 ;;		_init_UART
   483 ;; This function is called by:
   484 ;;		Startup code after reset
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488                           	psect	text0
   489  000780                     __ptext0:
   490                           	opt stack 0
   491  000780                     _main:
   492                           	opt stack 19
   493                           
   494                           ;main.c: 32: TRISC = 0b00000000;
   495                           
   496                           ;incstack = 0
   497  000780  0E00               	movlw	0
   498  000782  6E94               	movwf	3988,c	;volatile
   499                           
   500                           ;main.c: 33: LATC = 0b00000000;
   501  000784  0E00               	movlw	0
   502  000786  6E8B               	movwf	3979,c	;volatile
   503                           
   504                           ;main.c: 34: init_UART();
   505  000788  EC32  F002         	call	_init_UART	;wreg free
   506                           
   507                           ;main.c: 35: init_I2C();
   508  00078C  ECE7  F003         	call	_init_I2C	;wreg free
   509                           
   510                           ;main.c: 37: init_ACC();
   511  000790  ECDA  F003         	call	_init_ACC	;wreg free
   512                           
   513                           ;main.c: 38: PORTCbits.RC0=1;;
   514  000794  8082               	bsf	3970,0,c	;volatile
   515                           
   516                           ;main.c: 39: PORTCbits.RC1=1;;
   517  000796  8282               	bsf	3970,1,c	;volatile
   518  000798                     l52:
   519  000798  D7FF               	goto	l52
   520  00079A                     __end_of_main:
   521                           	opt stack 0
   522                           tblptru	equ	0xFF8
   523                           tblptrh	equ	0xFF7
   524                           tblptrl	equ	0xFF6
   525                           tablat	equ	0xFF5
   526                           postinc0	equ	0xFEE
   527                           wreg	equ	0xFE8
   528                           postdec1	equ	0xFE5
   529                           fsr1l	equ	0xFE1
   530                           
   531 ;; *************** function _init_UART *****************
   532 ;; Defined at:
   533 ;;		line 3 in file "uartFunct.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;		None
   536 ;; Auto vars:     Size  Location     Type
   537 ;;  spbrg           2    6[BANK0 ] unsigned int 
   538 ;;  baudconfig      1    9[BANK0 ] unsigned char 
   539 ;;  config          1    8[BANK0 ] unsigned char 
   540 ;; Return value:  Size  Location     Type
   541 ;;		None               void
   542 ;; Registers used:
   543 ;;		wreg, status,2, status,0, cstack
   544 ;; Tracked objects:
   545 ;;		On entry : 0/0
   546 ;;		On exit  : 0/0
   547 ;;		Unchanged: 0/0
   548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   549 ;;      Params:         0       0       0       0       0       0       0       0       0
   550 ;;      Locals:         0       4       0       0       0       0       0       0       0
   551 ;;      Temps:          0       0       0       0       0       0       0       0       0
   552 ;;      Totals:         0       4       0       0       0       0       0       0       0
   553 ;;Total ram usage:        4 bytes
   554 ;; Hardware stack levels used:    1
   555 ;; Hardware stack levels required when called:    7
   556 ;; This function calls:
   557 ;;		_OpenUSART
   558 ;;		_baudUSART
   559 ;; This function is called by:
   560 ;;		_main
   561 ;; This function uses a non-reentrant model
   562 ;;
   563                           
   564                           	psect	text1
   565  000464                     __ptext1:
   566                           	opt stack 0
   567  000464                     _init_UART:
   568                           	opt stack 23
   569                           
   570                           ;uartFunct.c: 4: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
   571                           
   572                           ;incstack = 0
   573  000464  0E4F               	movlw	79
   574  000466  16AB               	andwf	4011,f,c	;volatile
   575  000468  9AAC               	bcf	4012,5,c	;volatile
   576  00046A  0ECF               	movlw	207
   577  00046C  169D               	andwf	3997,f,c	;volatile
   578                           
   579                           ;uartFunct.c: 6: unsigned char config = 0b01111111 & 0b11111111 & 0b11111110 & 0b1111110
      +                          1 & 0b11111111&0b11111111;
   580  00046E  0E7C               	movlw	124
   581  000470  0100               	movlb	0	; () banked
   582  000472  6F68               	movwf	init_UART@config& (0+255),b
   583                           
   584                           ; BSR set to: 0
   585                           ;uartFunct.c: 7: unsigned int spbrg = 1249;
   586  000474  0E04               	movlw	4
   587  000476  0100               	movlb	0	; () banked
   588  000478  6F67               	movwf	(init_UART@spbrg+1)& (0+255),b
   589  00047A  0EE1               	movlw	225
   590  00047C  0100               	movlb	0	; () banked
   591  00047E  6F66               	movwf	init_UART@spbrg& (0+255),b
   592                           
   593                           ; BSR set to: 0
   594                           ;uartFunct.c: 8: OpenUSART(config, spbrg);
   595  000480  C066  F060         	movff	init_UART@spbrg,OpenUSART@spbrg
   596  000484  C067  F061         	movff	init_UART@spbrg+1,OpenUSART@spbrg+1
   597  000488  0100               	movlb	0	; () banked
   598  00048A  5168               	movf	init_UART@config& (0+255),w,b
   599  00048C  EC3B  F001         	call	_OpenUSART
   600                           
   601                           ;uartFunct.c: 9: unsigned char baudconfig = 0b11111111 & 0b11111110 & 0b11101111&0b11011
      +                          111;
   602  000490  0ECE               	movlw	206
   603  000492  0100               	movlb	0	; () banked
   604  000494  6F69               	movwf	init_UART@baudconfig& (0+255),b
   605                           
   606                           ; BSR set to: 0
   607                           ;uartFunct.c: 10: baudUSART(baudconfig);
   608  000496  0100               	movlb	0	; () banked
   609  000498  5169               	movf	init_UART@baudconfig& (0+255),w,b
   610  00049A  EC1C  F004         	call	_baudUSART
   611                           
   612                           ;uartFunct.c: 11: INTCONbits.GIE = 1;
   613  00049E  8EF2               	bsf	intcon,7,c	;volatile
   614                           
   615                           ;uartFunct.c: 12: INTCONbits.PEIE = 1;
   616  0004A0  8CF2               	bsf	intcon,6,c	;volatile
   617                           
   618                           ;uartFunct.c: 13: PIE1bits.RCIE = 1;
   619  0004A2  8A9D               	bsf	3997,5,c	;volatile
   620  0004A4  0012               	return	
   621  0004A6                     __end_of_init_UART:
   622                           	opt stack 0
   623                           tblptru	equ	0xFF8
   624                           tblptrh	equ	0xFF7
   625                           tblptrl	equ	0xFF6
   626                           tablat	equ	0xFF5
   627                           intcon	equ	0xFF2
   628                           postinc0	equ	0xFEE
   629                           wreg	equ	0xFE8
   630                           postdec1	equ	0xFE5
   631                           fsr1l	equ	0xFE1
   632                           
   633 ;; *************** function _baudUSART *****************
   634 ;; Defined at:
   635 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\ubaud.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;  baudconfig      1    wreg     unsigned char 
   638 ;; Auto vars:     Size  Location     Type
   639 ;;  baudconfig      1    0[BANK0 ] unsigned char 
   640 ;; Return value:  Size  Location     Type
   641 ;;		None               void
   642 ;; Registers used:
   643 ;;		wreg
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   649 ;;      Params:         0       0       0       0       0       0       0       0       0
   650 ;;      Locals:         0       1       0       0       0       0       0       0       0
   651 ;;      Temps:          0       0       0       0       0       0       0       0       0
   652 ;;      Totals:         0       1       0       0       0       0       0       0       0
   653 ;;Total ram usage:        1 bytes
   654 ;; Hardware stack levels used:    1
   655 ;; Hardware stack levels required when called:    6
   656 ;; This function calls:
   657 ;;		Nothing
   658 ;; This function is called by:
   659 ;;		_init_UART
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           	psect	text2
   664  000838                     __ptext2:
   665                           	opt stack 0
   666  000838                     _baudUSART:
   667                           	opt stack 23
   668                           
   669                           ;incstack = 0
   670                           ;baudUSART@baudconfig stored from wreg
   671  000838  0100               	movlb	0	; () banked
   672  00083A  6F60               	movwf	baudUSART@baudconfig& (0+255),b
   673                           
   674                           ; BSR set to: 0
   675  00083C  C060  FFB8         	movff	baudUSART@baudconfig,4024	;volatile
   676                           
   677                           ; BSR set to: 0
   678  000840  0012               	return	
   679  000842                     __end_of_baudUSART:
   680                           	opt stack 0
   681                           tblptru	equ	0xFF8
   682                           tblptrh	equ	0xFF7
   683                           tblptrl	equ	0xFF6
   684                           tablat	equ	0xFF5
   685                           intcon	equ	0xFF2
   686                           postinc0	equ	0xFEE
   687                           wreg	equ	0xFE8
   688                           postdec1	equ	0xFE5
   689                           fsr1l	equ	0xFE1
   690                           
   691 ;; *************** function _OpenUSART *****************
   692 ;; Defined at:
   693 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uopen.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;  config          1    wreg     unsigned char 
   696 ;;  spbrg           2    0[BANK0 ] unsigned int 
   697 ;; Auto vars:     Size  Location     Type
   698 ;;  config          1    5[BANK0 ] unsigned char 
   699 ;; Return value:  Size  Location     Type
   700 ;;		None               void
   701 ;; Registers used:
   702 ;;		wreg, status,2
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   708 ;;      Params:         0       2       0       0       0       0       0       0       0
   709 ;;      Locals:         0       1       0       0       0       0       0       0       0
   710 ;;      Temps:          0       3       0       0       0       0       0       0       0
   711 ;;      Totals:         0       6       0       0       0       0       0       0       0
   712 ;;Total ram usage:        6 bytes
   713 ;; Hardware stack levels used:    1
   714 ;; Hardware stack levels required when called:    6
   715 ;; This function calls:
   716 ;;		Nothing
   717 ;; This function is called by:
   718 ;;		_init_UART
   719 ;; This function uses a non-reentrant model
   720 ;;
   721                           
   722                           	psect	text3
   723  000276                     __ptext3:
   724                           	opt stack 0
   725  000276                     _OpenUSART:
   726                           	opt stack 23
   727                           
   728                           ; BSR set to: 0
   729                           ;incstack = 0
   730                           ;OpenUSART@config stored from wreg
   731  000276  0100               	movlb	0	; () banked
   732  000278  6F65               	movwf	OpenUSART@config& (0+255),b
   733                           
   734                           ; BSR set to: 0
   735  00027A  0E00               	movlw	0
   736  00027C  6EAC               	movwf	4012,c	;volatile
   737  00027E  0E00               	movlw	0
   738  000280  6EAB               	movwf	4011,c	;volatile
   739                           
   740                           ; BSR set to: 0
   741  000282  0100               	movlb	0	; () banked
   742  000284  B165               	btfsc	OpenUSART@config& (0+255),0,b
   743                           
   744                           ; BSR set to: 0
   745  000286  88AC               	bsf	4012,4,c	;volatile
   746                           
   747                           ; BSR set to: 0
   748                           
   749                           ; BSR set to: 0
   750  000288  0100               	movlb	0	; () banked
   751  00028A  A365               	btfss	OpenUSART@config& (0+255),1,b
   752  00028C  D002               	goto	l1980
   753                           
   754                           ; BSR set to: 0
   755  00028E  8CAC               	bsf	4012,6,c	;volatile
   756  000290  8CAB               	bsf	4011,6,c	;volatile
   757  000292                     l1980:
   758                           
   759                           ; BSR set to: 0
   760  000292  0100               	movlb	0	; () banked
   761  000294  B565               	btfsc	OpenUSART@config& (0+255),2,b
   762                           
   763                           ; BSR set to: 0
   764  000296  8EAC               	bsf	4012,7,c	;volatile
   765                           
   766                           ; BSR set to: 0
   767                           
   768                           ; BSR set to: 0
   769  000298  0100               	movlb	0	; () banked
   770  00029A  A765               	btfss	OpenUSART@config& (0+255),3,b
   771  00029C  D002               	goto	l451
   772                           
   773                           ; BSR set to: 0
   774  00029E  88AB               	bsf	4011,4,c	;volatile
   775  0002A0  D001               	goto	l1988
   776  0002A2                     l451:
   777                           
   778                           ; BSR set to: 0
   779  0002A2  8AAB               	bsf	4011,5,c	;volatile
   780  0002A4                     l1988:
   781                           
   782                           ; BSR set to: 0
   783  0002A4  0100               	movlb	0	; () banked
   784  0002A6  B965               	btfsc	OpenUSART@config& (0+255),4,b
   785                           
   786                           ; BSR set to: 0
   787  0002A8  84AC               	bsf	4012,2,c	;volatile
   788                           
   789                           ; BSR set to: 0
   790  0002AA  989E               	bcf	3998,4,c	;volatile
   791                           
   792                           ; BSR set to: 0
   793  0002AC  0100               	movlb	0	; () banked
   794  0002AE  BB65               	btfsc	OpenUSART@config& (0+255),5,b
   795                           
   796                           ; BSR set to: 0
   797  0002B0  86AB               	bsf	4011,3,c	;volatile
   798                           
   799                           ; BSR set to: 0
   800                           
   801                           ; BSR set to: 0
   802  0002B2  0100               	movlb	0	; () banked
   803  0002B4  AD65               	btfss	OpenUSART@config& (0+255),6,b
   804  0002B6  D002               	goto	l455
   805                           
   806                           ; BSR set to: 0
   807  0002B8  8A9D               	bsf	3997,5,c	;volatile
   808  0002BA  D001               	goto	l456
   809  0002BC                     l455:
   810                           
   811                           ; BSR set to: 0
   812  0002BC  9A9D               	bcf	3997,5,c	;volatile
   813  0002BE                     l456:
   814                           
   815                           ; BSR set to: 0
   816  0002BE  9A9E               	bcf	3998,5,c	;volatile
   817                           
   818                           ; BSR set to: 0
   819  0002C0  0100               	movlb	0	; () banked
   820  0002C2  AF65               	btfss	OpenUSART@config& (0+255),7,b
   821  0002C4  D002               	goto	l457
   822                           
   823                           ; BSR set to: 0
   824  0002C6  889D               	bsf	3997,4,c	;volatile
   825  0002C8  D001               	goto	l458
   826  0002CA                     l457:
   827                           
   828                           ; BSR set to: 0
   829  0002CA  989D               	bcf	3997,4,c	;volatile
   830  0002CC                     l458:
   831                           
   832                           ; BSR set to: 0
   833  0002CC  C060  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
   834                           
   835                           ; BSR set to: 0
   836  0002D0  0100               	movlb	0	; () banked
   837  0002D2  C061  F062         	movff	OpenUSART@spbrg+1,??_OpenUSART
   838  0002D6  C062  F063         	movff	??_OpenUSART,??_OpenUSART+1
   839  0002DA  0100               	movlb	0	; () banked
   840  0002DC  6B64               	clrf	(??_OpenUSART+2)& (0+255),b
   841  0002DE  0100               	movlb	0	; () banked
   842  0002E0  5163               	movf	(??_OpenUSART+1)& (0+255),w,b
   843  0002E2  6EB0               	movwf	4016,c	;volatile
   844                           
   845                           ; BSR set to: 0
   846  0002E4  8AAC               	bsf	4012,5,c	;volatile
   847                           
   848                           ; BSR set to: 0
   849  0002E6  8EAB               	bsf	4011,7,c	;volatile
   850                           
   851                           ; BSR set to: 0
   852  0002E8  9C94               	bcf	3988,6,c	;volatile
   853                           
   854                           ; BSR set to: 0
   855  0002EA  8E94               	bsf	3988,7,c	;volatile
   856                           
   857                           ; BSR set to: 0
   858  0002EC  B8AC               	btfsc	4012,4,c	;volatile
   859                           
   860                           ; BSR set to: 0
   861  0002EE  BEAC               	btfsc	4012,7,c	;volatile
   862  0002F0  D001               	goto	l460
   863                           
   864                           ; BSR set to: 0
   865  0002F2  8C94               	bsf	3988,6,c	;volatile
   866  0002F4                     l460:
   867                           
   868                           ; BSR set to: 0
   869  0002F4  0012               	return	
   870  0002F6                     __end_of_OpenUSART:
   871                           	opt stack 0
   872                           tblptru	equ	0xFF8
   873                           tblptrh	equ	0xFF7
   874                           tblptrl	equ	0xFF6
   875                           tablat	equ	0xFF5
   876                           intcon	equ	0xFF2
   877                           postinc0	equ	0xFEE
   878                           wreg	equ	0xFE8
   879                           postdec1	equ	0xFE5
   880                           fsr1l	equ	0xFE1
   881                           
   882 ;; *************** function _init_I2C *****************
   883 ;; Defined at:
   884 ;;		line 45 in file "i2cFunct.c"
   885 ;; Parameters:    Size  Location     Type
   886 ;;		None
   887 ;; Auto vars:     Size  Location     Type
   888 ;;		None
   889 ;; Return value:  Size  Location     Type
   890 ;;		None               void
   891 ;; Registers used:
   892 ;;		wreg, status,2, status,0, cstack
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   898 ;;      Params:         0       0       0       0       0       0       0       0       0
   899 ;;      Locals:         0       0       0       0       0       0       0       0       0
   900 ;;      Temps:          0       0       0       0       0       0       0       0       0
   901 ;;      Totals:         0       0       0       0       0       0       0       0       0
   902 ;;Total ram usage:        0 bytes
   903 ;; Hardware stack levels used:    1
   904 ;; Hardware stack levels required when called:    8
   905 ;; This function calls:
   906 ;;		_I2C_open
   907 ;; This function is called by:
   908 ;;		_main
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912                           	psect	text4
   913  0007CE                     __ptext4:
   914                           	opt stack 0
   915  0007CE                     _init_I2C:
   916                           	opt stack 22
   917                           
   918                           ;i2cFunct.c: 46: I2C_open(0b00001000,0b00000000,((48000000/(4*400000))-1));
   919                           
   920                           ; BSR set to: 0
   921                           ;incstack = 0
   922  0007CE  0E00               	movlw	0
   923  0007D0  0100               	movlb	0	; () banked
   924  0007D2  6F62               	movwf	I2C_open@slew& (0+255),b
   925  0007D4  0E1D               	movlw	29
   926  0007D6  0100               	movlb	0	; () banked
   927  0007D8  6F63               	movwf	I2C_open@baud_clock& (0+255),b
   928  0007DA  0E08               	movlw	8
   929  0007DC  ECCD  F003         	call	_I2C_open
   930  0007E0  0012               	return	
   931  0007E2                     __end_of_init_I2C:
   932                           	opt stack 0
   933                           tblptru	equ	0xFF8
   934                           tblptrh	equ	0xFF7
   935                           tblptrl	equ	0xFF6
   936                           tablat	equ	0xFF5
   937                           intcon	equ	0xFF2
   938                           postinc0	equ	0xFEE
   939                           wreg	equ	0xFE8
   940                           postdec1	equ	0xFE5
   941                           fsr1l	equ	0xFE1
   942                           
   943 ;; *************** function _I2C_open *****************
   944 ;; Defined at:
   945 ;;		line 11 in file "i2cFunct.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;  sync_mode       1    wreg     unsigned char 
   948 ;;  slew            1    2[BANK0 ] unsigned char 
   949 ;;  baud_clock      1    3[BANK0 ] unsigned char 
   950 ;; Auto vars:     Size  Location     Type
   951 ;;  sync_mode       1    4[BANK0 ] unsigned char 
   952 ;; Return value:  Size  Location     Type
   953 ;;		None               void
   954 ;; Registers used:
   955 ;;		wreg, status,2, status,0, cstack
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   961 ;;      Params:         0       2       0       0       0       0       0       0       0
   962 ;;      Locals:         0       1       0       0       0       0       0       0       0
   963 ;;      Temps:          0       0       0       0       0       0       0       0       0
   964 ;;      Totals:         0       3       0       0       0       0       0       0       0
   965 ;;Total ram usage:        3 bytes
   966 ;; Hardware stack levels used:    1
   967 ;; Hardware stack levels required when called:    7
   968 ;; This function calls:
   969 ;;		_CloseI2C
   970 ;;		_OpenI2C
   971 ;; This function is called by:
   972 ;;		_init_I2C
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           	psect	text5
   977  00079A                     __ptext5:
   978                           	opt stack 0
   979  00079A                     _I2C_open:
   980                           	opt stack 22
   981                           
   982                           ;incstack = 0
   983                           ;I2C_open@sync_mode stored from wreg
   984  00079A  0100               	movlb	0	; () banked
   985  00079C  6F64               	movwf	I2C_open@sync_mode& (0+255),b
   986                           
   987                           ; BSR set to: 0
   988                           ;i2cFunct.c: 16: CloseI2C();
   989  00079E  EC2A  F004         	call	_CloseI2C	;wreg free
   990                           
   991                           ;i2cFunct.c: 17: OpenI2C(sync_mode,slew);
   992  0007A2  C062  F060         	movff	I2C_open@slew,OpenI2C@slew
   993  0007A6  0100               	movlb	0	; () banked
   994  0007A8  5164               	movf	I2C_open@sync_mode& (0+255),w,b
   995  0007AA  EC7D  F003         	call	_OpenI2C
   996                           
   997                           ;i2cFunct.c: 18: SSPADD = baud_clock;
   998  0007AE  C063  FFC8         	movff	I2C_open@baud_clock,4040	;volatile
   999  0007B2  0012               	return	
  1000  0007B4                     __end_of_I2C_open:
  1001                           	opt stack 0
  1002                           tblptru	equ	0xFF8
  1003                           tblptrh	equ	0xFF7
  1004                           tblptrl	equ	0xFF6
  1005                           tablat	equ	0xFF5
  1006                           intcon	equ	0xFF2
  1007                           postinc0	equ	0xFEE
  1008                           wreg	equ	0xFE8
  1009                           postdec1	equ	0xFE5
  1010                           fsr1l	equ	0xFE1
  1011                           
  1012 ;; *************** function _OpenI2C *****************
  1013 ;; Defined at:
  1014 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\i2c\i2c_open.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;  sync_mode       1    wreg     unsigned char 
  1017 ;;  slew            1    0[BANK0 ] unsigned char 
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;  sync_mode       1    1[BANK0 ] unsigned char 
  1020 ;; Return value:  Size  Location     Type
  1021 ;;		None               void
  1022 ;; Registers used:
  1023 ;;		wreg, status,2, status,0
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1029 ;;      Params:         0       1       0       0       0       0       0       0       0
  1030 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1031 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1032 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1033 ;;Total ram usage:        2 bytes
  1034 ;; Hardware stack levels used:    1
  1035 ;; Hardware stack levels required when called:    6
  1036 ;; This function calls:
  1037 ;;		Nothing
  1038 ;; This function is called by:
  1039 ;;		_I2C_open
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043                           	psect	text6
  1044  0006FA                     __ptext6:
  1045                           	opt stack 0
  1046  0006FA                     _OpenI2C:
  1047                           	opt stack 22
  1048                           
  1049                           ;incstack = 0
  1050                           ;OpenI2C@sync_mode stored from wreg
  1051  0006FA  0100               	movlb	0	; () banked
  1052  0006FC  6F61               	movwf	OpenI2C@sync_mode& (0+255),b
  1053                           
  1054                           ; BSR set to: 0
  1055  0006FE  0E3F               	movlw	63
  1056  000700  16C7               	andwf	4039,f,c	;volatile
  1057                           
  1058                           ; BSR set to: 0
  1059  000702  0E00               	movlw	0
  1060  000704  6EC6               	movwf	4038,c	;volatile
  1061                           
  1062                           ; BSR set to: 0
  1063  000706  0E00               	movlw	0
  1064  000708  6EC5               	movwf	4037,c	;volatile
  1065  00070A  0100               	movlb	0	; () banked
  1066  00070C  5161               	movf	OpenI2C@sync_mode& (0+255),w,b
  1067  00070E  12C6               	iorwf	4038,f,c	;volatile
  1068  000710  0100               	movlb	0	; () banked
  1069  000712  5160               	movf	OpenI2C@slew& (0+255),w,b
  1070  000714  12C7               	iorwf	4039,f,c	;volatile
  1071                           
  1072                           ; BSR set to: 0
  1073  000716  8293               	bsf	3987,1,c	;volatile
  1074                           
  1075                           ; BSR set to: 0
  1076  000718  8093               	bsf	3987,0,c	;volatile
  1077                           
  1078                           ; BSR set to: 0
  1079  00071A  8AC6               	bsf	4038,5,c	;volatile
  1080                           
  1081                           ; BSR set to: 0
  1082  00071C  0012               	return	
  1083  00071E                     __end_of_OpenI2C:
  1084                           	opt stack 0
  1085                           tblptru	equ	0xFF8
  1086                           tblptrh	equ	0xFF7
  1087                           tblptrl	equ	0xFF6
  1088                           tablat	equ	0xFF5
  1089                           intcon	equ	0xFF2
  1090                           postinc0	equ	0xFEE
  1091                           wreg	equ	0xFE8
  1092                           postdec1	equ	0xFE5
  1093                           fsr1l	equ	0xFE1
  1094                           
  1095 ;; *************** function _CloseI2C *****************
  1096 ;; Defined at:
  1097 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\i2c\i2c_clos.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;		None
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;		None
  1102 ;; Return value:  Size  Location     Type
  1103 ;;		None               void
  1104 ;; Registers used:
  1105 ;;		status,2, status,0
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1111 ;;      Params:         0       0       0       0       0       0       0       0       0
  1112 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1113 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1114 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1115 ;;Total ram usage:        0 bytes
  1116 ;; Hardware stack levels used:    1
  1117 ;; Hardware stack levels required when called:    6
  1118 ;; This function calls:
  1119 ;;		Nothing
  1120 ;; This function is called by:
  1121 ;;		_I2C_open
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           	psect	text7
  1126  000854                     __ptext7:
  1127                           	opt stack 0
  1128  000854                     _CloseI2C:
  1129                           	opt stack 22
  1130                           
  1131                           ; BSR set to: 0
  1132                           ;incstack = 0
  1133  000854  9AC6               	bcf	4038,5,c	;volatile
  1134  000856  0012               	return	
  1135  000858                     __end_of_CloseI2C:
  1136                           	opt stack 0
  1137                           tblptru	equ	0xFF8
  1138                           tblptrh	equ	0xFF7
  1139                           tblptrl	equ	0xFF6
  1140                           tablat	equ	0xFF5
  1141                           intcon	equ	0xFF2
  1142                           postinc0	equ	0xFEE
  1143                           wreg	equ	0xFE8
  1144                           postdec1	equ	0xFE5
  1145                           fsr1l	equ	0xFE1
  1146                           
  1147 ;; *************** function _init_ACC *****************
  1148 ;; Defined at:
  1149 ;;		line 264 in file "accmag.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;		None
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;		None
  1154 ;; Return value:  Size  Location     Type
  1155 ;;		None               void
  1156 ;; Registers used:
  1157 ;;		wreg, status,2, status,0, cstack
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1163 ;;      Params:         0       0       0       0       0       0       0       0       0
  1164 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1165 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1166 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1167 ;;Total ram usage:        0 bytes
  1168 ;; Hardware stack levels used:    1
  1169 ;; Hardware stack levels required when called:   11
  1170 ;; This function calls:
  1171 ;;		_I2C_turn_on_acc
  1172 ;; This function is called by:
  1173 ;;		_main
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           	psect	text8
  1178  0007B4                     __ptext8:
  1179                           	opt stack 0
  1180  0007B4                     _init_ACC:
  1181                           	opt stack 19
  1182                           
  1183                           ;accmag.c: 265: I2C_turn_on_acc(0b00100000,0b00011000,0b00110000,0b00000000);
  1184                           
  1185                           ;incstack = 0
  1186  0007B4  0E18               	movlw	24
  1187  0007B6  0100               	movlb	0	; () banked
  1188  0007B8  6F68               	movwf	I2C_turn_on_acc@data_rate& (0+255),b
  1189  0007BA  0E30               	movlw	48
  1190  0007BC  0100               	movlb	0	; () banked
  1191  0007BE  6F69               	movwf	I2C_turn_on_acc@full_scale& (0+255),b
  1192  0007C0  0E00               	movlw	0
  1193  0007C2  0100               	movlb	0	; () banked
  1194  0007C4  6F6A               	movwf	I2C_turn_on_acc@sleep_wakeup& (0+255),b
  1195  0007C6  0E20               	movlw	32
  1196  0007C8  EC74  F002         	call	_I2C_turn_on_acc
  1197  0007CC  0012               	return	
  1198  0007CE                     __end_of_init_ACC:
  1199                           	opt stack 0
  1200                           tblptru	equ	0xFF8
  1201                           tblptrh	equ	0xFF7
  1202                           tblptrl	equ	0xFF6
  1203                           tablat	equ	0xFF5
  1204                           intcon	equ	0xFF2
  1205                           postinc0	equ	0xFEE
  1206                           wreg	equ	0xFE8
  1207                           postdec1	equ	0xFE5
  1208                           fsr1l	equ	0xFE1
  1209                           
  1210 ;; *************** function _I2C_turn_on_acc *****************
  1211 ;; Defined at:
  1212 ;;		line 244 in file "accmag.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;  mode            1    wreg     unsigned char 
  1215 ;;  data_rate       1    8[BANK0 ] unsigned char 
  1216 ;;  full_scale      1    9[BANK0 ] unsigned char 
  1217 ;;  sleep_wakeup    1   10[BANK0 ] unsigned char 
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;  mode            1   11[BANK0 ] unsigned char 
  1220 ;; Return value:  Size  Location     Type
  1221 ;;		None               void
  1222 ;; Registers used:
  1223 ;;		wreg, status,2, status,0, cstack
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1229 ;;      Params:         0       3       0       0       0       0       0       0       0
  1230 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1231 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1232 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1233 ;;Total ram usage:        4 bytes
  1234 ;; Hardware stack levels used:    1
  1235 ;; Hardware stack levels required when called:   10
  1236 ;; This function calls:
  1237 ;;		_I2C_write_reg_acc
  1238 ;; This function is called by:
  1239 ;;		_init_ACC
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           	psect	text9
  1244  0004E8                     __ptext9:
  1245                           	opt stack 0
  1246  0004E8                     _I2C_turn_on_acc:
  1247                           	opt stack 19
  1248                           
  1249                           ;incstack = 0
  1250                           ;I2C_turn_on_acc@mode stored from wreg
  1251  0004E8  0100               	movlb	0	; () banked
  1252  0004EA  6F6B               	movwf	I2C_turn_on_acc@mode& (0+255),b
  1253                           
  1254                           ; BSR set to: 0
  1255                           ;accmag.c: 245: I2C_write_reg_acc(0x20,data_rate|mode|0x07);
  1256  0004EC  0100               	movlb	0	; () banked
  1257  0004EE  5168               	movf	I2C_turn_on_acc@data_rate& (0+255),w,b
  1258  0004F0  0100               	movlb	0	; () banked
  1259  0004F2  116B               	iorwf	I2C_turn_on_acc@mode& (0+255),w,b
  1260  0004F4  0907               	iorlw	7
  1261  0004F6  0100               	movlb	0	; () banked
  1262  0004F8  6F66               	movwf	I2C_write_reg_acc@valor& (0+255),b
  1263  0004FA  0E20               	movlw	32
  1264  0004FC  EC15  F003         	call	_I2C_write_reg_acc
  1265                           
  1266                           ;accmag.c: 247: I2C_write_reg_acc(0x21,0);
  1267  000500  0E00               	movlw	0
  1268  000502  0100               	movlb	0	; () banked
  1269  000504  6F66               	movwf	I2C_write_reg_acc@valor& (0+255),b
  1270  000506  0E21               	movlw	33
  1271  000508  EC15  F003         	call	_I2C_write_reg_acc
  1272                           
  1273                           ;accmag.c: 249: I2C_write_reg_acc(0x23,0b10000000|full_scale);
  1274  00050C  0100               	movlb	0	; () banked
  1275  00050E  5169               	movf	I2C_turn_on_acc@full_scale& (0+255),w,b
  1276  000510  0980               	iorlw	128
  1277  000512  0100               	movlb	0	; () banked
  1278  000514  6F66               	movwf	I2C_write_reg_acc@valor& (0+255),b
  1279  000516  0E23               	movlw	35
  1280  000518  EC15  F003         	call	_I2C_write_reg_acc
  1281                           
  1282                           ;accmag.c: 250: I2C_write_reg_acc(0x24,sleep_wakeup);
  1283  00051C  C06A  F066         	movff	I2C_turn_on_acc@sleep_wakeup,I2C_write_reg_acc@valor
  1284  000520  0E24               	movlw	36
  1285  000522  EC15  F003         	call	_I2C_write_reg_acc
  1286  000526  0012               	return	
  1287  000528                     __end_of_I2C_turn_on_acc:
  1288                           	opt stack 0
  1289                           tblptru	equ	0xFF8
  1290                           tblptrh	equ	0xFF7
  1291                           tblptrl	equ	0xFF6
  1292                           tablat	equ	0xFF5
  1293                           intcon	equ	0xFF2
  1294                           postinc0	equ	0xFEE
  1295                           wreg	equ	0xFE8
  1296                           postdec1	equ	0xFE5
  1297                           fsr1l	equ	0xFE1
  1298                           
  1299 ;; *************** function _I2C_write_reg_acc *****************
  1300 ;; Defined at:
  1301 ;;		line 9 in file "accmag.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;  reg             1    wreg     unsigned char 
  1304 ;;  valor           1    6[BANK0 ] unsigned char 
  1305 ;; Auto vars:     Size  Location     Type
  1306 ;;  reg             1    7[BANK0 ] unsigned char 
  1307 ;; Return value:  Size  Location     Type
  1308 ;;		None               void
  1309 ;; Registers used:
  1310 ;;		wreg, status,2, status,0, cstack
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1316 ;;      Params:         0       1       0       0       0       0       0       0       0
  1317 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1318 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1319 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1320 ;;Total ram usage:        2 bytes
  1321 ;; Hardware stack levels used:    1
  1322 ;; Hardware stack levels required when called:    9
  1323 ;; This function calls:
  1324 ;;		_I2C_send
  1325 ;;		_IdleI2C
  1326 ;; This function is called by:
  1327 ;;		_I2C_turn_on_acc
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           	psect	text10
  1332  00062A                     __ptext10:
  1333                           	opt stack 0
  1334  00062A                     _I2C_write_reg_acc:
  1335                           	opt stack 19
  1336                           
  1337                           ;incstack = 0
  1338                           ;I2C_write_reg_acc@reg stored from wreg
  1339  00062A  0100               	movlb	0	; () banked
  1340  00062C  6F67               	movwf	I2C_write_reg_acc@reg& (0+255),b
  1341                           
  1342                           ; BSR set to: 0
  1343                           ;accmag.c: 12: IdleI2C();
  1344  00062E  ECF1  F003         	call	_IdleI2C	;wreg free
  1345                           
  1346                           ;accmag.c: 14: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  1347  000632  80C5               	bsf	4037,0,c	;volatile
  1348  000634                     l263:
  1349  000634  B0C5               	btfsc	4037,0,c	;volatile
  1350  000636  D7FE               	goto	l263
  1351                           
  1352                           ;accmag.c: 18: I2C_send(0x30);
  1353  000638  0E30               	movlw	48
  1354  00063A  ECFE  F002         	call	_I2C_send
  1355                           
  1356                           ;accmag.c: 22: I2C_send(reg);
  1357  00063E  0100               	movlb	0	; () banked
  1358  000640  5167               	movf	I2C_write_reg_acc@reg& (0+255),w,b
  1359  000642  ECFE  F002         	call	_I2C_send
  1360                           
  1361                           ;accmag.c: 25: I2C_send(valor);
  1362  000646  0100               	movlb	0	; () banked
  1363  000648  5166               	movf	I2C_write_reg_acc@valor& (0+255),w,b
  1364  00064A  ECFE  F002         	call	_I2C_send
  1365                           
  1366                           ;accmag.c: 27: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  1367  00064E  84C5               	bsf	4037,2,c	;volatile
  1368  000650                     l266:
  1369  000650  A4C5               	btfss	4037,2,c	;volatile
  1370  000652  0012               	return	
  1371  000654  D7FD               	goto	l266
  1372  000656                     __end_of_I2C_write_reg_acc:
  1373                           	opt stack 0
  1374                           tblptru	equ	0xFF8
  1375                           tblptrh	equ	0xFF7
  1376                           tblptrl	equ	0xFF6
  1377                           tablat	equ	0xFF5
  1378                           intcon	equ	0xFF2
  1379                           postinc0	equ	0xFEE
  1380                           wreg	equ	0xFE8
  1381                           postdec1	equ	0xFE5
  1382                           fsr1l	equ	0xFE1
  1383                           
  1384 ;; *************** function _I2C_send *****************
  1385 ;; Defined at:
  1386 ;;		line 26 in file "i2cFunct.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;  reg             1    wreg     unsigned char 
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;  reg             1    4[BANK0 ] unsigned char 
  1391 ;;  status          1    5[BANK0 ] char 
  1392 ;;  data            1    3[BANK0 ] unsigned char 
  1393 ;; Return value:  Size  Location     Type
  1394 ;;		None               void
  1395 ;; Registers used:
  1396 ;;		wreg, status,2, status,0, cstack
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1402 ;;      Params:         0       0       0       0       0       0       0       0       0
  1403 ;;      Locals:         0       3       0       0       0       0       0       0       0
  1404 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1405 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1406 ;;Total ram usage:        3 bytes
  1407 ;; Hardware stack levels used:    1
  1408 ;; Hardware stack levels required when called:    8
  1409 ;; This function calls:
  1410 ;;		_IdleI2C
  1411 ;;		_WriteI2C
  1412 ;; This function is called by:
  1413 ;;		_I2C_write_reg_acc
  1414 ;;		_I2C_read_byte_gyro
  1415 ;;		_I2C_read_data_gyro
  1416 ;;		_I2C_write_reg_gyro
  1417 ;;		_I2C_read_byte_acc
  1418 ;;		_I2C_write_reg_mag
  1419 ;;		_I2C_read_byte_mag
  1420 ;;		_I2C_read_data_mag
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           	psect	text11
  1425  0005FC                     __ptext11:
  1426                           	opt stack 0
  1427  0005FC                     _I2C_send:
  1428                           	opt stack 19
  1429                           
  1430                           ;incstack = 0
  1431                           ;I2C_send@reg stored from wreg
  1432  0005FC  0100               	movlb	0	; () banked
  1433  0005FE  6F64               	movwf	I2C_send@reg& (0+255),b
  1434                           
  1435                           ; BSR set to: 0
  1436                           ;i2cFunct.c: 28: unsigned char data;
  1437                           ;i2cFunct.c: 29: signed char status;
  1438                           ;i2cFunct.c: 31: data = SSPBUF;
  1439  000600  CFC9 F063          	movff	4041,I2C_send@data	;volatile
  1440  000604                     l1942:
  1441                           
  1442                           ; BSR set to: 0
  1443                           ;i2cFunct.c: 33: {
  1444                           ;i2cFunct.c: 34: status = WriteI2C(reg);
  1445  000604  0100               	movlb	0	; () banked
  1446  000606  5164               	movf	I2C_send@reg& (0+255),w,b
  1447  000608  ECB9  F000         	call	_WriteI2C
  1448  00060C  0100               	movlb	0	; () banked
  1449  00060E  6F65               	movwf	I2C_send@status& (0+255),b
  1450                           
  1451                           ;i2cFunct.c: 35: IdleI2C();
  1452  000610  ECF1  F003         	call	_IdleI2C	;wreg free
  1453                           
  1454                           ;i2cFunct.c: 36: if (status == -1)
  1455  000614  0100               	movlb	0	; () banked
  1456  000616  2965               	incf	I2C_send@status& (0+255),w,b
  1457  000618  A4D8               	btfss	status,2,c
  1458  00061A  D003               	goto	l170
  1459                           
  1460                           ; BSR set to: 0
  1461                           ;i2cFunct.c: 37: {
  1462                           ;i2cFunct.c: 38: data = SSPBUF;
  1463  00061C  CFC9 F063          	movff	4041,I2C_send@data	;volatile
  1464                           
  1465                           ;i2cFunct.c: 39: SSPCON1bits.WCOL = 0;
  1466  000620  9EC6               	bcf	4038,7,c	;volatile
  1467  000622                     l170:
  1468                           
  1469                           ; BSR set to: 0
  1470                           ;i2cFunct.c: 40: }
  1471                           ;i2cFunct.c: 41: }
  1472                           ;i2cFunct.c: 42: while(status!=0);
  1473  000622  0100               	movlb	0	; () banked
  1474  000624  6765               	tstfsz	I2C_send@status& (0+255),b
  1475  000626  D7EE               	goto	l1942
  1476                           
  1477                           ; BSR set to: 0
  1478                           
  1479                           ; BSR set to: 0
  1480  000628  0012               	return	
  1481  00062A                     __end_of_I2C_send:
  1482                           	opt stack 0
  1483                           tblptru	equ	0xFF8
  1484                           tblptrh	equ	0xFF7
  1485                           tblptrl	equ	0xFF6
  1486                           tablat	equ	0xFF5
  1487                           intcon	equ	0xFF2
  1488                           postinc0	equ	0xFEE
  1489                           wreg	equ	0xFE8
  1490                           postdec1	equ	0xFE5
  1491                           fsr1l	equ	0xFE1
  1492                           status	equ	0xFD8
  1493                           
  1494 ;; *************** function _WriteI2C *****************
  1495 ;; Defined at:
  1496 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\i2c\i2c_writ.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;  data_out        1    wreg     unsigned char 
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;  data_out        1    2[BANK0 ] unsigned char 
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  1    wreg      char 
  1503 ;; Registers used:
  1504 ;;		wreg, status,2, status,0, cstack
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1510 ;;      Params:         0       0       0       0       0       0       0       0       0
  1511 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1512 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1513 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1514 ;;Total ram usage:        2 bytes
  1515 ;; Hardware stack levels used:    1
  1516 ;; Hardware stack levels required when called:    7
  1517 ;; This function calls:
  1518 ;;		_IdleI2C
  1519 ;; This function is called by:
  1520 ;;		_I2C_send
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           	psect	text12
  1525  000172                     __ptext12:
  1526                           	opt stack 0
  1527  000172                     _WriteI2C:
  1528                           	opt stack 19
  1529                           
  1530                           ; BSR set to: 0
  1531                           ;incstack = 0
  1532                           ;WriteI2C@data_out stored from wreg
  1533  000172  0100               	movlb	0	; () banked
  1534  000174  6F62               	movwf	WriteI2C@data_out& (0+255),b
  1535                           
  1536                           ; BSR set to: 0
  1537  000176  C062  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  1538                           
  1539                           ; BSR set to: 0
  1540  00017A  AEC6               	btfss	4038,7,c	;volatile
  1541  00017C  D002               	goto	l1904
  1542                           
  1543                           ; BSR set to: 0
  1544  00017E  0EFF               	movlw	255
  1545  000180  D038               	goto	l582
  1546  000182                     l1904:
  1547                           
  1548                           ; BSR set to: 0
  1549  000182  CFC6 F061          	movff	4038,??_WriteI2C	;volatile
  1550  000186  0E0F               	movlw	15
  1551  000188  0100               	movlb	0	; () banked
  1552  00018A  1761               	andwf	??_WriteI2C& (0+255),f,b
  1553  00018C  0100               	movlb	0	; () banked
  1554  00018E  5161               	movf	??_WriteI2C& (0+255),w,b
  1555  000190  0A08               	xorlw	8
  1556  000192  B4D8               	btfsc	status,2,c
  1557  000194  D011               	goto	l1922
  1558                           
  1559                           ; BSR set to: 0
  1560  000196  CFC6 F061          	movff	4038,??_WriteI2C	;volatile
  1561  00019A  0E0F               	movlw	15
  1562  00019C  0100               	movlb	0	; () banked
  1563  00019E  1761               	andwf	??_WriteI2C& (0+255),f,b
  1564  0001A0  0100               	movlb	0	; () banked
  1565  0001A2  5161               	movf	??_WriteI2C& (0+255),w,b
  1566  0001A4  0A0B               	xorlw	11
  1567  0001A6  B4D8               	btfsc	status,2,c
  1568  0001A8  D007               	goto	l1922
  1569                           
  1570                           ; BSR set to: 0
  1571  0001AA  88C6               	bsf	4038,4,c	;volatile
  1572  0001AC                     l585:
  1573                           
  1574                           ; BSR set to: 0
  1575  0001AC  A69E               	btfss	3998,3,c	;volatile
  1576  0001AE  D7FE               	goto	l585
  1577                           
  1578                           ; BSR set to: 0
  1579  0001B0  A4C7               	btfss	4039,2,c	;volatile
  1580                           
  1581                           ; BSR set to: 0
  1582  0001B2  B0C7               	btfsc	4039,0,c	;volatile
  1583  0001B4  D01D               	goto	l1936
  1584  0001B6  D01A               	goto	u1620
  1585  0001B8                     l1922:
  1586                           
  1587                           ; BSR set to: 0
  1588  0001B8  CFC6 F061          	movff	4038,??_WriteI2C	;volatile
  1589  0001BC  0E0F               	movlw	15
  1590  0001BE  0100               	movlb	0	; () banked
  1591  0001C0  1761               	andwf	??_WriteI2C& (0+255),f,b
  1592  0001C2  0100               	movlb	0	; () banked
  1593  0001C4  5161               	movf	??_WriteI2C& (0+255),w,b
  1594  0001C6  0A08               	xorlw	8
  1595  0001C8  B4D8               	btfsc	status,2,c
  1596  0001CA  D00A               	goto	l594
  1597                           
  1598                           ; BSR set to: 0
  1599  0001CC  CFC6 F061          	movff	4038,??_WriteI2C	;volatile
  1600  0001D0  0E0F               	movlw	15
  1601  0001D2  0100               	movlb	0	; () banked
  1602  0001D4  1761               	andwf	??_WriteI2C& (0+255),f,b
  1603  0001D6  0100               	movlb	0	; () banked
  1604  0001D8  5161               	movf	??_WriteI2C& (0+255),w,b
  1605  0001DA  0A0B               	xorlw	11
  1606  0001DC  A4D8               	btfss	status,2,c
  1607  0001DE  D009               	goto	l582
  1608  0001E0                     l594:
  1609                           
  1610                           ; BSR set to: 0
  1611  0001E0  B0C7               	btfsc	4039,0,c	;volatile
  1612  0001E2  D7FE               	goto	l594
  1613                           
  1614                           ; BSR set to: 0
  1615                           
  1616                           ; BSR set to: 0
  1617  0001E4  ECF1  F003         	call	_IdleI2C	;wreg free
  1618  0001E8  ACC5               	btfss	4037,6,c	;volatile
  1619  0001EA  D002               	goto	l1936
  1620  0001EC                     u1620:
  1621  0001EC  0EFE               	movlw	254
  1622  0001EE  D001               	goto	l582
  1623  0001F0                     l1936:
  1624  0001F0  0E00               	movlw	0
  1625  0001F2                     l582:
  1626  0001F2  0012               	return	
  1627  0001F4                     __end_of_WriteI2C:
  1628                           	opt stack 0
  1629                           tblptru	equ	0xFF8
  1630                           tblptrh	equ	0xFF7
  1631                           tblptrl	equ	0xFF6
  1632                           tablat	equ	0xFF5
  1633                           intcon	equ	0xFF2
  1634                           postinc0	equ	0xFEE
  1635                           wreg	equ	0xFE8
  1636                           postdec1	equ	0xFE5
  1637                           fsr1l	equ	0xFE1
  1638                           status	equ	0xFD8
  1639                           
  1640 ;; *************** function _IdleI2C *****************
  1641 ;; Defined at:
  1642 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\i2c\i2c_idle.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;		None
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;		None
  1647 ;; Return value:  Size  Location     Type
  1648 ;;		None               void
  1649 ;; Registers used:
  1650 ;;		wreg, status,2, status,0
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1656 ;;      Params:         0       0       0       0       0       0       0       0       0
  1657 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1658 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1659 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1660 ;;Total ram usage:        1 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; Hardware stack levels required when called:    6
  1663 ;; This function calls:
  1664 ;;		Nothing
  1665 ;; This function is called by:
  1666 ;;		_I2C_send
  1667 ;;		_I2C_write_reg_acc
  1668 ;;		_WriteI2C
  1669 ;;		_I2C_read_byte_gyro
  1670 ;;		_I2C_read_data_gyro
  1671 ;;		_I2C_write_reg_gyro
  1672 ;;		_I2C_read_byte_acc
  1673 ;;		_I2C_write_reg_mag
  1674 ;;		_I2C_read_byte_mag
  1675 ;;		_I2C_read_data_mag
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           	psect	text13
  1680  0007E2                     __ptext13:
  1681                           	opt stack 0
  1682  0007E2                     _IdleI2C:
  1683                           	opt stack 21
  1684  0007E2                     l1890:
  1685  0007E2  CFC5 F060          	movff	4037,??_IdleI2C	;volatile
  1686  0007E6  0E1F               	movlw	31
  1687  0007E8  0100               	movlb	0	; () banked
  1688  0007EA  1760               	andwf	??_IdleI2C& (0+255),f,b
  1689  0007EC  B4D8               	btfsc	status,2,c
  1690                           
  1691                           ; BSR set to: 0
  1692  0007EE  B4C7               	btfsc	4039,2,c	;volatile
  1693  0007F0  D7F8               	goto	l1890
  1694                           
  1695                           ; BSR set to: 0
  1696                           
  1697                           ; BSR set to: 0
  1698  0007F2  0012               	return	
  1699  0007F4                     __end_of_IdleI2C:
  1700                           	opt stack 0
  1701                           tblptru	equ	0xFF8
  1702                           tblptrh	equ	0xFF7
  1703                           tblptrl	equ	0xFF6
  1704                           tablat	equ	0xFF5
  1705                           intcon	equ	0xFF2
  1706                           postinc0	equ	0xFEE
  1707                           wreg	equ	0xFE8
  1708                           postdec1	equ	0xFE5
  1709                           fsr1l	equ	0xFE1
  1710                           status	equ	0xFD8
  1711                           
  1712 ;; *************** function _Interruption *****************
  1713 ;; Defined at:
  1714 ;;		line 70 in file "main.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;		None
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;		None
  1719 ;; Return value:  Size  Location     Type
  1720 ;;		None               void
  1721 ;; Registers used:
  1722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1728 ;;      Params:         0       0       0       0       0       0       0       0       0
  1729 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1730 ;;      Temps:         15       0       0       0       0       0       0       0       0
  1731 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1732 ;;Total ram usage:       15 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; Hardware stack levels required when called:    5
  1735 ;; This function calls:
  1736 ;;		_imprimir
  1737 ;;		_readData
  1738 ;;		_timer0_isr
  1739 ;;		_uart_isr
  1740 ;; This function is called by:
  1741 ;;		Interrupt level 2
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           	psect	intcode
  1746  000008                     __pintcode:
  1747                           	opt stack 0
  1748  000008                     _Interruption:
  1749                           	opt stack 19
  1750                           
  1751                           ; BSR set to: 0
  1752                           ;incstack = 0
  1753  000008  CFFA F01A          	movff	pclath,??_Interruption+1
  1754  00000C  CFFB F01B          	movff	pclatu,??_Interruption+2
  1755  000010  CFE9 F01C          	movff	fsr0l,??_Interruption+3
  1756  000014  ED0E  F000         	call	int_func,f	;refresh shadow registers
  1757                           pclatu	equ	0xFFB
  1758                           pclath	equ	0xFFA
  1759                           tblptru	equ	0xFF8
  1760                           tblptrh	equ	0xFF7
  1761                           tblptrl	equ	0xFF6
  1762                           tablat	equ	0xFF5
  1763                           intcon	equ	0xFF2
  1764                           postinc0	equ	0xFEE
  1765                           fsr0l	equ	0xFE9
  1766                           wreg	equ	0xFE8
  1767                           postdec1	equ	0xFE5
  1768                           fsr1l	equ	0xFE1
  1769                           status	equ	0xFD8
  1770                           
  1771                           	psect	intcode_body
  1772  00001C                     __pintcode_body:
  1773                           	opt stack 19
  1774  00001C                     int_func:
  1775                           	opt stack 19
  1776  00001C  0006               	pop		; remove dummy address from shadow register refresh
  1777  00001E  CFEA F01D          	movff	fsr0h,??_Interruption+4
  1778  000022  CFE1 F01E          	movff	fsr1l,??_Interruption+5
  1779  000026  CFE2 F01F          	movff	fsr1h,??_Interruption+6
  1780  00002A  CFD9 F020          	movff	fsr2l,??_Interruption+7
  1781  00002E  CFDA F021          	movff	fsr2h,??_Interruption+8
  1782  000032  CFF3 F022          	movff	prodl,??_Interruption+9
  1783  000036  CFF4 F023          	movff	prodh,??_Interruption+10
  1784  00003A  CFF6 F024          	movff	tblptrl,??_Interruption+11
  1785  00003E  CFF7 F025          	movff	tblptrh,??_Interruption+12
  1786  000042  CFF8 F026          	movff	tblptru,??_Interruption+13
  1787  000046  CFF5 F027          	movff	tablat,??_Interruption+14
  1788                           
  1789                           ;main.c: 72: if (INTCONbits.PEIE & PIR1bits.RCIF) {
  1790  00004A  0E01               	movlw	1
  1791  00004C  ACF2               	btfss	intcon,6,c	;volatile
  1792  00004E  0E00               	movlw	0
  1793  000050  AA9E               	btfss	3998,5,c	;volatile
  1794  000052  0E00               	movlw	0
  1795  000054  A0E8               	btfss	wreg,0,c
  1796  000056  D003               	goto	i2u147_40
  1797  000058  6A19               	clrf	??_Interruption& (0+255),c
  1798  00005A  2A19               	incf	??_Interruption& (0+255),f,c
  1799  00005C  D001               	goto	i2u147_48
  1800  00005E                     i2u147_40:
  1801  00005E  6A19               	clrf	??_Interruption& (0+255),c
  1802  000060                     i2u147_48:
  1803  000060  5019               	movf	??_Interruption,w,c
  1804  000062  B4D8               	btfsc	status,2,c
  1805  000064  D003               	goto	i2l1880
  1806                           
  1807                           ;main.c: 73: uart_isr();
  1808  000066  EC94  F002         	call	_uart_isr	;wreg free
  1809                           
  1810                           ;main.c: 74: } else {
  1811  00006A  D014               	goto	i2l64
  1812  00006C                     i2l1880:
  1813                           
  1814                           ;main.c: 75: if (INTCONbits.TMR0IE & INTCONbits.TMR0IF) {
  1815  00006C  0E01               	movlw	1
  1816  00006E  AAF2               	btfss	intcon,5,c	;volatile
  1817  000070  0E00               	movlw	0
  1818  000072  A4F2               	btfss	intcon,2,c	;volatile
  1819  000074  0E00               	movlw	0
  1820  000076  A0E8               	btfss	wreg,0,c
  1821  000078  D003               	goto	i2u149_40
  1822  00007A  6A19               	clrf	??_Interruption& (0+255),c
  1823  00007C  2A19               	incf	??_Interruption& (0+255),f,c
  1824  00007E  D001               	goto	i2u149_48
  1825  000080                     i2u149_40:
  1826  000080  6A19               	clrf	??_Interruption& (0+255),c
  1827  000082                     i2u149_48:
  1828  000082  5019               	movf	??_Interruption,w,c
  1829  000084  B4D8               	btfsc	status,2,c
  1830  000086  D006               	goto	i2l64
  1831                           
  1832                           ;main.c: 76: timer0_isr();
  1833  000088  EC0C  F004         	call	_timer0_isr	;wreg free
  1834                           
  1835                           ;main.c: 77: readData();
  1836  00008C  EC2B  F003         	call	_readData	;wreg free
  1837                           
  1838                           ;main.c: 78: imprimir();
  1839  000090  ECB2  F002         	call	_imprimir	;wreg free
  1840  000094                     i2l64:
  1841  000094  C027  FFF5         	movff	??_Interruption+14,tablat
  1842  000098  C026  FFF8         	movff	??_Interruption+13,tblptru
  1843  00009C  C025  FFF7         	movff	??_Interruption+12,tblptrh
  1844  0000A0  C024  FFF6         	movff	??_Interruption+11,tblptrl
  1845  0000A4  C023  FFF4         	movff	??_Interruption+10,prodh
  1846  0000A8  C022  FFF3         	movff	??_Interruption+9,prodl
  1847  0000AC  C021  FFDA         	movff	??_Interruption+8,fsr2h
  1848  0000B0  C020  FFD9         	movff	??_Interruption+7,fsr2l
  1849  0000B4  C01F  FFE2         	movff	??_Interruption+6,fsr1h
  1850  0000B8  C01E  FFE1         	movff	??_Interruption+5,fsr1l
  1851  0000BC  C01D  FFEA         	movff	??_Interruption+4,fsr0h
  1852  0000C0  C01C  FFE9         	movff	??_Interruption+3,fsr0l
  1853  0000C4  C01B  FFFB         	movff	??_Interruption+2,pclatu
  1854  0000C8  C01A  FFFA         	movff	??_Interruption+1,pclath
  1855  0000CC  0011               	retfie		f
  1856  0000CE                     __end_of_Interruption:
  1857                           	opt stack 0
  1858                           pclatu	equ	0xFFB
  1859                           pclath	equ	0xFFA
  1860                           tblptru	equ	0xFF8
  1861                           tblptrh	equ	0xFF7
  1862                           tblptrl	equ	0xFF6
  1863                           tablat	equ	0xFF5
  1864                           prodh	equ	0xFF4
  1865                           prodl	equ	0xFF3
  1866                           intcon	equ	0xFF2
  1867                           postinc0	equ	0xFEE
  1868                           fsr0h	equ	0xFEA
  1869                           fsr0l	equ	0xFE9
  1870                           wreg	equ	0xFE8
  1871                           postdec1	equ	0xFE5
  1872                           fsr1h	equ	0xFE2
  1873                           fsr1l	equ	0xFE1
  1874                           fsr2h	equ	0xFDA
  1875                           fsr2l	equ	0xFD9
  1876                           status	equ	0xFD8
  1877                           
  1878 ;; *************** function _uart_isr *****************
  1879 ;; Defined at:
  1880 ;;		line 15 in file "uartFunct.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;		None
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;		None
  1885 ;; Return value:  Size  Location     Type
  1886 ;;		None               void
  1887 ;; Registers used:
  1888 ;;		wreg, status,2, status,0, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1894 ;;      Params:         0       0       0       0       0       0       0       0       0
  1895 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1896 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1897 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1898 ;;Total ram usage:        1 bytes
  1899 ;; Hardware stack levels used:    1
  1900 ;; Hardware stack levels required when called:    2
  1901 ;; This function calls:
  1902 ;;		_ReadUSART
  1903 ;;		_WriteUSART
  1904 ;;		_endTimer
  1905 ;;		_startTimer
  1906 ;; This function is called by:
  1907 ;;		_Interruption
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911                           	psect	text15
  1912  000528                     __ptext15:
  1913                           	opt stack 0
  1914  000528                     _uart_isr:
  1915                           	opt stack 21
  1916                           
  1917                           ;uartFunct.c: 16: PIR1bits.RCIF=0;
  1918                           
  1919                           ;incstack = 0
  1920  000528  9A9E               	bcf	3998,5,c	;volatile
  1921                           
  1922                           ;uartFunct.c: 17: CaracterRx = ReadUSART();
  1923  00052A  ECB1  F003         	call	_ReadUSART	;wreg free
  1924  00052E  6E05               	movwf	??_uart_isr& (0+255),c
  1925  000530  5005               	movf	??_uart_isr,w,c
  1926  000532  6E28               	movwf	_CaracterRx,c
  1927  000534  6A29               	clrf	_CaracterRx+1,c
  1928                           
  1929                           ;uartFunct.c: 18: WriteUSART(CaracterRx);
  1930  000536  5028               	movf	_CaracterRx,w,c
  1931  000538  EC03  F004         	call	_WriteUSART
  1932  00053C                     i2l98:
  1933  00053C  A2AC               	btfss	4012,1,c	;volatile
  1934  00053E  D7FE               	goto	i2l98
  1935                           
  1936                           ;uartFunct.c: 20: if (CaracterRx == 83){
  1937  000540  5028               	movf	_CaracterRx,w,c
  1938  000542  0A53               	xorlw	83
  1939  000544  1029               	iorwf	_CaracterRx+1,w,c
  1940  000546  A4D8               	btfss	status,2,c
  1941  000548  D004               	goto	i2l1662
  1942                           
  1943                           ;uartFunct.c: 21: startTimer();
  1944  00054A  EC41  F003         	call	_startTimer	;wreg free
  1945                           
  1946                           ;uartFunct.c: 22: PORTCbits.RC1=~PORTCbits.RC1;;
  1947  00054E  7282               	btg	3970,1,c	;volatile
  1948                           
  1949                           ;uartFunct.c: 23: }else if(CaracterRx == 88){
  1950  000550  D008               	goto	i2l104
  1951  000552                     i2l1662:
  1952  000552  5028               	movf	_CaracterRx,w,c
  1953  000554  0A58               	xorlw	88
  1954  000556  1029               	iorwf	_CaracterRx+1,w,c
  1955  000558  A4D8               	btfss	status,2,c
  1956  00055A  D003               	goto	i2l104
  1957                           
  1958                           ;uartFunct.c: 24: endTimer();
  1959  00055C  EC24  F004         	call	_endTimer	;wreg free
  1960                           
  1961                           ;uartFunct.c: 25: PORTCbits.RC0=~PORTCbits.RC0;;
  1962  000560  7082               	btg	3970,0,c	;volatile
  1963  000562                     i2l104:
  1964  000562  0012               	return	
  1965  000564                     __end_of_uart_isr:
  1966                           	opt stack 0
  1967                           pclatu	equ	0xFFB
  1968                           pclath	equ	0xFFA
  1969                           tblptru	equ	0xFF8
  1970                           tblptrh	equ	0xFF7
  1971                           tblptrl	equ	0xFF6
  1972                           tablat	equ	0xFF5
  1973                           prodh	equ	0xFF4
  1974                           prodl	equ	0xFF3
  1975                           intcon	equ	0xFF2
  1976                           postinc0	equ	0xFEE
  1977                           fsr0h	equ	0xFEA
  1978                           fsr0l	equ	0xFE9
  1979                           wreg	equ	0xFE8
  1980                           postdec1	equ	0xFE5
  1981                           fsr1h	equ	0xFE2
  1982                           fsr1l	equ	0xFE1
  1983                           fsr2h	equ	0xFDA
  1984                           fsr2l	equ	0xFD9
  1985                           status	equ	0xFD8
  1986                           
  1987 ;; *************** function _startTimer *****************
  1988 ;; Defined at:
  1989 ;;		line 25 in file "readTime.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;		None
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;		None
  1994 ;; Return value:  Size  Location     Type
  1995 ;;		None               void
  1996 ;; Registers used:
  1997 ;;		wreg, status,2, status,0, cstack
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2003 ;;      Params:         0       0       0       0       0       0       0       0       0
  2004 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2005 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2006 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2007 ;;Total ram usage:        0 bytes
  2008 ;; Hardware stack levels used:    1
  2009 ;; Hardware stack levels required when called:    1
  2010 ;; This function calls:
  2011 ;;		_OpenTimer0
  2012 ;;		_WriteTimer0
  2013 ;; This function is called by:
  2014 ;;		_uart_isr
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           	psect	text16
  2019  000682                     __ptext16:
  2020                           	opt stack 0
  2021  000682                     _startTimer:
  2022                           	opt stack 21
  2023                           
  2024                           ;readTime.c: 26: segundos = 0;
  2025                           
  2026                           ;incstack = 0
  2027  000682  0E00               	movlw	0
  2028  000684  6E35               	movwf	_segundos+1,c
  2029  000686  0E00               	movlw	0
  2030  000688  6E34               	movwf	_segundos,c
  2031                           
  2032                           ;readTime.c: 27: milisegundos = 0;
  2033  00068A  0E00               	movlw	0
  2034  00068C  6E33               	movwf	_milisegundos+1,c
  2035  00068E  0E00               	movlw	0
  2036  000690  6E32               	movwf	_milisegundos,c
  2037                           
  2038                           ;readTime.c: 28: INTCONbits.GIE =1;
  2039  000692  8EF2               	bsf	intcon,7,c	;volatile
  2040                           
  2041                           ;readTime.c: 29: INTCONbits.PEIE = 1;
  2042  000694  8CF2               	bsf	intcon,6,c	;volatile
  2043                           
  2044                           ;readTime.c: 30: INTCONbits.TMR0IE = 1;
  2045  000696  8AF2               	bsf	intcon,5,c	;volatile
  2046                           
  2047                           ;readTime.c: 33: OpenTimer0(0b11111111&0b10111111&0b11011111&0b11111111);
  2048  000698  0E9F               	movlw	159
  2049  00069A  ECA1  F003         	call	_OpenTimer0
  2050                           
  2051                           ;readTime.c: 34: WriteTimer0(timer0);
  2052  00069E  C04A  F001         	movff	_timer0,WriteTimer0@timer0
  2053  0006A2  C04B  F002         	movff	_timer0+1,WriteTimer0@timer0+1
  2054  0006A6  ECFA  F003         	call	_WriteTimer0	;wreg free
  2055  0006AA  0012               	return	
  2056  0006AC                     __end_of_startTimer:
  2057                           	opt stack 0
  2058                           pclatu	equ	0xFFB
  2059                           pclath	equ	0xFFA
  2060                           tblptru	equ	0xFF8
  2061                           tblptrh	equ	0xFF7
  2062                           tblptrl	equ	0xFF6
  2063                           tablat	equ	0xFF5
  2064                           prodh	equ	0xFF4
  2065                           prodl	equ	0xFF3
  2066                           intcon	equ	0xFF2
  2067                           postinc0	equ	0xFEE
  2068                           fsr0h	equ	0xFEA
  2069                           fsr0l	equ	0xFE9
  2070                           wreg	equ	0xFE8
  2071                           postdec1	equ	0xFE5
  2072                           fsr1h	equ	0xFE2
  2073                           fsr1l	equ	0xFE1
  2074                           fsr2h	equ	0xFDA
  2075                           fsr2l	equ	0xFD9
  2076                           status	equ	0xFD8
  2077                           
  2078 ;; *************** function _OpenTimer0 *****************
  2079 ;; Defined at:
  2080 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0open.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;  config          1    wreg     unsigned char 
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;  config          1    0[COMRAM] unsigned char 
  2085 ;; Return value:  Size  Location     Type
  2086 ;;		None               void
  2087 ;; Registers used:
  2088 ;;		wreg, status,2, status,0
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2094 ;;      Params:         0       0       0       0       0       0       0       0       0
  2095 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2096 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2097 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2098 ;;Total ram usage:        1 bytes
  2099 ;; Hardware stack levels used:    1
  2100 ;; This function calls:
  2101 ;;		Nothing
  2102 ;; This function is called by:
  2103 ;;		_startTimer
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           	psect	text17
  2108  000742                     __ptext17:
  2109                           	opt stack 0
  2110  000742                     _OpenTimer0:
  2111                           	opt stack 21
  2112                           
  2113                           ;incstack = 0
  2114                           ;OpenTimer0@config stored from wreg
  2115  000742  6E01               	movwf	OpenTimer0@config,c
  2116  000744  5001               	movf	OpenTimer0@config,w,c
  2117  000746  0B7F               	andlw	127
  2118  000748  6ED5               	movwf	4053,c	;volatile
  2119  00074A  0E00               	movlw	0
  2120  00074C  6ED7               	movwf	4055,c	;volatile
  2121  00074E  0E00               	movlw	0
  2122  000750  6ED6               	movwf	4054,c	;volatile
  2123  000752  94F2               	bcf	intcon,2,c	;volatile
  2124  000754  AE01               	btfss	OpenTimer0@config,7,c
  2125  000756  D002               	goto	i2l413
  2126  000758  8AF2               	bsf	intcon,5,c	;volatile
  2127  00075A  D001               	goto	i2l414
  2128  00075C                     i2l413:
  2129  00075C  9AF2               	bcf	intcon,5,c	;volatile
  2130  00075E                     i2l414:
  2131  00075E  8ED5               	bsf	4053,7,c	;volatile
  2132  000760  0012               	return	
  2133  000762                     __end_of_OpenTimer0:
  2134                           	opt stack 0
  2135                           pclatu	equ	0xFFB
  2136                           pclath	equ	0xFFA
  2137                           tblptru	equ	0xFF8
  2138                           tblptrh	equ	0xFF7
  2139                           tblptrl	equ	0xFF6
  2140                           tablat	equ	0xFF5
  2141                           prodh	equ	0xFF4
  2142                           prodl	equ	0xFF3
  2143                           intcon	equ	0xFF2
  2144                           postinc0	equ	0xFEE
  2145                           fsr0h	equ	0xFEA
  2146                           fsr0l	equ	0xFE9
  2147                           wreg	equ	0xFE8
  2148                           postdec1	equ	0xFE5
  2149                           fsr1h	equ	0xFE2
  2150                           fsr1l	equ	0xFE1
  2151                           fsr2h	equ	0xFDA
  2152                           fsr2l	equ	0xFD9
  2153                           status	equ	0xFD8
  2154                           
  2155 ;; *************** function _endTimer *****************
  2156 ;; Defined at:
  2157 ;;		line 40 in file "readTime.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;		None
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;		None
  2162 ;; Return value:  Size  Location     Type
  2163 ;;		None               void
  2164 ;; Registers used:
  2165 ;;		cstack
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2171 ;;      Params:         0       0       0       0       0       0       0       0       0
  2172 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2173 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2174 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2175 ;;Total ram usage:        0 bytes
  2176 ;; Hardware stack levels used:    1
  2177 ;; Hardware stack levels required when called:    1
  2178 ;; This function calls:
  2179 ;;		_CloseTimer0
  2180 ;; This function is called by:
  2181 ;;		_uart_isr
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           	psect	text18
  2186  000848                     __ptext18:
  2187                           	opt stack 0
  2188  000848                     _endTimer:
  2189                           	opt stack 21
  2190                           
  2191                           ;readTime.c: 41: CloseTimer0();
  2192                           
  2193                           ;incstack = 0
  2194  000848  EC27  F004         	call	_CloseTimer0	;wreg free
  2195  00084C  0012               	return	
  2196  00084E                     __end_of_endTimer:
  2197                           	opt stack 0
  2198                           pclatu	equ	0xFFB
  2199                           pclath	equ	0xFFA
  2200                           tblptru	equ	0xFF8
  2201                           tblptrh	equ	0xFF7
  2202                           tblptrl	equ	0xFF6
  2203                           tablat	equ	0xFF5
  2204                           prodh	equ	0xFF4
  2205                           prodl	equ	0xFF3
  2206                           intcon	equ	0xFF2
  2207                           postinc0	equ	0xFEE
  2208                           fsr0h	equ	0xFEA
  2209                           fsr0l	equ	0xFE9
  2210                           wreg	equ	0xFE8
  2211                           postdec1	equ	0xFE5
  2212                           fsr1h	equ	0xFE2
  2213                           fsr1l	equ	0xFE1
  2214                           fsr2h	equ	0xFDA
  2215                           fsr2l	equ	0xFD9
  2216                           status	equ	0xFD8
  2217                           
  2218 ;; *************** function _CloseTimer0 *****************
  2219 ;; Defined at:
  2220 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0close.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;		None
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;		None
  2225 ;; Return value:  Size  Location     Type
  2226 ;;		None               void
  2227 ;; Registers used:
  2228 ;;		None
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2234 ;;      Params:         0       0       0       0       0       0       0       0       0
  2235 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2236 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2237 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2238 ;;Total ram usage:        0 bytes
  2239 ;; Hardware stack levels used:    1
  2240 ;; This function calls:
  2241 ;;		Nothing
  2242 ;; This function is called by:
  2243 ;;		_endTimer
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           	psect	text19
  2248  00084E                     __ptext19:
  2249                           	opt stack 0
  2250  00084E                     _CloseTimer0:
  2251                           	opt stack 21
  2252                           
  2253                           ;incstack = 0
  2254  00084E  9ED5               	bcf	4053,7,c	;volatile
  2255  000850  9AF2               	bcf	intcon,5,c	;volatile
  2256  000852  0012               	return	
  2257  000854                     __end_of_CloseTimer0:
  2258                           	opt stack 0
  2259                           pclatu	equ	0xFFB
  2260                           pclath	equ	0xFFA
  2261                           tblptru	equ	0xFF8
  2262                           tblptrh	equ	0xFF7
  2263                           tblptrl	equ	0xFF6
  2264                           tablat	equ	0xFF5
  2265                           prodh	equ	0xFF4
  2266                           prodl	equ	0xFF3
  2267                           intcon	equ	0xFF2
  2268                           postinc0	equ	0xFEE
  2269                           fsr0h	equ	0xFEA
  2270                           fsr0l	equ	0xFE9
  2271                           wreg	equ	0xFE8
  2272                           postdec1	equ	0xFE5
  2273                           fsr1h	equ	0xFE2
  2274                           fsr1l	equ	0xFE1
  2275                           fsr2h	equ	0xFDA
  2276                           fsr2l	equ	0xFD9
  2277                           status	equ	0xFD8
  2278                           
  2279 ;; *************** function _ReadUSART *****************
  2280 ;; Defined at:
  2281 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uread.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;		None
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;  data            1    0[COMRAM] unsigned char 
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      unsigned char 
  2288 ;; Registers used:
  2289 ;;		wreg, status,2, status,0
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2295 ;;      Params:         0       0       0       0       0       0       0       0       0
  2296 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2297 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2298 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2299 ;;Total ram usage:        1 bytes
  2300 ;; Hardware stack levels used:    1
  2301 ;; This function calls:
  2302 ;;		Nothing
  2303 ;; This function is called by:
  2304 ;;		_uart_isr
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           	psect	text20
  2309  000762                     __ptext20:
  2310                           	opt stack 0
  2311  000762                     _ReadUSART:
  2312                           	opt stack 22
  2313                           
  2314                           ;incstack = 0
  2315  000762  0EF2               	movlw	242
  2316  000764  1636               	andwf	_USART_Status,f,c
  2317  000766  ACAB               	btfss	4011,6,c	;volatile
  2318  000768  D003               	goto	i2l481
  2319  00076A  9036               	bcf	_USART_Status,0,c
  2320  00076C  B0AB               	btfsc	4011,0,c	;volatile
  2321  00076E  8036               	bsf	_USART_Status,0,c
  2322  000770                     i2l481:
  2323  000770  B4AB               	btfsc	4011,2,c	;volatile
  2324  000772  8436               	bsf	_USART_Status,2,c
  2325  000774  B2AB               	btfsc	4011,1,c	;volatile
  2326  000776  8636               	bsf	_USART_Status,3,c
  2327  000778  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  2328  00077C  5001               	movf	ReadUSART@data,w,c
  2329  00077E  0012               	return	
  2330  000780                     __end_of_ReadUSART:
  2331                           	opt stack 0
  2332                           pclatu	equ	0xFFB
  2333                           pclath	equ	0xFFA
  2334                           tblptru	equ	0xFF8
  2335                           tblptrh	equ	0xFF7
  2336                           tblptrl	equ	0xFF6
  2337                           tablat	equ	0xFF5
  2338                           prodh	equ	0xFF4
  2339                           prodl	equ	0xFF3
  2340                           intcon	equ	0xFF2
  2341                           postinc0	equ	0xFEE
  2342                           fsr0h	equ	0xFEA
  2343                           fsr0l	equ	0xFE9
  2344                           wreg	equ	0xFE8
  2345                           postdec1	equ	0xFE5
  2346                           fsr1h	equ	0xFE2
  2347                           fsr1l	equ	0xFE1
  2348                           fsr2h	equ	0xFDA
  2349                           fsr2l	equ	0xFD9
  2350                           status	equ	0xFD8
  2351                           
  2352 ;; *************** function _timer0_isr *****************
  2353 ;; Defined at:
  2354 ;;		line 12 in file "readTime.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;		None
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;		None
  2359 ;; Return value:  Size  Location     Type
  2360 ;;		None               void
  2361 ;; Registers used:
  2362 ;;		cstack
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2368 ;;      Params:         0       0       0       0       0       0       0       0       0
  2369 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2370 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2371 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2372 ;;Total ram usage:        0 bytes
  2373 ;; Hardware stack levels used:    1
  2374 ;; Hardware stack levels required when called:    1
  2375 ;; This function calls:
  2376 ;;		_WriteTimer0
  2377 ;; This function is called by:
  2378 ;;		_Interruption
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           	psect	text21
  2383  000818                     __ptext21:
  2384                           	opt stack 0
  2385  000818                     _timer0_isr:
  2386                           	opt stack 22
  2387                           
  2388                           ;readTime.c: 13: INTCONbits.TMR0IF = 0;
  2389                           
  2390                           ;incstack = 0
  2391  000818  94F2               	bcf	intcon,2,c	;volatile
  2392                           
  2393                           ;readTime.c: 14: WriteTimer0(timer0);
  2394  00081A  C04A  F001         	movff	_timer0,WriteTimer0@timer0
  2395  00081E  C04B  F002         	movff	_timer0+1,WriteTimer0@timer0+1
  2396  000822  ECFA  F003         	call	_WriteTimer0	;wreg free
  2397                           
  2398                           ;readTime.c: 15: return;
  2399  000826  0012               	return	
  2400  000828                     __end_of_timer0_isr:
  2401                           	opt stack 0
  2402                           pclatu	equ	0xFFB
  2403                           pclath	equ	0xFFA
  2404                           tblptru	equ	0xFF8
  2405                           tblptrh	equ	0xFF7
  2406                           tblptrl	equ	0xFF6
  2407                           tablat	equ	0xFF5
  2408                           prodh	equ	0xFF4
  2409                           prodl	equ	0xFF3
  2410                           intcon	equ	0xFF2
  2411                           postinc0	equ	0xFEE
  2412                           fsr0h	equ	0xFEA
  2413                           fsr0l	equ	0xFE9
  2414                           wreg	equ	0xFE8
  2415                           postdec1	equ	0xFE5
  2416                           fsr1h	equ	0xFE2
  2417                           fsr1l	equ	0xFE1
  2418                           fsr2h	equ	0xFDA
  2419                           fsr2l	equ	0xFD9
  2420                           status	equ	0xFD8
  2421                           
  2422 ;; *************** function _WriteTimer0 *****************
  2423 ;; Defined at:
  2424 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0write.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;  timer0          2    0[COMRAM] unsigned int 
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;  timer           2    2[COMRAM] struct Timers
  2429 ;; Return value:  Size  Location     Type
  2430 ;;		None               void
  2431 ;; Registers used:
  2432 ;;		None
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2438 ;;      Params:         2       0       0       0       0       0       0       0       0
  2439 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2440 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2441 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2442 ;;Total ram usage:        4 bytes
  2443 ;; Hardware stack levels used:    1
  2444 ;; This function calls:
  2445 ;;		Nothing
  2446 ;; This function is called by:
  2447 ;;		_timer0_isr
  2448 ;;		_startTimer
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452                           	psect	text22
  2453  0007F4                     __ptext22:
  2454                           	opt stack 0
  2455  0007F4                     _WriteTimer0:
  2456                           	opt stack 21
  2457                           
  2458                           ;incstack = 0
  2459  0007F4  C001  F003         	movff	WriteTimer0@timer0,WriteTimer0@timer
  2460  0007F8  C002  F004         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  2461  0007FC  C004  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  2462  000800  C003  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  2463  000804  0012               	return	
  2464  000806                     __end_of_WriteTimer0:
  2465                           	opt stack 0
  2466                           pclatu	equ	0xFFB
  2467                           pclath	equ	0xFFA
  2468                           tblptru	equ	0xFF8
  2469                           tblptrh	equ	0xFF7
  2470                           tblptrl	equ	0xFF6
  2471                           tablat	equ	0xFF5
  2472                           prodh	equ	0xFF4
  2473                           prodl	equ	0xFF3
  2474                           intcon	equ	0xFF2
  2475                           postinc0	equ	0xFEE
  2476                           fsr0h	equ	0xFEA
  2477                           fsr0l	equ	0xFE9
  2478                           wreg	equ	0xFE8
  2479                           postdec1	equ	0xFE5
  2480                           fsr1h	equ	0xFE2
  2481                           fsr1l	equ	0xFE1
  2482                           fsr2h	equ	0xFDA
  2483                           fsr2l	equ	0xFD9
  2484                           status	equ	0xFD8
  2485                           
  2486 ;; *************** function _readData *****************
  2487 ;; Defined at:
  2488 ;;		line 20 in file "main.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;		None
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;		None
  2493 ;; Return value:  Size  Location     Type
  2494 ;;		None               void
  2495 ;; Registers used:
  2496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2502 ;;      Params:         0       0       0       0       0       0       0       0       0
  2503 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2504 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2505 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2506 ;;Total ram usage:        0 bytes
  2507 ;; Hardware stack levels used:    1
  2508 ;; Hardware stack levels required when called:    4
  2509 ;; This function calls:
  2510 ;;		_I2C_read_data_acc
  2511 ;; This function is called by:
  2512 ;;		_Interruption
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           	psect	text23
  2517  000656                     __ptext23:
  2518                           	opt stack 0
  2519  000656                     _readData:
  2520                           	opt stack 19
  2521                           
  2522                           ;main.c: 21: I2C_read_data_acc(0x28, &acc_x);
  2523                           
  2524                           ;incstack = 0
  2525  000656  0E00               	movlw	high _acc_x
  2526  000658  6E08               	movwf	I2C_read_data_acc@rdptr+1,c
  2527  00065A  0E42               	movlw	low _acc_x
  2528  00065C  6E07               	movwf	I2C_read_data_acc@rdptr,c
  2529  00065E  0E28               	movlw	40
  2530  000660  ECFA  F000         	call	_I2C_read_data_acc
  2531                           
  2532                           ;main.c: 22: I2C_read_data_acc(0x2A, &acc_y);
  2533  000664  0E00               	movlw	high _acc_y
  2534  000666  6E08               	movwf	I2C_read_data_acc@rdptr+1,c
  2535  000668  0E44               	movlw	low _acc_y
  2536  00066A  6E07               	movwf	I2C_read_data_acc@rdptr,c
  2537  00066C  0E2A               	movlw	42
  2538  00066E  ECFA  F000         	call	_I2C_read_data_acc
  2539                           
  2540                           ;main.c: 23: I2C_read_data_acc(0x2C, &acc_z);
  2541  000672  0E00               	movlw	high _acc_z
  2542  000674  6E08               	movwf	I2C_read_data_acc@rdptr+1,c
  2543  000676  0E46               	movlw	low _acc_z
  2544  000678  6E07               	movwf	I2C_read_data_acc@rdptr,c
  2545  00067A  0E2C               	movlw	44
  2546  00067C  ECFA  F000         	call	_I2C_read_data_acc
  2547  000680  0012               	return	
  2548  000682                     __end_of_readData:
  2549                           	opt stack 0
  2550                           pclatu	equ	0xFFB
  2551                           pclath	equ	0xFFA
  2552                           tblptru	equ	0xFF8
  2553                           tblptrh	equ	0xFF7
  2554                           tblptrl	equ	0xFF6
  2555                           tablat	equ	0xFF5
  2556                           prodh	equ	0xFF4
  2557                           prodl	equ	0xFF3
  2558                           intcon	equ	0xFF2
  2559                           postinc0	equ	0xFEE
  2560                           fsr0h	equ	0xFEA
  2561                           fsr0l	equ	0xFE9
  2562                           wreg	equ	0xFE8
  2563                           postdec1	equ	0xFE5
  2564                           fsr1h	equ	0xFE2
  2565                           fsr1l	equ	0xFE1
  2566                           fsr2h	equ	0xFDA
  2567                           fsr2l	equ	0xFD9
  2568                           status	equ	0xFD8
  2569                           
  2570 ;; *************** function _I2C_read_data_acc *****************
  2571 ;; Defined at:
  2572 ;;		line 76 in file "accmag.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;  reg             1    wreg     unsigned char 
  2575 ;;  rdptr           2    6[COMRAM] PTR unsigned char 
  2576 ;;		 -> acc_z(2), acc_y(2), acc_x(2), 
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;  reg             1    8[COMRAM] unsigned char 
  2579 ;; Return value:  Size  Location     Type
  2580 ;;		None               void
  2581 ;; Registers used:
  2582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2588 ;;      Params:         2       0       0       0       0       0       0       0       0
  2589 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2590 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2591 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2592 ;;Total ram usage:        3 bytes
  2593 ;; Hardware stack levels used:    1
  2594 ;; Hardware stack levels required when called:    3
  2595 ;; This function calls:
  2596 ;;		_data_acc
  2597 ;;		_getsI2C
  2598 ;;		i2_I2C_send
  2599 ;;		i2_IdleI2C
  2600 ;; This function is called by:
  2601 ;;		_readData
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           	psect	text24
  2606  0001F4                     __ptext24:
  2607                           	opt stack 0
  2608  0001F4                     _I2C_read_data_acc:
  2609                           	opt stack 19
  2610                           
  2611                           ;incstack = 0
  2612                           ;I2C_read_data_acc@reg stored from wreg
  2613  0001F4  6E09               	movwf	I2C_read_data_acc@reg,c
  2614                           
  2615                           ;accmag.c: 79: IdleI2C();
  2616  0001F6  EC14  F004         	call	i2_IdleI2C	;wreg free
  2617                           
  2618                           ;accmag.c: 80: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  2619  0001FA  80C5               	bsf	4037,0,c	;volatile
  2620  0001FC                     i2l293:
  2621  0001FC  B0C5               	btfsc	4037,0,c	;volatile
  2622  0001FE  D7FE               	goto	i2l293
  2623                           
  2624                           ;accmag.c: 83: I2C_send(0x30);
  2625  000200  0E30               	movlw	48
  2626  000202  EC8F  F003         	call	i2_I2C_send
  2627                           
  2628                           ;accmag.c: 86: reg = reg|0b10000000;
  2629  000206  5009               	movf	I2C_read_data_acc@reg,w,c
  2630  000208  0980               	iorlw	128
  2631  00020A  6E09               	movwf	I2C_read_data_acc@reg,c
  2632                           
  2633                           ;accmag.c: 87: I2C_send(reg);
  2634  00020C  5009               	movf	I2C_read_data_acc@reg,w,c
  2635  00020E  EC8F  F003         	call	i2_I2C_send
  2636                           
  2637                           ;accmag.c: 90: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  2638  000212  82C5               	bsf	4037,1,c	;volatile
  2639  000214                     i2l296:
  2640  000214  B2C5               	btfsc	4037,1,c	;volatile
  2641  000216  D7FE               	goto	i2l296
  2642                           
  2643                           ;accmag.c: 93: I2C_send(0x31);
  2644  000218  0E31               	movlw	49
  2645  00021A  EC8F  F003         	call	i2_I2C_send
  2646  00021E                     i2l1868:
  2647  00021E  C008  F003         	movff	I2C_read_data_acc@rdptr+1,getsI2C@rdptr+1
  2648  000222  C007  F002         	movff	I2C_read_data_acc@rdptr,getsI2C@rdptr
  2649  000226  0E01               	movlw	1
  2650  000228  6E04               	movwf	getsI2C@length,c
  2651  00022A  ECB3  F001         	call	_getsI2C	;wreg free
  2652  00022E  0900               	iorlw	0
  2653  000230  A4D8               	btfss	status,2,c
  2654  000232  D7F5               	goto	i2l1868
  2655                           
  2656                           ;accmag.c: 98: SSPCON2bits.ACKDT=0;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  2657  000234  9AC5               	bcf	4037,5,c	;volatile
  2658  000236  88C5               	bsf	4037,4,c	;volatile
  2659  000238                     i2l302:
  2660  000238  B8C5               	btfsc	4037,4,c	;volatile
  2661  00023A  D7FE               	goto	i2l302
  2662  00023C                     i2l1870:
  2663  00023C  0E01               	movlw	1
  2664  00023E  2407               	addwf	I2C_read_data_acc@rdptr,w,c
  2665  000240  6E02               	movwf	getsI2C@rdptr,c
  2666  000242  0E00               	movlw	0
  2667  000244  2008               	addwfc	I2C_read_data_acc@rdptr+1,w,c
  2668  000246  6E03               	movwf	getsI2C@rdptr+1,c
  2669  000248  0E01               	movlw	1
  2670  00024A  6E04               	movwf	getsI2C@length,c
  2671  00024C  ECB3  F001         	call	_getsI2C	;wreg free
  2672  000250  0900               	iorlw	0
  2673  000252  A4D8               	btfss	status,2,c
  2674  000254  D7F3               	goto	i2l1870
  2675                           
  2676                           ;accmag.c: 103: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  2677  000256  8AC5               	bsf	4037,5,c	;volatile
  2678  000258  88C5               	bsf	4037,4,c	;volatile
  2679  00025A                     i2l308:
  2680  00025A  B8C5               	btfsc	4037,4,c	;volatile
  2681  00025C  D7FE               	goto	i2l308
  2682  00025E                     i2l311:
  2683  00025E  B8C5               	btfsc	4037,4,c	;volatile
  2684  000260  D7FE               	goto	i2l311
  2685                           
  2686                           ;accmag.c: 106: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  2687  000262  84C5               	bsf	4037,2,c	;volatile
  2688  000264                     i2l314:
  2689  000264  B4C5               	btfsc	4037,2,c	;volatile
  2690  000266  D7FE               	goto	i2l314
  2691                           
  2692                           ;accmag.c: 107: data_acc(rdptr);
  2693  000268  C008  F002         	movff	I2C_read_data_acc@rdptr+1,data_acc@ptr+1
  2694  00026C  C007  F001         	movff	I2C_read_data_acc@rdptr,data_acc@ptr
  2695  000270  ECE6  F002         	call	_data_acc	;wreg free
  2696  000274  0012               	return	
  2697  000276                     __end_of_I2C_read_data_acc:
  2698                           	opt stack 0
  2699                           pclatu	equ	0xFFB
  2700                           pclath	equ	0xFFA
  2701                           tblptru	equ	0xFF8
  2702                           tblptrh	equ	0xFF7
  2703                           tblptrl	equ	0xFF6
  2704                           tablat	equ	0xFF5
  2705                           prodh	equ	0xFF4
  2706                           prodl	equ	0xFF3
  2707                           intcon	equ	0xFF2
  2708                           postinc0	equ	0xFEE
  2709                           fsr0h	equ	0xFEA
  2710                           fsr0l	equ	0xFE9
  2711                           wreg	equ	0xFE8
  2712                           postdec1	equ	0xFE5
  2713                           fsr1h	equ	0xFE2
  2714                           fsr1l	equ	0xFE1
  2715                           fsr2h	equ	0xFDA
  2716                           fsr2l	equ	0xFD9
  2717                           status	equ	0xFD8
  2718                           
  2719 ;; *************** function i2_I2C_send *****************
  2720 ;; Defined at:
  2721 ;;		line 26 in file "i2cFunct.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;  reg             1    wreg     unsigned char 
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;  reg             1    4[COMRAM] unsigned char 
  2726 ;;  I2C_send        1    5[COMRAM] char 
  2727 ;;  I2C_send        1    3[COMRAM] unsigned char 
  2728 ;; Return value:  Size  Location     Type
  2729 ;;		None               void
  2730 ;; Registers used:
  2731 ;;		wreg, status,2, status,0, cstack
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2737 ;;      Params:         0       0       0       0       0       0       0       0       0
  2738 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2739 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2740 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2741 ;;Total ram usage:        3 bytes
  2742 ;; Hardware stack levels used:    1
  2743 ;; Hardware stack levels required when called:    2
  2744 ;; This function calls:
  2745 ;;		i2_IdleI2C
  2746 ;;		i2_WriteI2C
  2747 ;; This function is called by:
  2748 ;;		_I2C_read_data_acc
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           	psect	text25
  2753  00071E                     __ptext25:
  2754                           	opt stack 0
  2755  00071E                     i2_I2C_send:
  2756                           	opt stack 19
  2757                           
  2758                           ;incstack = 0
  2759                           ;i2I2C_send@reg stored from wreg
  2760  00071E  6E05               	movwf	i2I2C_send@reg,c
  2761                           
  2762                           ;i2cFunct.c: 28: unsigned char data;
  2763                           ;i2cFunct.c: 29: signed char status;
  2764                           ;i2cFunct.c: 31: data = SSPBUF;
  2765  000720  CFC9 F004          	movff	4041,i2I2C_send@data	;volatile
  2766  000724                     i2l1848:
  2767                           
  2768                           ;i2cFunct.c: 33: {
  2769                           ;i2cFunct.c: 34: status = WriteI2C(reg);
  2770  000724  5005               	movf	i2I2C_send@reg,w,c
  2771  000726  EC7B  F001         	call	i2_WriteI2C
  2772  00072A  6E06               	movwf	i2I2C_send@status,c
  2773                           
  2774                           ;i2cFunct.c: 35: IdleI2C();
  2775  00072C  EC14  F004         	call	i2_IdleI2C	;wreg free
  2776                           
  2777                           ;i2cFunct.c: 36: if (status == -1)
  2778  000730  2806               	incf	i2I2C_send@status,w,c
  2779  000732  A4D8               	btfss	status,2,c
  2780  000734  D003               	goto	i2l170
  2781                           
  2782                           ;i2cFunct.c: 37: {
  2783                           ;i2cFunct.c: 38: data = SSPBUF;
  2784  000736  CFC9 F004          	movff	4041,i2I2C_send@data	;volatile
  2785                           
  2786                           ;i2cFunct.c: 39: SSPCON1bits.WCOL = 0;
  2787  00073A  9EC6               	bcf	4038,7,c	;volatile
  2788  00073C                     i2l170:
  2789                           
  2790                           ;i2cFunct.c: 40: }
  2791                           ;i2cFunct.c: 41: }
  2792                           ;i2cFunct.c: 42: while(status!=0);
  2793  00073C  6606               	tstfsz	i2I2C_send@status,c
  2794  00073E  D7F2               	goto	i2l1848
  2795  000740  0012               	return	
  2796  000742                     __end_ofi2_I2C_send:
  2797                           	opt stack 0
  2798                           pclatu	equ	0xFFB
  2799                           pclath	equ	0xFFA
  2800                           tblptru	equ	0xFF8
  2801                           tblptrh	equ	0xFF7
  2802                           tblptrl	equ	0xFF6
  2803                           tablat	equ	0xFF5
  2804                           prodh	equ	0xFF4
  2805                           prodl	equ	0xFF3
  2806                           intcon	equ	0xFF2
  2807                           postinc0	equ	0xFEE
  2808                           fsr0h	equ	0xFEA
  2809                           fsr0l	equ	0xFE9
  2810                           wreg	equ	0xFE8
  2811                           postdec1	equ	0xFE5
  2812                           fsr1h	equ	0xFE2
  2813                           fsr1l	equ	0xFE1
  2814                           fsr2h	equ	0xFDA
  2815                           fsr2l	equ	0xFD9
  2816                           status	equ	0xFD8
  2817                           
  2818 ;; *************** function i2_WriteI2C *****************
  2819 ;; Defined at:
  2820 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\i2c\i2c_writ.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  data_out        1    wreg     unsigned char 
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;  data_out        1    2[COMRAM] unsigned char 
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  1    wreg      char 
  2827 ;; Registers used:
  2828 ;;		wreg, status,2, status,0, cstack
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2834 ;;      Params:         0       0       0       0       0       0       0       0       0
  2835 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2836 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2837 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2838 ;;Total ram usage:        2 bytes
  2839 ;; Hardware stack levels used:    1
  2840 ;; Hardware stack levels required when called:    1
  2841 ;; This function calls:
  2842 ;;		i2_IdleI2C
  2843 ;; This function is called by:
  2844 ;;		i2_I2C_send
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           	psect	text26
  2849  0002F6                     __ptext26:
  2850                           	opt stack 0
  2851  0002F6                     i2_WriteI2C:
  2852                           	opt stack 19
  2853                           
  2854                           ;incstack = 0
  2855                           ;i2WriteI2C@data_out stored from wreg
  2856  0002F6  6E03               	movwf	i2WriteI2C@data_out,c
  2857  0002F8  C003  FFC9         	movff	i2WriteI2C@data_out,4041	;volatile
  2858  0002FC  AEC6               	btfss	4038,7,c	;volatile
  2859  0002FE  D002               	goto	i2l1810
  2860  000300  0EFF               	movlw	255
  2861  000302  D030               	goto	i2l582
  2862  000304                     i2l1810:
  2863  000304  CFC6 F002          	movff	4038,??i2_WriteI2C	;volatile
  2864  000308  0E0F               	movlw	15
  2865  00030A  1602               	andwf	??i2_WriteI2C,f,c
  2866  00030C  5002               	movf	??i2_WriteI2C,w,c
  2867  00030E  0A08               	xorlw	8
  2868  000310  B4D8               	btfsc	status,2,c
  2869  000312  D00F               	goto	i2l1828
  2870  000314  CFC6 F002          	movff	4038,??i2_WriteI2C	;volatile
  2871  000318  0E0F               	movlw	15
  2872  00031A  1602               	andwf	??i2_WriteI2C,f,c
  2873  00031C  5002               	movf	??i2_WriteI2C,w,c
  2874  00031E  0A0B               	xorlw	11
  2875  000320  B4D8               	btfsc	status,2,c
  2876  000322  D007               	goto	i2l1828
  2877  000324  88C6               	bsf	4038,4,c	;volatile
  2878  000326                     i2l585:
  2879  000326  A69E               	btfss	3998,3,c	;volatile
  2880  000328  D7FE               	goto	i2l585
  2881  00032A  A4C7               	btfss	4039,2,c	;volatile
  2882  00032C  B0C7               	btfsc	4039,0,c	;volatile
  2883  00032E  D019               	goto	i2l1842
  2884  000330  D016               	goto	i2u136_40
  2885  000332                     i2l1828:
  2886  000332  CFC6 F002          	movff	4038,??i2_WriteI2C	;volatile
  2887  000336  0E0F               	movlw	15
  2888  000338  1602               	andwf	??i2_WriteI2C,f,c
  2889  00033A  5002               	movf	??i2_WriteI2C,w,c
  2890  00033C  0A08               	xorlw	8
  2891  00033E  B4D8               	btfsc	status,2,c
  2892  000340  D008               	goto	i2l594
  2893  000342  CFC6 F002          	movff	4038,??i2_WriteI2C	;volatile
  2894  000346  0E0F               	movlw	15
  2895  000348  1602               	andwf	??i2_WriteI2C,f,c
  2896  00034A  5002               	movf	??i2_WriteI2C,w,c
  2897  00034C  0A0B               	xorlw	11
  2898  00034E  A4D8               	btfss	status,2,c
  2899  000350  D009               	goto	i2l582
  2900  000352                     i2l594:
  2901  000352  B0C7               	btfsc	4039,0,c	;volatile
  2902  000354  D7FE               	goto	i2l594
  2903  000356  EC14  F004         	call	i2_IdleI2C	;wreg free
  2904  00035A  ACC5               	btfss	4037,6,c	;volatile
  2905  00035C  D002               	goto	i2l1842
  2906  00035E                     i2u136_40:
  2907  00035E  0EFE               	movlw	254
  2908  000360  D001               	goto	i2l582
  2909  000362                     i2l1842:
  2910  000362  0E00               	movlw	0
  2911  000364                     i2l582:
  2912  000364  0012               	return	
  2913  000366                     __end_ofi2_WriteI2C:
  2914                           	opt stack 0
  2915                           pclatu	equ	0xFFB
  2916                           pclath	equ	0xFFA
  2917                           tblptru	equ	0xFF8
  2918                           tblptrh	equ	0xFF7
  2919                           tblptrl	equ	0xFF6
  2920                           tablat	equ	0xFF5
  2921                           prodh	equ	0xFF4
  2922                           prodl	equ	0xFF3
  2923                           intcon	equ	0xFF2
  2924                           postinc0	equ	0xFEE
  2925                           fsr0h	equ	0xFEA
  2926                           fsr0l	equ	0xFE9
  2927                           wreg	equ	0xFE8
  2928                           postdec1	equ	0xFE5
  2929                           fsr1h	equ	0xFE2
  2930                           fsr1l	equ	0xFE1
  2931                           fsr2h	equ	0xFDA
  2932                           fsr2l	equ	0xFD9
  2933                           status	equ	0xFD8
  2934                           
  2935 ;; *************** function i2_IdleI2C *****************
  2936 ;; Defined at:
  2937 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\i2c\i2c_idle.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;		None
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;		None
  2942 ;; Return value:  Size  Location     Type
  2943 ;;		None               void
  2944 ;; Registers used:
  2945 ;;		wreg, status,2, status,0
  2946 ;; Tracked objects:
  2947 ;;		On entry : 0/0
  2948 ;;		On exit  : 0/0
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2951 ;;      Params:         0       0       0       0       0       0       0       0       0
  2952 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2953 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2954 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2955 ;;Total ram usage:        1 bytes
  2956 ;; Hardware stack levels used:    1
  2957 ;; This function calls:
  2958 ;;		Nothing
  2959 ;; This function is called by:
  2960 ;;		_I2C_read_data_acc
  2961 ;;		i2_I2C_send
  2962 ;;		i2_WriteI2C
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966                           	psect	text27
  2967  000828                     __ptext27:
  2968                           	opt stack 0
  2969  000828                     i2_IdleI2C:
  2970                           	opt stack 21
  2971  000828                     i2l1796:
  2972  000828  CFC5 F001          	movff	4037,??i2_IdleI2C	;volatile
  2973  00082C  0E1F               	movlw	31
  2974  00082E  1601               	andwf	??i2_IdleI2C,f,c
  2975  000830  B4D8               	btfsc	status,2,c
  2976  000832  B4C7               	btfsc	4039,2,c	;volatile
  2977  000834  D7F9               	goto	i2l1796
  2978  000836  0012               	return	
  2979  000838                     __end_ofi2_IdleI2C:
  2980                           	opt stack 0
  2981                           pclatu	equ	0xFFB
  2982                           pclath	equ	0xFFA
  2983                           tblptru	equ	0xFF8
  2984                           tblptrh	equ	0xFF7
  2985                           tblptrl	equ	0xFF6
  2986                           tablat	equ	0xFF5
  2987                           prodh	equ	0xFF4
  2988                           prodl	equ	0xFF3
  2989                           intcon	equ	0xFF2
  2990                           postinc0	equ	0xFEE
  2991                           fsr0h	equ	0xFEA
  2992                           fsr0l	equ	0xFE9
  2993                           wreg	equ	0xFE8
  2994                           postdec1	equ	0xFE5
  2995                           fsr1h	equ	0xFE2
  2996                           fsr1l	equ	0xFE1
  2997                           fsr2h	equ	0xFDA
  2998                           fsr2l	equ	0xFD9
  2999                           status	equ	0xFD8
  3000                           
  3001 ;; *************** function _getsI2C *****************
  3002 ;; Defined at:
  3003 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\i2c\i2c_gets.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;  rdptr           2    1[COMRAM] PTR unsigned char 
  3006 ;;		 -> acc_z(2), acc_y(2), acc_x(2), 
  3007 ;;  length          1    3[COMRAM] unsigned char 
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;		None
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  1    wreg      char 
  3012 ;; Registers used:
  3013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3019 ;;      Params:         3       0       0       0       0       0       0       0       0
  3020 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3021 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3022 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3023 ;;Total ram usage:        4 bytes
  3024 ;; Hardware stack levels used:    1
  3025 ;; Hardware stack levels required when called:    1
  3026 ;; This function calls:
  3027 ;;		_ReadI2C
  3028 ;; This function is called by:
  3029 ;;		_I2C_read_data_acc
  3030 ;;		_I2C_read_byte_gyro
  3031 ;;		_I2C_read_data_gyro
  3032 ;;		_I2C_read_byte_acc
  3033 ;;		_I2C_read_byte_mag
  3034 ;;		_I2C_read_data_mag
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           	psect	text28
  3039  000366                     __ptext28:
  3040                           	opt stack 0
  3041  000366                     _getsI2C:
  3042                           	opt stack 20
  3043                           
  3044                           ;incstack = 0
  3045  000366  D026               	goto	i2l1420
  3046  000368                     i2l1404:
  3047  000368  EC56  F003         	call	_ReadI2C	;wreg free
  3048  00036C  C002  FFD9         	movff	getsI2C@rdptr,fsr2l
  3049  000370  C003  FFDA         	movff	getsI2C@rdptr+1,fsr2h
  3050  000374  6EDF               	movwf	indf2,c
  3051  000376  4A02               	infsnz	getsI2C@rdptr,f,c
  3052  000378  2A03               	incf	getsI2C@rdptr+1,f,c
  3053  00037A                     i2l514:
  3054  00037A  B6C5               	btfsc	4037,3,c	;volatile
  3055  00037C  D7FE               	goto	i2l514
  3056  00037E  A6A1               	btfss	4001,3,c	;volatile
  3057  000380  D002               	goto	i2l1412
  3058  000382  0EFF               	movlw	255
  3059  000384  D01C               	goto	i2l518
  3060  000386                     i2l1412:
  3061  000386  CFC6 F005          	movff	4038,??_getsI2C	;volatile
  3062  00038A  0E0F               	movlw	15
  3063  00038C  1605               	andwf	??_getsI2C,f,c
  3064  00038E  5005               	movf	??_getsI2C,w,c
  3065  000390  0A08               	xorlw	8
  3066  000392  B4D8               	btfsc	status,2,c
  3067  000394  D008               	goto	i2l1416
  3068  000396  CFC6 F005          	movff	4038,??_getsI2C	;volatile
  3069  00039A  0E0F               	movlw	15
  3070  00039C  1605               	andwf	??_getsI2C,f,c
  3071  00039E  5005               	movf	??_getsI2C,w,c
  3072  0003A0  0A0B               	xorlw	11
  3073  0003A2  A4D8               	btfss	status,2,c
  3074  0003A4  D007               	goto	i2l1420
  3075  0003A6                     i2l1416:
  3076  0003A6  5004               	movf	getsI2C@length,w,c
  3077  0003A8  B4D8               	btfsc	status,2,c
  3078  0003AA  D004               	goto	i2l1420
  3079  0003AC  9AC5               	bcf	4037,5,c	;volatile
  3080  0003AE  88C5               	bsf	4037,4,c	;volatile
  3081  0003B0                     i2l523:
  3082  0003B0  B8C5               	btfsc	4037,4,c	;volatile
  3083  0003B2  D7FE               	goto	i2l523
  3084  0003B4                     i2l1420:
  3085  0003B4  0604               	decf	getsI2C@length,f,c
  3086  0003B6  2804               	incf	getsI2C@length& (0+255),w,c
  3087  0003B8  A4D8               	btfss	status,2,c
  3088  0003BA  D7D6               	goto	i2l1404
  3089  0003BC  0E00               	movlw	0
  3090  0003BE                     i2l518:
  3091  0003BE  0012               	return	
  3092  0003C0                     __end_of_getsI2C:
  3093                           	opt stack 0
  3094                           pclatu	equ	0xFFB
  3095                           pclath	equ	0xFFA
  3096                           tblptru	equ	0xFF8
  3097                           tblptrh	equ	0xFF7
  3098                           tblptrl	equ	0xFF6
  3099                           tablat	equ	0xFF5
  3100                           prodh	equ	0xFF4
  3101                           prodl	equ	0xFF3
  3102                           intcon	equ	0xFF2
  3103                           postinc0	equ	0xFEE
  3104                           fsr0h	equ	0xFEA
  3105                           fsr0l	equ	0xFE9
  3106                           wreg	equ	0xFE8
  3107                           postdec1	equ	0xFE5
  3108                           fsr1h	equ	0xFE2
  3109                           fsr1l	equ	0xFE1
  3110                           indf2	equ	0xFDF
  3111                           fsr2h	equ	0xFDA
  3112                           fsr2l	equ	0xFD9
  3113                           status	equ	0xFD8
  3114                           
  3115 ;; *************** function _ReadI2C *****************
  3116 ;; Defined at:
  3117 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\i2c\i2c_read.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;		None
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;		None
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  1    wreg      unsigned char 
  3124 ;; Registers used:
  3125 ;;		wreg, status,2, status,0
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3131 ;;      Params:         0       0       0       0       0       0       0       0       0
  3132 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3133 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3134 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3135 ;;Total ram usage:        1 bytes
  3136 ;; Hardware stack levels used:    1
  3137 ;; This function calls:
  3138 ;;		Nothing
  3139 ;; This function is called by:
  3140 ;;		_getsI2C
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           	psect	text29
  3145  0006AC                     __ptext29:
  3146                           	opt stack 0
  3147  0006AC                     _ReadI2C:
  3148                           	opt stack 20
  3149                           
  3150                           ;incstack = 0
  3151  0006AC  CFC6 F001          	movff	4038,??_ReadI2C	;volatile
  3152  0006B0  0E0F               	movlw	15
  3153  0006B2  1601               	andwf	??_ReadI2C,f,c
  3154  0006B4  5001               	movf	??_ReadI2C,w,c
  3155  0006B6  0A08               	xorlw	8
  3156  0006B8  B4D8               	btfsc	status,2,c
  3157  0006BA  D007               	goto	i2l560
  3158  0006BC  CFC6 F001          	movff	4038,??_ReadI2C	;volatile
  3159  0006C0  0E0F               	movlw	15
  3160  0006C2  1601               	andwf	??_ReadI2C,f,c
  3161  0006C4  5001               	movf	??_ReadI2C,w,c
  3162  0006C6  0A0B               	xorlw	11
  3163  0006C8  B4D8               	btfsc	status,2,c
  3164  0006CA                     i2l560:
  3165  0006CA  86C5               	bsf	4037,3,c	;volatile
  3166  0006CC                     i2l561:
  3167  0006CC  A0C7               	btfss	4039,0,c	;volatile
  3168  0006CE  D7FE               	goto	i2l561
  3169  0006D0  50C9               	movf	4041,w,c	;volatile
  3170  0006D2  0012               	return	
  3171  0006D4                     __end_of_ReadI2C:
  3172                           	opt stack 0
  3173                           pclatu	equ	0xFFB
  3174                           pclath	equ	0xFFA
  3175                           tblptru	equ	0xFF8
  3176                           tblptrh	equ	0xFF7
  3177                           tblptrl	equ	0xFF6
  3178                           tablat	equ	0xFF5
  3179                           prodh	equ	0xFF4
  3180                           prodl	equ	0xFF3
  3181                           intcon	equ	0xFF2
  3182                           postinc0	equ	0xFEE
  3183                           fsr0h	equ	0xFEA
  3184                           fsr0l	equ	0xFE9
  3185                           wreg	equ	0xFE8
  3186                           postdec1	equ	0xFE5
  3187                           fsr1h	equ	0xFE2
  3188                           fsr1l	equ	0xFE1
  3189                           indf2	equ	0xFDF
  3190                           fsr2h	equ	0xFDA
  3191                           fsr2l	equ	0xFD9
  3192                           status	equ	0xFD8
  3193                           
  3194 ;; *************** function _data_acc *****************
  3195 ;; Defined at:
  3196 ;;		line 115 in file "accmag.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;  ptr             2    0[COMRAM] PTR int 
  3199 ;;		 -> acc_z(2), acc_y(2), acc_x(2), 
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;		None
  3202 ;; Return value:  Size  Location     Type
  3203 ;;		None               void
  3204 ;; Registers used:
  3205 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3211 ;;      Params:         2       0       0       0       0       0       0       0       0
  3212 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3213 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3214 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3215 ;;Total ram usage:        5 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; This function calls:
  3218 ;;		Nothing
  3219 ;; This function is called by:
  3220 ;;		_I2C_read_data_acc
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224                           	psect	text30
  3225  0005CC                     __ptext30:
  3226                           	opt stack 0
  3227  0005CC                     _data_acc:
  3228                           	opt stack 21
  3229                           
  3230                           ;accmag.c: 116: *ptr = *ptr >> 4;
  3231                           
  3232                           ;incstack = 0
  3233  0005CC  C001  FFD9         	movff	data_acc@ptr,fsr2l
  3234  0005D0  C002  FFDA         	movff	data_acc@ptr+1,fsr2h
  3235  0005D4  CFDE F003          	movff	postinc2,??_data_acc
  3236  0005D8  CFDD F004          	movff	postdec2,??_data_acc+1
  3237  0005DC  0E04               	movlw	4
  3238  0005DE  6E05               	movwf	(??_data_acc+2)& (0+255),c
  3239  0005E0                     i2u48_45:
  3240  0005E0  3404               	rlcf	??_data_acc+1,w,c
  3241  0005E2  3204               	rrcf	??_data_acc+1,f,c
  3242  0005E4  3203               	rrcf	??_data_acc,f,c
  3243  0005E6  2E05               	decfsz	(??_data_acc+2)& (0+255),f,c
  3244  0005E8  D7FB               	goto	i2u48_45
  3245  0005EA  C001  FFD9         	movff	data_acc@ptr,fsr2l
  3246  0005EE  C002  FFDA         	movff	data_acc@ptr+1,fsr2h
  3247  0005F2  C003  FFDE         	movff	??_data_acc,postinc2
  3248  0005F6  C004  FFDD         	movff	??_data_acc+1,postdec2
  3249  0005FA  0012               	return	
  3250  0005FC                     __end_of_data_acc:
  3251                           	opt stack 0
  3252                           pclatu	equ	0xFFB
  3253                           pclath	equ	0xFFA
  3254                           tblptru	equ	0xFF8
  3255                           tblptrh	equ	0xFF7
  3256                           tblptrl	equ	0xFF6
  3257                           tablat	equ	0xFF5
  3258                           prodh	equ	0xFF4
  3259                           prodl	equ	0xFF3
  3260                           intcon	equ	0xFF2
  3261                           postinc0	equ	0xFEE
  3262                           fsr0h	equ	0xFEA
  3263                           fsr0l	equ	0xFE9
  3264                           wreg	equ	0xFE8
  3265                           postdec1	equ	0xFE5
  3266                           fsr1h	equ	0xFE2
  3267                           fsr1l	equ	0xFE1
  3268                           indf2	equ	0xFDF
  3269                           postinc2	equ	0xFDE
  3270                           postdec2	equ	0xFDD
  3271                           fsr2h	equ	0xFDA
  3272                           fsr2l	equ	0xFD9
  3273                           status	equ	0xFD8
  3274                           
  3275 ;; *************** function _imprimir *****************
  3276 ;; Defined at:
  3277 ;;		line 46 in file "main.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;		None
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;		None
  3282 ;; Return value:  Size  Location     Type
  3283 ;;		None               void
  3284 ;; Registers used:
  3285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3291 ;;      Params:         0       0       0       0       0       0       0       0       0
  3292 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3293 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3294 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3295 ;;Total ram usage:        0 bytes
  3296 ;; Hardware stack levels used:    1
  3297 ;; Hardware stack levels required when called:    3
  3298 ;; This function calls:
  3299 ;;		_itoa
  3300 ;;		_putsUSART
  3301 ;; This function is called by:
  3302 ;;		_Interruption
  3303 ;; This function uses a non-reentrant model
  3304 ;;
  3305                           
  3306                           	psect	text31
  3307  000564                     __ptext31:
  3308                           	opt stack 0
  3309  000564                     _imprimir:
  3310                           	opt stack 20
  3311                           
  3312                           ;main.c: 50: itoa(buf, acc_x, 10);
  3313                           
  3314                           ;incstack = 0
  3315  000564  0E00               	movlw	high _buf
  3316  000566  6E12               	movwf	itoa@buf+1,c
  3317  000568  0E38               	movlw	low _buf
  3318  00056A  6E11               	movwf	itoa@buf,c
  3319  00056C  C042  F013         	movff	_acc_x,itoa@val
  3320  000570  C043  F014         	movff	_acc_x+1,itoa@val+1
  3321  000574  0E00               	movlw	0
  3322  000576  6E16               	movwf	itoa@base+1,c
  3323  000578  0E0A               	movlw	10
  3324  00057A  6E15               	movwf	itoa@base,c
  3325  00057C  ECE0  F001         	call	_itoa	;wreg free
  3326                           
  3327                           ;main.c: 66: putsUSART(&buf);
  3328  000580  0E00               	movlw	high _buf
  3329  000582  6E03               	movwf	putsUSART@data+1,c
  3330  000584  0E38               	movlw	low _buf
  3331  000586  6E02               	movwf	putsUSART@data,c
  3332  000588  EC6A  F003         	call	_putsUSART	;wreg free
  3333                           
  3334                           ;main.c: 67: putsUSART(&enter);
  3335  00058C  0E00               	movlw	high _enter
  3336  00058E  6E03               	movwf	putsUSART@data+1,c
  3337  000590  0E4C               	movlw	low _enter
  3338  000592  6E02               	movwf	putsUSART@data,c
  3339  000594  EC6A  F003         	call	_putsUSART	;wreg free
  3340  000598  0012               	return	
  3341  00059A                     __end_of_imprimir:
  3342                           	opt stack 0
  3343                           pclatu	equ	0xFFB
  3344                           pclath	equ	0xFFA
  3345                           tblptru	equ	0xFF8
  3346                           tblptrh	equ	0xFF7
  3347                           tblptrl	equ	0xFF6
  3348                           tablat	equ	0xFF5
  3349                           prodh	equ	0xFF4
  3350                           prodl	equ	0xFF3
  3351                           intcon	equ	0xFF2
  3352                           postinc0	equ	0xFEE
  3353                           fsr0h	equ	0xFEA
  3354                           fsr0l	equ	0xFE9
  3355                           wreg	equ	0xFE8
  3356                           postdec1	equ	0xFE5
  3357                           fsr1h	equ	0xFE2
  3358                           fsr1l	equ	0xFE1
  3359                           indf2	equ	0xFDF
  3360                           postinc2	equ	0xFDE
  3361                           postdec2	equ	0xFDD
  3362                           fsr2h	equ	0xFDA
  3363                           fsr2l	equ	0xFD9
  3364                           status	equ	0xFD8
  3365                           
  3366 ;; *************** function _putsUSART *****************
  3367 ;; Defined at:
  3368 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uputs.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;  data            2    1[COMRAM] PTR unsigned char 
  3371 ;;		 -> enter(2), buf(10), 
  3372 ;; Auto vars:     Size  Location     Type
  3373 ;;		None
  3374 ;; Return value:  Size  Location     Type
  3375 ;;		None               void
  3376 ;; Registers used:
  3377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3378 ;; Tracked objects:
  3379 ;;		On entry : 0/0
  3380 ;;		On exit  : 0/0
  3381 ;;		Unchanged: 0/0
  3382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3383 ;;      Params:         2       0       0       0       0       0       0       0       0
  3384 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3385 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3386 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3387 ;;Total ram usage:        2 bytes
  3388 ;; Hardware stack levels used:    1
  3389 ;; Hardware stack levels required when called:    1
  3390 ;; This function calls:
  3391 ;;		_WriteUSART
  3392 ;; This function is called by:
  3393 ;;		_imprimir
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397                           	psect	text32
  3398  0006D4                     __ptext32:
  3399                           	opt stack 0
  3400  0006D4                     _putsUSART:
  3401                           	opt stack 21
  3402  0006D4                     i2l468:
  3403  0006D4  A2AC               	btfss	4012,1,c	;volatile
  3404  0006D6  D7FE               	goto	i2l468
  3405  0006D8  C002  FFD9         	movff	putsUSART@data,fsr2l
  3406  0006DC  C003  FFDA         	movff	putsUSART@data+1,fsr2h
  3407  0006E0  50DF               	movf	indf2,w,c
  3408  0006E2  EC03  F004         	call	_WriteUSART
  3409  0006E6  C002  FFD9         	movff	putsUSART@data,fsr2l
  3410  0006EA  C003  FFDA         	movff	putsUSART@data+1,fsr2h
  3411  0006EE  4A02               	infsnz	putsUSART@data,f,c
  3412  0006F0  2A03               	incf	putsUSART@data+1,f,c
  3413  0006F2  50DF               	movf	indf2,w,c
  3414  0006F4  B4D8               	btfsc	status,2,c
  3415  0006F6  0012               	return	
  3416  0006F8  D7ED               	goto	i2l468
  3417  0006FA                     __end_of_putsUSART:
  3418                           	opt stack 0
  3419                           pclatu	equ	0xFFB
  3420                           pclath	equ	0xFFA
  3421                           tblptru	equ	0xFF8
  3422                           tblptrh	equ	0xFF7
  3423                           tblptrl	equ	0xFF6
  3424                           tablat	equ	0xFF5
  3425                           prodh	equ	0xFF4
  3426                           prodl	equ	0xFF3
  3427                           intcon	equ	0xFF2
  3428                           postinc0	equ	0xFEE
  3429                           fsr0h	equ	0xFEA
  3430                           fsr0l	equ	0xFE9
  3431                           wreg	equ	0xFE8
  3432                           postdec1	equ	0xFE5
  3433                           fsr1h	equ	0xFE2
  3434                           fsr1l	equ	0xFE1
  3435                           indf2	equ	0xFDF
  3436                           postinc2	equ	0xFDE
  3437                           postdec2	equ	0xFDD
  3438                           fsr2h	equ	0xFDA
  3439                           fsr2l	equ	0xFD9
  3440                           status	equ	0xFD8
  3441                           
  3442 ;; *************** function _WriteUSART *****************
  3443 ;; Defined at:
  3444 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uwrite.c"
  3445 ;; Parameters:    Size  Location     Type
  3446 ;;  data            1    wreg     unsigned char 
  3447 ;; Auto vars:     Size  Location     Type
  3448 ;;  data            1    0[COMRAM] unsigned char 
  3449 ;; Return value:  Size  Location     Type
  3450 ;;		None               void
  3451 ;; Registers used:
  3452 ;;		wreg
  3453 ;; Tracked objects:
  3454 ;;		On entry : 0/0
  3455 ;;		On exit  : 0/0
  3456 ;;		Unchanged: 0/0
  3457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3458 ;;      Params:         0       0       0       0       0       0       0       0       0
  3459 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3460 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3461 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3462 ;;Total ram usage:        1 bytes
  3463 ;; Hardware stack levels used:    1
  3464 ;; This function calls:
  3465 ;;		Nothing
  3466 ;; This function is called by:
  3467 ;;		_uart_isr
  3468 ;;		_putsUSART
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           	psect	text33
  3473  000806                     __ptext33:
  3474                           	opt stack 0
  3475  000806                     _WriteUSART:
  3476                           	opt stack 22
  3477                           
  3478                           ;incstack = 0
  3479                           ;WriteUSART@data stored from wreg
  3480  000806  6E01               	movwf	WriteUSART@data,c
  3481  000808  ACAC               	btfss	4012,6,c	;volatile
  3482  00080A  D003               	goto	i2l1370
  3483  00080C  90AC               	bcf	4012,0,c	;volatile
  3484  00080E  B236               	btfsc	_USART_Status,1,c
  3485  000810  80AC               	bsf	4012,0,c	;volatile
  3486  000812                     i2l1370:
  3487  000812  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
  3488  000816  0012               	return	
  3489  000818                     __end_of_WriteUSART:
  3490                           	opt stack 0
  3491                           pclatu	equ	0xFFB
  3492                           pclath	equ	0xFFA
  3493                           tblptru	equ	0xFF8
  3494                           tblptrh	equ	0xFF7
  3495                           tblptrl	equ	0xFF6
  3496                           tablat	equ	0xFF5
  3497                           prodh	equ	0xFF4
  3498                           prodl	equ	0xFF3
  3499                           intcon	equ	0xFF2
  3500                           postinc0	equ	0xFEE
  3501                           fsr0h	equ	0xFEA
  3502                           fsr0l	equ	0xFE9
  3503                           wreg	equ	0xFE8
  3504                           postdec1	equ	0xFE5
  3505                           fsr1h	equ	0xFE2
  3506                           fsr1l	equ	0xFE1
  3507                           indf2	equ	0xFDF
  3508                           postinc2	equ	0xFDE
  3509                           postdec2	equ	0xFDD
  3510                           fsr2h	equ	0xFDA
  3511                           fsr2l	equ	0xFD9
  3512                           status	equ	0xFD8
  3513                           
  3514 ;; *************** function _itoa *****************
  3515 ;; Defined at:
  3516 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\itoa.c"
  3517 ;; Parameters:    Size  Location     Type
  3518 ;;  buf             2   16[COMRAM] PTR unsigned char 
  3519 ;;		 -> buf(10), 
  3520 ;;  val             2   18[COMRAM] int 
  3521 ;;  base            2   20[COMRAM] int 
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;  cp              2   22[COMRAM] PTR unsigned char 
  3524 ;;		 -> buf(10), 
  3525 ;; Return value:  Size  Location     Type
  3526 ;;                  2   16[COMRAM] PTR unsigned char 
  3527 ;; Registers used:
  3528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3534 ;;      Params:         6       0       0       0       0       0       0       0       0
  3535 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3536 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3537 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3538 ;;Total ram usage:        8 bytes
  3539 ;; Hardware stack levels used:    1
  3540 ;; Hardware stack levels required when called:    2
  3541 ;; This function calls:
  3542 ;;		_utoa
  3543 ;; This function is called by:
  3544 ;;		_imprimir
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548                           	psect	text34
  3549  0003C0                     __ptext34:
  3550                           	opt stack 0
  3551  0003C0                     _itoa:
  3552                           	opt stack 20
  3553                           
  3554                           ;incstack = 0
  3555  0003C0  C012  F018         	movff	itoa@buf+1,itoa@cp+1
  3556  0003C4  C011  F017         	movff	itoa@buf,itoa@cp
  3557  0003C8  5014               	movf	itoa@val+1,w,c
  3558  0003CA  0A80               	xorlw	128
  3559  0003CC  6EF3               	movwf	prodl,c
  3560  0003CE  0E80               	movlw	128
  3561  0003D0  5CF3               	subwf	prodl,w,c
  3562  0003D2  0E00               	movlw	0
  3563  0003D4  B4D8               	btfsc	status,2,c
  3564  0003D6  5C13               	subwf	itoa@val,w,c
  3565  0003D8  B0D8               	btfsc	status,0,c
  3566  0003DA  D00C               	goto	i2l1504
  3567  0003DC  C011  FFD9         	movff	itoa@buf,fsr2l
  3568  0003E0  C012  FFDA         	movff	itoa@buf+1,fsr2h
  3569  0003E4  0E2D               	movlw	45
  3570  0003E6  6EDF               	movwf	indf2,c
  3571  0003E8  4A11               	infsnz	itoa@buf,f,c
  3572  0003EA  2A12               	incf	itoa@buf+1,f,c
  3573  0003EC  6C13               	negf	itoa@val,c
  3574  0003EE  1E14               	comf	itoa@val+1,f,c
  3575  0003F0  B0D8               	btfsc	status,0,c
  3576  0003F2  2A14               	incf	itoa@val+1,f,c
  3577  0003F4                     i2l1504:
  3578  0003F4  C012  F009         	movff	itoa@buf+1,utoa@buf+1
  3579  0003F8  C011  F008         	movff	itoa@buf,utoa@buf
  3580  0003FC  C013  F00A         	movff	itoa@val,utoa@val
  3581  000400  C014  F00B         	movff	itoa@val+1,utoa@val+1
  3582  000404  C015  F00C         	movff	itoa@base,utoa@base
  3583  000408  C016  F00D         	movff	itoa@base+1,utoa@base+1
  3584  00040C  EC67  F000         	call	_utoa	;wreg free
  3585                           
  3586                           ;	Return value of _itoa is never used
  3587  000410  0012               	return	
  3588  000412                     __end_of_itoa:
  3589                           	opt stack 0
  3590                           pclatu	equ	0xFFB
  3591                           pclath	equ	0xFFA
  3592                           tblptru	equ	0xFF8
  3593                           tblptrh	equ	0xFF7
  3594                           tblptrl	equ	0xFF6
  3595                           tablat	equ	0xFF5
  3596                           prodh	equ	0xFF4
  3597                           prodl	equ	0xFF3
  3598                           intcon	equ	0xFF2
  3599                           postinc0	equ	0xFEE
  3600                           fsr0h	equ	0xFEA
  3601                           fsr0l	equ	0xFE9
  3602                           wreg	equ	0xFE8
  3603                           postdec1	equ	0xFE5
  3604                           fsr1h	equ	0xFE2
  3605                           fsr1l	equ	0xFE1
  3606                           indf2	equ	0xFDF
  3607                           postinc2	equ	0xFDE
  3608                           postdec2	equ	0xFDD
  3609                           fsr2h	equ	0xFDA
  3610                           fsr2l	equ	0xFD9
  3611                           status	equ	0xFD8
  3612                           
  3613 ;; *************** function _utoa *****************
  3614 ;; Defined at:
  3615 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\itoa.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;  buf             2    7[COMRAM] PTR unsigned char 
  3618 ;;		 -> buf(10), 
  3619 ;;  val             2    9[COMRAM] unsigned int 
  3620 ;;  base            2   11[COMRAM] int 
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;  v               2   13[COMRAM] unsigned int 
  3623 ;;  c               1   15[COMRAM] unsigned char 
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  2    7[COMRAM] PTR unsigned char 
  3626 ;; Registers used:
  3627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3633 ;;      Params:         6       0       0       0       0       0       0       0       0
  3634 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3635 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3636 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3637 ;;Total ram usage:        9 bytes
  3638 ;; Hardware stack levels used:    1
  3639 ;; Hardware stack levels required when called:    1
  3640 ;; This function calls:
  3641 ;;		___lwdiv
  3642 ;;		___lwmod
  3643 ;; This function is called by:
  3644 ;;		_itoa
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           	psect	text35
  3649  0000CE                     __ptext35:
  3650                           	opt stack 0
  3651  0000CE                     _utoa:
  3652                           	opt stack 20
  3653                           
  3654                           ;incstack = 0
  3655  0000CE  C00A  F00E         	movff	utoa@val,utoa@v
  3656  0000D2  C00B  F00F         	movff	utoa@val+1,utoa@v+1
  3657  0000D6                     i2l1438:
  3658  0000D6  C00E  F001         	movff	utoa@v,___lwdiv@dividend
  3659  0000DA  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
  3660  0000DE  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  3661  0000E2  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  3662  0000E6  EC09  F002         	call	___lwdiv	;wreg free
  3663  0000EA  C001  F00E         	movff	?___lwdiv,utoa@v
  3664  0000EE  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
  3665  0000F2  4A08               	infsnz	utoa@buf,f,c
  3666  0000F4  2A09               	incf	utoa@buf+1,f,c
  3667  0000F6  500F               	movf	utoa@v+1,w,c
  3668  0000F8  100E               	iorwf	utoa@v,w,c
  3669  0000FA  A4D8               	btfss	status,2,c
  3670  0000FC  D7EC               	goto	i2l1438
  3671  0000FE  C008  FFD9         	movff	utoa@buf,fsr2l
  3672  000102  C009  FFDA         	movff	utoa@buf+1,fsr2h
  3673  000106  0E00               	movlw	0
  3674  000108  6EDF               	movwf	indf2,c
  3675  00010A  0608               	decf	utoa@buf,f,c
  3676  00010C  A0D8               	btfss	status,0,c
  3677  00010E  0609               	decf	utoa@buf+1,f,c
  3678  000110                     i2l1448:
  3679  000110  C00A  F001         	movff	utoa@val,___lwmod@dividend
  3680  000114  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
  3681  000118  C00C  F003         	movff	utoa@base,___lwmod@divisor
  3682  00011C  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
  3683  000120  EC53  F002         	call	___lwmod	;wreg free
  3684  000124  5001               	movf	?___lwmod,w,c
  3685  000126  6E10               	movwf	utoa@c,c
  3686  000128  C00A  F001         	movff	utoa@val,___lwdiv@dividend
  3687  00012C  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
  3688  000130  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  3689  000134  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  3690  000138  EC09  F002         	call	___lwdiv	;wreg free
  3691  00013C  C001  F00A         	movff	?___lwdiv,utoa@val
  3692  000140  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
  3693  000144  0E09               	movlw	9
  3694  000146  6410               	cpfsgt	utoa@c,c
  3695  000148  D002               	goto	i2l1033
  3696  00014A  0E07               	movlw	7
  3697  00014C  2610               	addwf	utoa@c,f,c
  3698  00014E                     i2l1033:
  3699  00014E  0E30               	movlw	48
  3700  000150  2610               	addwf	utoa@c,f,c
  3701  000152  C008  FFD9         	movff	utoa@buf,fsr2l
  3702  000156  C009  FFDA         	movff	utoa@buf+1,fsr2h
  3703  00015A  C010  FFDF         	movff	utoa@c,indf2
  3704  00015E  0608               	decf	utoa@buf,f,c
  3705  000160  A0D8               	btfss	status,0,c
  3706  000162  0609               	decf	utoa@buf+1,f,c
  3707  000164  500B               	movf	utoa@val+1,w,c
  3708  000166  100A               	iorwf	utoa@val,w,c
  3709  000168  A4D8               	btfss	status,2,c
  3710  00016A  D7D2               	goto	i2l1448
  3711                           
  3712                           ;	Return value of _utoa is never used
  3713  00016C  4A08               	infsnz	utoa@buf,f,c
  3714  00016E  2A09               	incf	utoa@buf+1,f,c
  3715  000170  0012               	return	
  3716  000172                     __end_of_utoa:
  3717                           	opt stack 0
  3718                           pclatu	equ	0xFFB
  3719                           pclath	equ	0xFFA
  3720                           tblptru	equ	0xFF8
  3721                           tblptrh	equ	0xFF7
  3722                           tblptrl	equ	0xFF6
  3723                           tablat	equ	0xFF5
  3724                           prodh	equ	0xFF4
  3725                           prodl	equ	0xFF3
  3726                           intcon	equ	0xFF2
  3727                           postinc0	equ	0xFEE
  3728                           fsr0h	equ	0xFEA
  3729                           fsr0l	equ	0xFE9
  3730                           wreg	equ	0xFE8
  3731                           postdec1	equ	0xFE5
  3732                           fsr1h	equ	0xFE2
  3733                           fsr1l	equ	0xFE1
  3734                           indf2	equ	0xFDF
  3735                           postinc2	equ	0xFDE
  3736                           postdec2	equ	0xFDD
  3737                           fsr2h	equ	0xFDA
  3738                           fsr2l	equ	0xFD9
  3739                           status	equ	0xFD8
  3740                           
  3741 ;; *************** function ___lwmod *****************
  3742 ;; Defined at:
  3743 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;  dividend        2    0[COMRAM] unsigned int 
  3746 ;;  divisor         2    2[COMRAM] unsigned int 
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;  counter         1    4[COMRAM] unsigned char 
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  2    0[COMRAM] unsigned int 
  3751 ;; Registers used:
  3752 ;;		wreg, status,2, status,0
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3758 ;;      Params:         4       0       0       0       0       0       0       0       0
  3759 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3760 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3761 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3762 ;;Total ram usage:        5 bytes
  3763 ;; Hardware stack levels used:    1
  3764 ;; This function calls:
  3765 ;;		Nothing
  3766 ;; This function is called by:
  3767 ;;		_utoa
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           
  3771                           	psect	text36
  3772  0004A6                     __ptext36:
  3773                           	opt stack 0
  3774  0004A6                     ___lwmod:
  3775                           	opt stack 20
  3776                           
  3777                           ;incstack = 0
  3778  0004A6  5004               	movf	___lwmod@divisor+1,w,c
  3779  0004A8  1003               	iorwf	___lwmod@divisor,w,c
  3780  0004AA  B4D8               	btfsc	status,2,c
  3781  0004AC  D018               	goto	i2l1137
  3782  0004AE  0E01               	movlw	1
  3783  0004B0  6E05               	movwf	___lwmod@counter,c
  3784  0004B2  D004               	goto	i2l1308
  3785  0004B4                     i2l1306:
  3786  0004B4  90D8               	bcf	status,0,c
  3787  0004B6  3603               	rlcf	___lwmod@divisor,f,c
  3788  0004B8  3604               	rlcf	___lwmod@divisor+1,f,c
  3789  0004BA  2A05               	incf	___lwmod@counter,f,c
  3790  0004BC                     i2l1308:
  3791  0004BC  AE04               	btfss	___lwmod@divisor+1,7,c
  3792  0004BE  D7FA               	goto	i2l1306
  3793  0004C0                     i2l1310:
  3794  0004C0  5003               	movf	___lwmod@divisor,w,c
  3795  0004C2  5C01               	subwf	___lwmod@dividend,w,c
  3796  0004C4  5004               	movf	___lwmod@divisor+1,w,c
  3797  0004C6  5802               	subwfb	___lwmod@dividend+1,w,c
  3798  0004C8  A0D8               	btfss	status,0,c
  3799  0004CA  D004               	goto	i2l1314
  3800  0004CC  5003               	movf	___lwmod@divisor,w,c
  3801  0004CE  5E01               	subwf	___lwmod@dividend,f,c
  3802  0004D0  5004               	movf	___lwmod@divisor+1,w,c
  3803  0004D2  5A02               	subwfb	___lwmod@dividend+1,f,c
  3804  0004D4                     i2l1314:
  3805  0004D4  90D8               	bcf	status,0,c
  3806  0004D6  3204               	rrcf	___lwmod@divisor+1,f,c
  3807  0004D8  3203               	rrcf	___lwmod@divisor,f,c
  3808  0004DA  2E05               	decfsz	___lwmod@counter,f,c
  3809  0004DC  D7F1               	goto	i2l1310
  3810  0004DE                     i2l1137:
  3811  0004DE  C001  F001         	movff	___lwmod@dividend,?___lwmod
  3812  0004E2  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  3813  0004E6  0012               	return	
  3814  0004E8                     __end_of___lwmod:
  3815                           	opt stack 0
  3816                           pclatu	equ	0xFFB
  3817                           pclath	equ	0xFFA
  3818                           tblptru	equ	0xFF8
  3819                           tblptrh	equ	0xFF7
  3820                           tblptrl	equ	0xFF6
  3821                           tablat	equ	0xFF5
  3822                           prodh	equ	0xFF4
  3823                           prodl	equ	0xFF3
  3824                           intcon	equ	0xFF2
  3825                           postinc0	equ	0xFEE
  3826                           fsr0h	equ	0xFEA
  3827                           fsr0l	equ	0xFE9
  3828                           wreg	equ	0xFE8
  3829                           postdec1	equ	0xFE5
  3830                           fsr1h	equ	0xFE2
  3831                           fsr1l	equ	0xFE1
  3832                           indf2	equ	0xFDF
  3833                           postinc2	equ	0xFDE
  3834                           postdec2	equ	0xFDD
  3835                           fsr2h	equ	0xFDA
  3836                           fsr2l	equ	0xFD9
  3837                           status	equ	0xFD8
  3838                           
  3839 ;; *************** function ___lwdiv *****************
  3840 ;; Defined at:
  3841 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;  dividend        2    0[COMRAM] unsigned int 
  3844 ;;  divisor         2    2[COMRAM] unsigned int 
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;  quotient        2    4[COMRAM] unsigned int 
  3847 ;;  counter         1    6[COMRAM] unsigned char 
  3848 ;; Return value:  Size  Location     Type
  3849 ;;                  2    0[COMRAM] unsigned int 
  3850 ;; Registers used:
  3851 ;;		wreg, status,2, status,0
  3852 ;; Tracked objects:
  3853 ;;		On entry : 0/0
  3854 ;;		On exit  : 0/0
  3855 ;;		Unchanged: 0/0
  3856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3857 ;;      Params:         4       0       0       0       0       0       0       0       0
  3858 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3859 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3860 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3861 ;;Total ram usage:        7 bytes
  3862 ;; Hardware stack levels used:    1
  3863 ;; This function calls:
  3864 ;;		Nothing
  3865 ;; This function is called by:
  3866 ;;		_utoa
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           
  3870                           	psect	text37
  3871  000412                     __ptext37:
  3872                           	opt stack 0
  3873  000412                     ___lwdiv:
  3874                           	opt stack 20
  3875                           
  3876                           ;incstack = 0
  3877  000412  0E00               	movlw	0
  3878  000414  6E06               	movwf	___lwdiv@quotient+1,c
  3879  000416  0E00               	movlw	0
  3880  000418  6E05               	movwf	___lwdiv@quotient,c
  3881  00041A  5004               	movf	___lwdiv@divisor+1,w,c
  3882  00041C  1003               	iorwf	___lwdiv@divisor,w,c
  3883  00041E  B4D8               	btfsc	status,2,c
  3884  000420  D01C               	goto	i2l1127
  3885  000422  0E01               	movlw	1
  3886  000424  6E07               	movwf	___lwdiv@counter,c
  3887  000426  D004               	goto	i2l1288
  3888  000428                     i2l1286:
  3889  000428  90D8               	bcf	status,0,c
  3890  00042A  3603               	rlcf	___lwdiv@divisor,f,c
  3891  00042C  3604               	rlcf	___lwdiv@divisor+1,f,c
  3892  00042E  2A07               	incf	___lwdiv@counter,f,c
  3893  000430                     i2l1288:
  3894  000430  AE04               	btfss	___lwdiv@divisor+1,7,c
  3895  000432  D7FA               	goto	i2l1286
  3896  000434                     i2l1290:
  3897  000434  90D8               	bcf	status,0,c
  3898  000436  3605               	rlcf	___lwdiv@quotient,f,c
  3899  000438  3606               	rlcf	___lwdiv@quotient+1,f,c
  3900  00043A  5003               	movf	___lwdiv@divisor,w,c
  3901  00043C  5C01               	subwf	___lwdiv@dividend,w,c
  3902  00043E  5004               	movf	___lwdiv@divisor+1,w,c
  3903  000440  5802               	subwfb	___lwdiv@dividend+1,w,c
  3904  000442  A0D8               	btfss	status,0,c
  3905  000444  D005               	goto	i2l1298
  3906  000446  5003               	movf	___lwdiv@divisor,w,c
  3907  000448  5E01               	subwf	___lwdiv@dividend,f,c
  3908  00044A  5004               	movf	___lwdiv@divisor+1,w,c
  3909  00044C  5A02               	subwfb	___lwdiv@dividend+1,f,c
  3910  00044E  8005               	bsf	___lwdiv@quotient,0,c
  3911  000450                     i2l1298:
  3912  000450  90D8               	bcf	status,0,c
  3913  000452  3204               	rrcf	___lwdiv@divisor+1,f,c
  3914  000454  3203               	rrcf	___lwdiv@divisor,f,c
  3915  000456  2E07               	decfsz	___lwdiv@counter,f,c
  3916  000458  D7ED               	goto	i2l1290
  3917  00045A                     i2l1127:
  3918  00045A  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3919  00045E  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3920  000462  0012               	return	
  3921  000464                     __end_of___lwdiv:
  3922                           	opt stack 0
  3923  0000                     pclatu	equ	0xFFB
  3924                           pclath	equ	0xFFA
  3925                           tblptru	equ	0xFF8
  3926                           tblptrh	equ	0xFF7
  3927                           tblptrl	equ	0xFF6
  3928                           tablat	equ	0xFF5
  3929                           prodh	equ	0xFF4
  3930                           prodl	equ	0xFF3
  3931                           intcon	equ	0xFF2
  3932                           postinc0	equ	0xFEE
  3933                           fsr0h	equ	0xFEA
  3934                           fsr0l	equ	0xFE9
  3935                           wreg	equ	0xFE8
  3936                           postdec1	equ	0xFE5
  3937                           fsr1h	equ	0xFE2
  3938                           fsr1l	equ	0xFE1
  3939                           indf2	equ	0xFDF
  3940                           postinc2	equ	0xFDE
  3941                           postdec2	equ	0xFDD
  3942                           fsr2h	equ	0xFDA
  3943                           fsr2l	equ	0xFD9
  3944                           status	equ	0xFD8
  3945                           pclatu	equ	0xFFB
  3946                           pclath	equ	0xFFA
  3947                           tblptru	equ	0xFF8
  3948                           tblptrh	equ	0xFF7
  3949                           tblptrl	equ	0xFF6
  3950                           tablat	equ	0xFF5
  3951                           prodh	equ	0xFF4
  3952                           prodl	equ	0xFF3
  3953                           intcon	equ	0xFF2
  3954                           postinc0	equ	0xFEE
  3955                           fsr0h	equ	0xFEA
  3956                           fsr0l	equ	0xFE9
  3957                           wreg	equ	0xFE8
  3958                           postdec1	equ	0xFE5
  3959                           fsr1h	equ	0xFE2
  3960                           fsr1l	equ	0xFE1
  3961                           indf2	equ	0xFDF
  3962                           postinc2	equ	0xFDE
  3963                           postdec2	equ	0xFDD
  3964                           fsr2h	equ	0xFDA
  3965                           fsr2l	equ	0xFD9
  3966                           status	equ	0xFD8
  3967                           
  3968                           	psect	rparam
  3969  0000                     pclatu	equ	0xFFB
  3970                           pclath	equ	0xFFA
  3971                           tblptru	equ	0xFF8
  3972                           tblptrh	equ	0xFF7
  3973                           tblptrl	equ	0xFF6
  3974                           tablat	equ	0xFF5
  3975                           prodh	equ	0xFF4
  3976                           prodl	equ	0xFF3
  3977                           intcon	equ	0xFF2
  3978                           postinc0	equ	0xFEE
  3979                           fsr0h	equ	0xFEA
  3980                           fsr0l	equ	0xFE9
  3981                           wreg	equ	0xFE8
  3982                           postdec1	equ	0xFE5
  3983                           fsr1h	equ	0xFE2
  3984                           fsr1l	equ	0xFE1
  3985                           indf2	equ	0xFDF
  3986                           postinc2	equ	0xFDE
  3987                           postdec2	equ	0xFDD
  3988                           fsr2h	equ	0xFDA
  3989                           fsr2l	equ	0xFD9
  3990                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     39      77
    BANK0           160     12      12
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> buf(COMRAM[10]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> buf(COMRAM[10]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> buf(COMRAM[10]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 10
		 -> buf(COMRAM[10]), 

    getsI2C@rdptr	PTR unsigned char  size(2) Largest target is 2
		 -> acc_z(COMRAM[2]), acc_y(COMRAM[2]), acc_x(COMRAM[2]), 

    putsUSART@data	PTR unsigned char  size(2) Largest target is 10
		 -> enter(COMRAM[2]), buf(COMRAM[10]), 

    data_acc@ptr	PTR int  size(2) Largest target is 2
		 -> acc_z(COMRAM[2]), acc_y(COMRAM[2]), acc_x(COMRAM[2]), 

    I2C_read_data_acc@rdptr	PTR unsigned char  size(2) Largest target is 2
		 -> acc_z(COMRAM[2]), acc_y(COMRAM[2]), acc_x(COMRAM[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> buf(COMRAM[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Interruption in COMRAM

    _startTimer->_WriteTimer0
    _timer0_isr->_WriteTimer0
    _readData->_I2C_read_data_acc
    _I2C_read_data_acc->i2_I2C_send
    i2_I2C_send->i2_WriteI2C
    i2_WriteI2C->i2_IdleI2C
    _getsI2C->_ReadI2C
    _imprimir->_itoa
    _putsUSART->_WriteUSART
    _itoa->_utoa
    _utoa->___lwdiv

Critical Paths under _main in BANK0

    _init_UART->_OpenUSART
    _init_I2C->_I2C_open
    _I2C_open->_OpenI2C
    _init_ACC->_I2C_turn_on_acc
    _I2C_turn_on_acc->_I2C_write_reg_acc
    _I2C_write_reg_acc->_I2C_send
    _I2C_send->_WriteI2C
    _WriteI2C->_IdleI2C

Critical Paths under _Interruption in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interruption in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interruption in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interruption in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interruption in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interruption in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interruption in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interruption in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1348
                           _init_ACC
                           _init_I2C
                          _init_UART
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            4     4      0     375
                                              6 BANK0      4     4      0
                          _OpenUSART
                          _baudUSART
 ---------------------------------------------------------------------------------
 (2) _baudUSART                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            6     4      2     284
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             0     0      0     302
                           _I2C_open
 ---------------------------------------------------------------------------------
 (2) _I2C_open                                             3     1      2     302
                                              2 BANK0      3     1      2
                           _CloseI2C
                            _OpenI2C
 ---------------------------------------------------------------------------------
 (3) _OpenI2C                                              2     1      1     108
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _CloseI2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ACC                                             0     0      0     671
                    _I2C_turn_on_acc
 ---------------------------------------------------------------------------------
 (2) _I2C_turn_on_acc                                      4     1      3     671
                                              8 BANK0      4     1      3
                  _I2C_write_reg_acc
 ---------------------------------------------------------------------------------
 (3) _I2C_write_reg_acc                                    2     1      1     391
                                              6 BANK0      2     1      1
                           _I2C_send
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (4) _I2C_send                                             3     3      0      91
                                              3 BANK0      3     3      0
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (5) _WriteI2C                                             2     2      0      22
                                              1 BANK0      2     2      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (4) _IdleI2C                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Interruption                                        15    15      0    3145
                                             24 COMRAM    15    15      0
                           _imprimir
                           _readData
                         _timer0_isr
                           _uart_isr
 ---------------------------------------------------------------------------------
 (8) _uart_isr                                             1     1      0     211
                                              4 COMRAM     1     1      0
                          _ReadUSART
                         _WriteUSART
                           _endTimer
                         _startTimer
 ---------------------------------------------------------------------------------
 (9) _startTimer                                           0     0      0     181
                         _OpenTimer0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (10) _OpenTimer0                                          1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _endTimer                                             0     0      0       0
                        _CloseTimer0
 ---------------------------------------------------------------------------------
 (10) _CloseTimer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ReadUSART                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _timer0_isr                                           0     0      0     151
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (10) _WriteTimer0                                         4     2      2     151
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _readData                                             0     0      0    1476
                  _I2C_read_data_acc
 ---------------------------------------------------------------------------------
 (9) _I2C_read_data_acc                                    3     1      2    1476
                                              6 COMRAM     3     1      2
                           _data_acc
                            _getsI2C
                         i2_I2C_send
                          i2_IdleI2C
 ---------------------------------------------------------------------------------
 (10) i2_I2C_send                                          3     3      0      91
                                              3 COMRAM     3     3      0
                          i2_IdleI2C
                         i2_WriteI2C
 ---------------------------------------------------------------------------------
 (11) i2_WriteI2C                                          2     2      0      22
                                              1 COMRAM     2     2      0
                          i2_IdleI2C
 ---------------------------------------------------------------------------------
 (10) i2_IdleI2C                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _getsI2C                                             4     1      3     999
                                              1 COMRAM     4     1      3
                            _ReadI2C
 ---------------------------------------------------------------------------------
 (11) _ReadI2C                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _data_acc                                            5     3      2      83
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (8) _imprimir                                             0     0      0    1307
                               _itoa
                          _putsUSART
 ---------------------------------------------------------------------------------
 (9) _putsUSART                                            2     0      2     151
                                              1 COMRAM     2     0      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (9) _WriteUSART                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _itoa                                                 8     2      6    1156
                                             16 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (10) _utoa                                                9     3      6     887
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (11) ___lwmod                                             5     1      4     211
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (11) ___lwdiv                                             7     3      4     317
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_ACC
     _I2C_turn_on_acc
       _I2C_write_reg_acc
         _I2C_send
           _IdleI2C
           _WriteI2C
             _IdleI2C
         _IdleI2C
   _init_I2C
     _I2C_open
       _CloseI2C
       _OpenI2C
   _init_UART
     _OpenUSART
     _baudUSART

 _Interruption (ROOT)
   _imprimir
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     _putsUSART
       _WriteUSART
   _readData
     _I2C_read_data_acc
       _data_acc
       _getsI2C
         _ReadI2C
       i2_I2C_send
         i2_IdleI2C
         i2_WriteI2C
           i2_IdleI2C
       i2_IdleI2C
   _timer0_isr
     _WriteTimer0
   _uart_isr
     _ReadUSART
     _WriteUSART
     _endTimer
       _CloseTimer0
     _startTimer
       _OpenTimer0
       _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      C       C       5        7.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     27      4D       1       81.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      59      20        0.0%
DATA                 0      0      59       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Fri Dec 19 11:48:10 2014

                _SSPSTATbits 000FC7                           l52 0798                  __CFG_BORV$0 000000  
                 i2_WriteI2C 02F6                 __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000  
               __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000    I2C_turn_on_acc@full_scale 0069  
                        l170 0622                          l263 0634                          l266 0650  
                        l451 02A2                          l460 02F4                          l455 02BC  
                        l456 02BE                          l457 02CA                          l458 02CC  
                        l582 01F2                          l585 01AC                          l594 01E0  
               __CFG_CPB$OFF 000000                 __CFG_CPD$OFF 000000                 __CFG_BOR$OFF 000000  
       __size_of_WriteTimer0 0012                          _buf 0038                          _mid 0048  
                        wreg 000FE8                  ?i2_I2C_send 0001                 __CFG_LVP$OFF 000000  
                 _CaracterRx 0028                 __CFG_WDT$OFF 000000                         l1904 0182  
                       l1922 01B8                         l1942 0604                         l1936 01F0  
                       l1890 07E2                         l1980 0292                         l1988 02A4  
                       _LATC 000F8B                         u1620 01EC                         _PIE1 000F9D  
                       i2l64 0094                         i2l98 053C                 __CFG_PWRT$ON 000000  
                       _main 0780                         _itoa 03C0                         fsr0h 000FEA  
                       fsr1h 000FE2                         fsr0l 000FE9                         fsr2h 000FDA  
                       fsr1l 000FE1                         indf2 000FDF                         fsr2l 000FD9  
                       _utoa 00CE          baudUSART@baudconfig 0060                         pclat 000FFA  
                       prodh 000FF4                         prodl 000FF3             __end_of_I2C_send 062A  
           __end_of_I2C_open 07B4                         start 0018                __CFG_IESO$OFF 000000  
            __end_of_IdleI2C 07F4          __end_of_CloseTimer0 0854                __CFG_MCLRE$ON 000000  
            __end_of_ReadI2C 06D4              __end_of_OpenI2C 071E                __CFG_PLLDIV$5 000000  
                      ?_main 0001                        ?_itoa 0011                        ?_utoa 0008  
                      _T0CON 000FD5              __end_of___lwdiv 0464                        i2l104 0562  
            __end_of___lwmod 04E8                        i2l302 0238                        i2l311 025E  
                      i2l170 073C                        i2l314 0264                        i2l308 025A  
                      i2l413 075C                        i2l414 075E                        i2l514 037A  
                      i2l523 03B0                        i2l293 01FC                        i2l518 03BE  
                      i2l560 06CA                        i2l296 0214                        i2l561 06CC  
                      i2l481 0770                        i2l468 06D4                        i2l582 0364  
                      i2l585 0326                        i2l594 0352                        _RCREG 000FAE  
                      _RCSTA 000FAB                        _TMR0H 000FD7                        _TMR0L 000FD6  
                      _SPBRG 000FAF                __CFG_USBDIV$1 000000                        _TRISC 000F94  
                      _TXREG 000FAD                        _TXSTA 000FAC                __CFG_WRT0$OFF 000000  
              __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000  
            __end_of_getsI2C 03C0               __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000  
             __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000  
         __size_ofi2_IdleI2C 0010                __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000  
              __CFG_WRTD$OFF 000000                        _acc_x 0042                        _acc_y 0044  
                      _acc_z 0046               __CFG_EBTRB$OFF 000000                        _enter 004C  
                      _gyr_x 002A                        _gyr_y 002C                        _gyr_z 002E  
                      tablat 000FF5                        utoa@c 0010                        utoa@v 000E  
                      status 000FD8             __end_of_CloseI2C 0858               WriteUSART@data 0001  
            __initialization 059A          __size_ofi2_I2C_send 0024                 __end_of_main 079A  
               __end_of_itoa 0412                 __end_of_utoa 0172                  ?i2_WriteI2C 0001  
                     ??_main 006C                       ??_itoa 0017                       ??_utoa 000E  
              __activetblptr 000000              __CFG_CCP2MX$OFF 000000     I2C_turn_on_acc@data_rate 0068  
           __end_of_WriteI2C 01F4                  OpenI2C@slew 0060                       i2l1033 014E  
                     i2l1310 04C0                       i2l1127 045A                       i2l1137 04DE  
                     i2l1314 04D4                       i2l1306 04B4                       i2l1308 04BC  
                     i2l1412 0386                       i2l1404 0368                       i2l1420 03B4  
                     i2l1504 03F4                       i2l1416 03A6                       i2l1290 0434  
                     i2l1370 0812                       i2l1286 0428                       i2l1438 00D6  
                     i2l1288 0430                       i2l1448 0110                   _OpenTimer0 0742  
                     i2l1298 0450                       i2l1810 0304                       i2l1662 0552  
                     i2l1842 0362                       i2l1828 0332                       i2l1870 023C  
                     i2l1848 0724                       i2l1880 006C                       i2l1796 0828  
                     i2l1868 021E         I2C_read_data_acc@reg 0009                    ??_IdleI2C 0060  
         __size_of_ReadUSART 001E                  _CloseTimer0 084E                       _SPBRGH 000FB0  
                     _SSPADD 000FC8                       _SSPBUF 000FC9             __end_of_data_acc 05FC  
                  ??_ReadI2C 0001                ?_Interruption 0001               __CFG_VREGEN$ON 000000  
                  ??_OpenI2C 0061             __end_of_endTimer 084E               __CFG_XINST$OFF 000000  
         __size_of_OpenUSART 0080            __end_ofi2_IdleI2C 0838             __end_of_init_I2C 07E2  
           __end_of_init_ACC 07CE             OpenTimer0@config 0001                    ??___lwdiv 0005  
                  ??___lwmod 0005             __end_of_readData 0682                       clear_0 05A0  
                     _timer0 004A             __end_of_imprimir 059A                    ??_getsI2C 0005  
                     itoa@cp 0017                 __pdataCOMRAM 0048             __end_of_uart_isr 0564  
                  ?_I2C_send 0001                    ?_I2C_open 0062                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8     __size_of_I2C_turn_on_acc 0040  
                 __accesstop 0060      __end_of__initialization 05C6               ??_Interruption 0019  
            __CFG_PBADEN$OFF 000000          __size_ofi2_WriteI2C 0070           __size_of_baudUSART 000A  
                 _WriteUSART 0806               __pcstackCOMRAM 0001            __end_of_ReadUSART 0780  
               ??i2_I2C_send 0004                   ??_I2C_send 0063                   ??_I2C_open 0064  
         I2C_open@baud_clock 0063                ReadUSART@data 0001                    ?_CloseI2C 0001  
          __end_of_OpenUSART 02F6  I2C_turn_on_acc@sleep_wakeup 006A                  ?_OpenTimer0 0001  
         __size_of_init_UART 0042               init_UART@spbrg 0066           __end_ofi2_I2C_send 0742  
           WriteTimer0@timer 0003                putsUSART@data 0002                      _BAUDCON 000FB8  
              ??_WriteTimer0 0003                    ?_WriteI2C 0001                i2I2C_send@reg 0005  
        init_UART@baudconfig 0069                    ?_data_acc 0001            __end_of_baudUSART 0842  
                  ?_endTimer 0001                      i2u48_45 05E0                   ??_CloseI2C 0060  
         __size_of_putsUSART 0026                      _SSPCON1 000FC6                      _SSPCON2 000FC5  
              _microsegundos 0030                      _SSPSTAT 000FC7                    ?_init_I2C 0001  
                  ?_init_ACC 0001                      _IdleI2C 07E2                    ?_readData 0001  
                    _ReadI2C 06AC                    ?_imprimir 0001            ??_I2C_turn_on_acc 006B  
                    _OpenI2C 06FA                      __Hparam 0000         I2C_write_reg_acc@reg 0067  
                    __Lparam 0000                  ?_WriteUSART 0001                    ?_uart_isr 0001  
                    ___lwdiv 0412                      ___lwmod 04A6              __CFG_STVREN$OFF 000000  
               ??i2_WriteI2C 0002                      __pcinit 059A                   ??_WriteI2C 0061  
                    __ramtop 0800          __size_of_OpenTimer0 0020                      _getsI2C 0366  
                    __ptext0 0780                      __ptext1 0464                      __ptext2 0838  
                    __ptext3 0276                      __ptext4 07CE                      __ptext5 079A  
                    __ptext6 06FA                      __ptext7 0854                      __ptext8 07B4  
                    __ptext9 04E8            __end_of_init_UART 04A6                    _T0CONbits 000FD5  
       __end_of_Interruption 00CE                   ??_data_acc 0003          __end_of_WriteTimer0 0806  
                 ??_endTimer 0001               __pintcode_body 001C         end_of_initialization 05C6  
                 ??_init_I2C 0065                   ??_init_ACC 006C                 ?_CloseTimer0 0001  
                 ??_readData 000A                      itoa@buf 0011                      itoa@val 0013  
                    int_func 001C                   ??_imprimir 0019           __end_ofi2_WriteI2C 0366  
                  _RCSTAbits 000FAB                   ??_uart_isr 0005                      postdec1 000FE5  
                    postdec2 000FDD                   _timer0_isr 0818                      postinc0 000FEE  
                    postinc2 000FDE            __end_of_putsUSART 06FA            _I2C_read_data_acc 01F4  
                    utoa@buf 0008                      utoa@val 000A                    i2_IdleI2C 0828  
         ?_I2C_read_data_acc 0007                    _PORTCbits 000F82                 I2C_send@data 0063  
               I2C_open@slew 0062                    _TRISBbits 000F93                    _TRISCbits 000F94  
        ??_I2C_read_data_acc 0009          __size_of_WriteUSART 0012            __size_of_I2C_send 002E  
          __size_of_I2C_open 001A                   _startTimer 0682                    _TXSTAbits 000FAC  
  __end_of_I2C_read_data_acc 0276                __pidataCOMRAM 0842                   ?i2_IdleI2C 0001  
                _WriteTimer0 07F4            _I2C_write_reg_acc 062A           ?_I2C_write_reg_acc 0066  
        start_initialization 059A                    _ReadUSART 0762             WriteI2C@data_out 0062  
        ??_I2C_write_reg_acc 0067                 ??_OpenTimer0 0001            __size_of_CloseI2C 0004  
                  _OpenUSART 0276       I2C_write_reg_acc@valor 0066                  ?_timer0_isr 0001  
      __size_of_Interruption 00C6    __end_of_I2C_write_reg_acc 0656             __CFG_LPT1OSC$OFF 000000  
         __end_of_OpenTimer0 0762            __size_of_WriteI2C 0082                  __pbssCOMRAM 0028  
                 ?_ReadUSART 0001                __pcstackBANK0 0060              _I2C_turn_on_acc 04E8  
          __size_of_data_acc 0030                  ?_startTimer 0001                    _baudUSART 0838  
          __size_of_endTimer 0006                     ?_IdleI2C 0001              init_UART@config 0068  
                 ?_OpenUSART 0060                     ?_ReadI2C 0001                 _Interruption 0008  
          __size_of_init_I2C 0014            __size_of_init_ACC 001A         __size_of_CloseTimer0 0006  
          __size_of_readData 002C                     ?_OpenI2C 0060             ___lwdiv@dividend 0001  
          __size_of_imprimir 0036                 ??_WriteUSART 0001   __size_of_I2C_read_data_acc 0082  
                  __pintcode 0008                     ?___lwdiv 0001                     ?___lwmod 0001  
          __size_of_uart_isr 003C                  ??i2_IdleI2C 0001                     ?_getsI2C 0002  
          WriteTimer0@timer0 0001          I2C_turn_on_acc@mode 006B               i2I2C_send@data 0004  
                   _I2C_send 05FC                     _I2C_open 079A                    _init_UART 0464  
           ___lwdiv@quotient 0005          __size_of_timer0_isr 0010           __end_of_WriteUSART 0818  
                 ?_baudUSART 0001                 _milisegundos 0032                     _PIE1bits 000F9D  
     I2C_read_data_acc@rdptr 0007                     i2u136_40 035E                     i2u147_40 005E  
                   i2u147_48 0060                     i2u149_40 0080                     i2u149_48 0082  
                   _PIR1bits 000F9E                     _PIR2bits 000FA1             __CFG_WDTPS$32768 000000  
 __size_of_I2C_write_reg_acc 002C                  I2C_send@reg 0064          __size_of_startTimer 002A  
                  _putsUSART 06D4      __end_of_I2C_turn_on_acc 0528                  ??_ReadUSART 0001  
          I2C_open@sync_mode 0064                   ?_init_UART 0001                     _CloseI2C 0854  
                  copy_data0 05BA             OpenI2C@sync_mode 0061                  ??_OpenUSART 0062  
           __size_of_IdleI2C 0012              OpenUSART@config 0065             __size_of_ReadI2C 0028  
                   __Hrparam 0000             i2I2C_send@status 0006             __size_of_OpenI2C 0024  
                   __Lrparam 0000                getsI2C@length 0004             __size_of___lwdiv 0052  
           __size_of___lwmod 0042                     _WriteI2C 0172                 ?_WriteTimer0 0001  
                 ?_putsUSART 0002             __size_of_getsI2C 005A                  data_acc@ptr 0001  
                   _data_acc 05CC              ___lwdiv@divisor 0003                     _endTimer 0848  
            ___lwdiv@counter 0007                     __ptext10 062A                     __ptext11 05FC  
                   __ptext20 0762                     __ptext12 0172                     __ptext21 0818  
                   __ptext13 07E2                     __ptext30 05CC                     __ptext22 07F4  
                   __ptext31 0564                     __ptext23 0656                     __ptext15 0528  
                   __ptext32 06D4                     __ptext24 01F4                     __ptext16 0682  
                   __ptext33 0806                     __ptext25 071E                     __ptext17 0742  
                   __ptext34 03C0                     __ptext26 02F6                     __ptext18 0848  
                   __ptext35 00CE                     __ptext27 0828                     __ptext19 084E  
                   __ptext36 04A6                     __ptext28 0366                     __ptext37 0412  
                   __ptext29 06AC                  ??_baudUSART 0060                     _init_I2C 07CE  
                   _init_ACC 07B4                     _readData 0656                __size_of_main 001A  
              __size_of_itoa 0052                __size_of_utoa 00A4                     _imprimir 0564  
                   _segundos 0034                     _uart_isr 0528                 ??_timer0_isr 0005  
      __CFG_CPUDIV$OSC1_PLL2 000000             ?_I2C_turn_on_acc 0068                   _INTCONbits 000FF2  
             OpenUSART@spbrg 0060                  ??_init_UART 0066                   i2_I2C_send 071E  
                   itoa@base 0015                 getsI2C@rdptr 0002                 ??_startTimer 0005  
                   intlevel2 0000           __end_of_timer0_isr 0828             ___lwmod@dividend 0001  
         i2WriteI2C@data_out 0003           __end_of_startTimer 06AC                  ??_putsUSART 0004  
                   utoa@base 000C                  _temperature 0037              ___lwmod@divisor 0003  
             I2C_send@status 0065              ___lwmod@counter 0005                  _SSPCON1bits 000FC6  
                _SSPCON2bits 000FC5           __CFG_FOSC$HSPLL_HS 000000                ??_CloseTimer0 0001  
               _USART_Status 0036  
